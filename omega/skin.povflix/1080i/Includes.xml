<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes> 
    <expression name="IsActualKeyboardActive">Window.IsActive(virtualkeyboard) + String.IsEmpty(Window(Home).Property(SpaceSearchTerm)) + String.IsEmpty(Window(Home).Property(BackspaceSearchTerm))</expression>
    <expression name="home_widget_updating">Container(13003).IsUpdating | Container(13004).IsUpdating | Container(13005).IsUpdating | Container(13006).IsUpdating | Container(13007).IsUpdating | Container(23003).IsUpdating | Container(23004).IsUpdating | Container(23005).IsUpdating | Container(23006).IsUpdating | Container(23007).IsUpdating | Container(33003).IsUpdating | Container(33004).IsUpdating | Container(33005).IsUpdating | Container(33006).IsUpdating | Container(33007).IsUpdating | Container(43003).IsUpdating | Container(43004).IsUpdating | Container(43005).IsUpdating | Container(43006).IsUpdating | Container(43007).IsUpdating | Container(53003).IsUpdating | Container(53004).IsUpdating | Container(53005).IsUpdating | Container(53006).IsUpdating | Container(53007).IsUpdating | Container(63003).IsUpdating | Container(63004).IsUpdating | Container(63005).IsUpdating | Container(63006).IsUpdating | Container(63007).IsUpdating</expression>
    <expression name="DBTvideos">String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,set) | !String.IsEmpty(ListItem.ChannelName)</expression>
    <expression name="DBTvideosImage">String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,set)</expression>
    <expression name="DBTother">![String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,set)]</expression>
     <expression name="MainSubMenuHasFocus">Control.HasFocus(3001) | Control.HasFocus(302) | Control.HasFocus(30222) | Control.HasFocus(300)</expression>
     <expression name="HubMenu">Control.HasFocus(400) + Control.HasFocus(401)</expression>
     <expression name="isMenuOpen">[Control.HasFocus(400) | Control.HasFocus(401) | Control.HasFocus(300)]</expression>
     <expression name="NetflixListHubs">Window.IsActive(2111) | Window.IsActive(2112) | Window.IsActive(2113)| Window.IsActive(2114) | Window.IsActive(2115)| Window.IsActive(2116) | Window.IsActive(2117) |  Window.IsActive(2118) | Window.IsVisible(4010) | Window.IsVisible(4020)</expression>
     <expression name="ListHubsActive">Window.IsActive(2111) | Window.IsActive(2112) | Window.IsActive(2113)| Window.IsActive(2114) | Window.IsActive(2115)| Window.IsActive(2116) | Window.IsActive(2117) | Window.IsActive(2118)</expression>
     <expression name="TVSpotlight">!String.IsEmpty(Skin.String(spotlighttvshows.path)) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetspotlighttype),TVShows) + [Container(1505).IsUpdating | Integer.IsGreater(Container(1505).NumItems,0)]</expression>
     <expression name="MovieSpotlight">!String.IsEmpty(Skin.String(spotlightmovies.path)) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetspotlighttype),Movies) + [Container(1506).IsUpdating | Integer.IsGreater(Container(1506).NumItems,0)]</expression>
     <expression name="LiveTVSpotlight">String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetspotlighttype),LiveTV)</expression>
     <expression name="NextUpTVSpotlight">String.IsEmpty(Window(Home).Property(SpotReturnHome)) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetspotlighttype),NextAiredTV) + [Container(1507).IsUpdating | Integer.IsGreater(Container(1507).NumItems,0)]</expression>

     <expression name="HomeSpotFocusContainers">[ControlGroup(51507).HasFocus | Control.HasFocus(1505) | Control.HasFocus(1506) | Control.HasFocus(400) | Control.HasFocus(401) | Control.HasFocus(300) | ControlGroup(900).HasFocus | Control.HasFocus(30222) | Control.IsVisible(1505) | Control.IsVisible(1506) | Control.IsVisible(901)]</expression>
     <expression name="HomeSpotFocusWidgets">String.IsEmpty(Window(Home).Property(SpotReturnHome)) + [ControlGroup(330).HasFocus + !String.IsEqual(Container(330).CurrentItem,1)] </expression>
     <expression name="noSubMenu">!String.IsEqual(Container(300).ListItem.Property(hasSubmenu),true) | [String.IsEqual(Container(300).ListItem.Property(hasSubmenu),true) + !Integer.IsGreater(Container(30222).NumItems,0)]</expression>
     <expression name="HomeSpotscrollup">String.IsEmpty(Window(Home).Property(SpotReturnHome)) + !String.IsEqual(Window(Home).Property(SpotFocus),true) + String.IsEqual(Container(330).CurrentItem,1) + String.IsEmpty(Window(Home).Property(spothubscroll))</expression>
     <expression name="HomeSpotscrolldown">String.IsEmpty(Window(Home).Property(SpotReturnHome)) + [ControlGroup(330).HasFocus + !Control.HasFocus(3337)] + Integer.IsGreater(Container(330).CurrentItem,1) + String.IsEmpty(Window(Home).Property(spothubscroll))</expression>
     <expression name="NotSettingsWeather">![String.IsEqual(Container(300).ListItem.Property(widget),Weather) + [!String.IsEqual(Container(300).ListItem.Property(widgetType),Default) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget)]] + ![String.IsEqual(Container(300).ListItem.Property(widget),Settings) + [!String.IsEqual(Container(300).ListItem.Property(widgetType),Default) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)]] +  !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</expression>
   <!--  <expression name="NotSettingsWeather">!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</expression> -->
    <expression name="tmdbu">String.IsEmpty(Window(Home).Property(TMDbHelper.IsUpdating))</expression>
    <expression name="clearlogo_container_updating">[!Control.HasFocus(53002) | [Container(53002).IsUpdating + !Integer.IsGreater(Container(53002).NumItems,0)]] + [!Control.HasFocus(53003) | [Container(53003).IsUpdating + !Integer.IsGreater(Container(53003).NumItems,0)]] + [!Control.HasFocus(53007) | [Container(53007).IsUpdating + !Integer.IsGreater(Container(53007).NumItems,0)]] + [!Control.HasFocus(53004) | [Container(53004).IsUpdating + !Integer.IsGreater(Container(53004).NumItems,0)]] + [!Control.HasFocus(53006) | [Container(53006).IsUpdating + !Integer.IsGreater(Container(53006).NumItems,0)]] + [!Control.HasFocus(53005) | [Container(53005).IsUpdating + !Integer.IsGreater(Container(53005).NumItems,0)]] + [!Control.HasFocus(53008) | [Container(53008).IsUpdating + !Integer.IsGreater(Container(53008).NumItems,0)]] + [!Control.HasFocus(53009) | [Container(53009).IsUpdating + !Integer.IsGreater(Container(53009).NumItems,0)]]</expression>
    <include file="Defaults.xml" />
    <include file="Includes_Auramod.xml" />
    <include file="DialogButtonMenu-Includes.xml" />
    <include file="DialogVideoInfo-Includes.xml" />
    <include file="Includes_ImagesMods.xml" />
    <include file="Includes_PVRInfoMods.xml" />
    <include file="Includes_WidgetMods.xml" />
    <include file="Includes_Animations.xml" />
    <include file="Includes_Defs.xml" />
    <include file="Includes_Dialog.xml" />
    <include file="Includes_Global.xml" />
    <include file="Includes_Items.xml" />
    <include file="Includes_Images.xml" />
    <include file="Includes_Labels.xml" />
    <include file="Includes_NextAired.xml" />
    <include file="Includes_Object.xml" />
    <include file="Includes_OSD.xml" />
    <include file="Includes_Statusbar.xml" />
    <include file="IncludesBingieSearch.xml" />
    <include file="Includes_Topbar-Netflix.xml" />
    <include file="Includes_Home.xml" />
    <include file="Includes_VideoLyrics.xml" />
    <include file="Includes_Weather.xml" />
    <include condition="!Skin.HasSetting(DisableNetflixHome)" file="Includes_Widgets.xml" />
    <include condition="Skin.HasSetting(DisableNetflixHome)" file="Includes_Widgets_Netflix.xml" />
    <include file="Includes_View.xml" />
    <include file="Includes_View_List.xml" />
    <include file="Includes_View_Posters.xml" />
    <include file="script-skinshortcuts-includes.xml"/>
    <include file="Constants_Main.xml" />
    <include condition="Skin.HasSetting(MouseMode)" file="Constants_Home_Mouse.xml" />
    <include condition="!Skin.HasSetting(MouseMode) + !Skin.HasSetting(SubmenuLabel)" file="Constants_Home_NoMouse.xml" />
    <include condition="!Skin.HasSetting(MouseMode) + Skin.HasSetting(SubmenuLabel)" file="Constants_Home_NoMouse_BigSubmenu.xml" />

    <variable name="ColorHighlight">
        <value condition="[Skin.HasSetting(CycleColors) | Skin.HasSetting(MatchColors)] + !String.IsEqual(Window(home).Property(SEVEN_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageColorSEVEN)) + !String.IsEqual(Window(home).Property(ImageColorSEVEN),ffffffff) + !String.IsEqual(Window(home).Property(ImageColorSEVEN),ff000000)">$INFO[Window(home).Property(ImageColorSEVEN)]</value>
        <value condition="!String.IsEmpty(Skin.String(focuscolor.name))">$INFO[Skin.String(focuscolor.name)]</value>
        <value>Highlight</value>
    </variable>
    <variable name="ColorHighlight2">
        <value condition="[Skin.HasSetting(CycleColors) | Skin.HasSetting(MatchColors)] + !String.IsEqual(Window(home).Property(SEVEN_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageCColorSEVEN)) + !String.IsEqual(Window(home).Property(ImageCColorSEVEN),ffffffff) + !String.IsEqual(Window(home).Property(ImageCColorSEVEN),ff000000)">$INFO[Window(home).Property(ImageCColorSEVEN)]</value>
        <value condition="!String.IsEmpty(Skin.String(gradientcolor.name))">$INFO[Skin.String(gradientcolor.name)]</value>
        <value>GradientHighlight</value>
    </variable>

    <variable name="ColorOverlay">
        <value condition="Skin.HasSetting(DisableOverlayColor)">FFffffff</value>
        <value condition="Skin.HasSetting(MatchOverlayColors) + !String.IsEqual(Window(home).Property(SEVEN_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageColorSEVEN)) + !String.IsEqual(Window(home).Property(ImageColorSEVEN),ffffffff) + !String.IsEqual(Window(home).Property(ImageColorSEVEN),ff000000)">$INFO[Window(home).Property(ImageColorSEVEN)]</value>
        <value condition="Skin.HasSetting(MatchOverlayColors)">$VAR[ColorHighlight]</value>
        <value condition="!String.IsEmpty(Skin.String(overlaycolor.name))">$INFO[Skin.String(overlaycolor.name)]</value>
        <value>Overlay</value>
    </variable>

    <include name="Dimensions_Fullscreen">
        <left>0</left>
        <top>0</top>
        <width>1920</width>
        <height>1080</height>
    </include>
</includes>
