<?xml version="1.0" encoding="UTF-8"?>
<includes>

  <include name="defs_ratings_label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
  </include>

  <include name="netflix_largewidgets_top">
    <top>80</top>
  </include>
  <include name="netflix_largewidgets_height">
    <height>0</height>
  </include>
  <include name="netflix_largewidgets_height_hub">
    <height>40</height>
  </include>
  <include name="netflix_smallwidgets_top">
    <top>-40</top>
  </include>
  <include name="Widget_Items_menu_Big_Height">
    <height>420</height>
  </include>
  <include name="Widget_Items_menu_Small_Height">
    <height>210</height>
  </include>
  <include name="Widget_Items_menu_Small_Height_poster">
    <height>270</height>
  </include>
  <include name="netflix_landscape_panel_top">
    <top>-10</top>
  </include>
  <include name="netflix_landscape_panel_height">
    <height>10</height>
  </include>
  <include name="netflix_landscape_panel_top_2">
    <top>70</top>
  </include>
  <include name="netflix_landscape_panel_height_2">
    <height>430</height>
  </include>
  <include name="netflix_landscape_panel_top_hub">
    <top>-10</top>
  </include>
  <include name="netflix_landscape_panel_height_hub">
    <height>35</height>
  </include>
  <include name="netflix_landscape_panel_top_2_hub">
    <top>70</top>
  </include>
  <include name="netflix_landscape_panel_height_2_hub">
    <height>430</height>
  </include>
  <include name="Widget_Movement_Default">
    <movement>$PARAM[movement]</movement>
  </include>
  <include name="Widget_Movement_Showcase">
    <movement>1</movement>
  </include>
  <include name="Widget_Busy_Top_Mouse">
    <top>455</top>
  </include>
  <include name="Widget_Label_height">
    <top>655</top>
  </include>
  <include name="Widget_Label_height_hub">
    <top>250</top>
  </include>
  <include name="spotlightfull_aura_top">
    <top>-650</top>
  </include>
  <include name="spotlightfull_buttons_aura_top">
    <top>-250</top>
  </include>
  <include name="spotlightfull_buttons_top">
    <top>390</top>
  </include>
   <include name="AuraWidget_Items_LandscapePanel_Height">
     <height>440</height>
   </include>
   <include name="AuraWidget_Items_LandscapePanel_Height_small">
     <height>485</height>
   </include>
   <include name="AuraWidget_Items_Landscapesmall_Big_Height">
     <height>270</height>
   </include>
   <include name="AuraWidget_Items_Landscapesmall_Big_Height_small">
     <height>315</height>
   </include>
   <include name="AuraWidget_Items_genre_Big_Height">
     <height>380</height>
   </include>
   <include name="AuraWidget_Items_genre_Big_Height_small">
     <height>425</height>
   </include>
   <include name="AuraWidget_Items_LandscapeWide">
     <height>510</height>
   </include>
   <include name="AuraWidget_Items_LandscapeWide_small">
     <height>510</height>
   </include>
   <include name="AuraWidget_Items_Landscape_Big_Height_small">
     <height>405</height>
   </include>
   <include name="AuraWidget_Items_Landscape_Big_Height">
     <height>360</height>
   </include>
   <include name="AuraWidget_Items_Poster_Big">
     <height>380</height>
   </include>
   <include name="AuraWidget_Items_Poster_Big_small">
     <height>425</height>
   </include>
   <include name="AuraWidget_Items_Category_Big_Height">
     <height>230</height>
   </include>
   <include name="AuraWidget_Items_Category_Big_Height_small">
     <height>275</height>
   </include>
   <include name="AuraWidget_Items_Default">
     <height>425</height>
   </include>
   <include name="AuraHub_top">
     <top>140</top>
   </include>
   <include name="AuraHub_Small_top">
     <top>100</top>
   </include>
   <include name="AuraHub_height">
     <height>935</height>
   </include>
   <include name="AuraHub_Small_height">
     <height>975</height>
   </include>

    <variable name="search_widgets">
	<value>skinshortcuts-template-searchlist</value>
    </variable>
    <variable name="searchhistorydf">
	<value>plugin://plugin.video.themoviedb.helper/?fanarttv=True&amp;info=dir_search&amp;nextpage=True&amp;type=movie</value>
    </variable>

    <variable name="searchhistory">
	<value condition="String.IsEmpty(Skin.String(CustomSearchTerm))">plugin://plugin.video.themoviedb.helper/?fanarttv=True&amp;info=dir_search&amp;nextpage=True&amp;type=movie</value>
    </variable>
    <variable name="autocomplete">
        <value condition="Window.IsVisible(1136) + String.IsEmpty(Skin.String(CustomSearchTerm))">plugin://plugin.video.themoviedb.helper/?fanarttv=True&amp;info=dir_search&amp;nextpage=True&amp;type=movie</value>
        <value>plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=9</value>
    </variable>
    <variable name="Play_tmdb">
	<value condition="String.IsEqual(ListItem.DBType,episode)">RunPlugin(plugin://plugin.video.themoviedb.helper/?info=play&amp;season=$INFO[ListItem.Season]&amp;type=episode&amp;episode=$INFO[ListItem.Episode]&amp;tmdb_id=$INFO[ListItem.Property(tmdb_id)])</value>
	<value condition="String.IsEqual(ListItem.DBType,movie)">RunPlugin(plugin://plugin.video.themoviedb.helper/?info=play&amp;type=movie&amp;tmdb_id=$INFO[ListItem.Property(tmdb_id)])</value>
    </variable>

    <include name="Defs_PauseAtEnd_Value">
        <pauseatend>$PARAM[time]</pauseatend>
    </include>

    <include name="Defs_PauseAtEnd">
        <include content="Defs_AutoScroll">
            <param name="include" value="Defs_PauseAtEnd_Value" />
        </include>
    </include>

    <include name="left">
            <param name="left" default="" />
        <definition>
          <left>$PARAM[left]</left>
        </definition>
    </include>

    <include name="width">
            <param name="width" default="" />
        <definition>
          <width>$PARAM[width]</width>
        </definition>
    </include>

    <include name="height">
            <param name="height" default="" />
        <definition>
	  <height>$PARAM[height]</height>
        </definition>
    </include>

    <include name="top">
           <param name="top" default="" />
        <definition>
	<top>$PARAM[top]</top>	
        </definition>
    </include>


    <include name="Defs_AutoScroll">
        <param name="include" default="Defs_AutoScroll_Value" />
        <definition>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31475])">
                <param name="time" value="4000" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31476]) | String.IsEmpty(Skin.String(AutoScroll))">
                <param name="time" value="8000" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31477])">
                <param name="time" value="16000" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31478])">
                <param name="time" value="30000" />
            </include>
        </definition>
    </include>

    <include name="Defs_InfoList_OnClick">
        <param name="prevent_del" default="prevent_del" />
        <definition>
            <onclick condition="String.IsEmpty(ListItem.DBID) | [!String.IsEqual(ListItem.DBType,movie) + !String.IsEqual(ListItem.DBType,tvshow)]">RunScript(plugin.video.themoviedb.helper,add_path=$INFO[ListItem.FolderPath],call_auto=1190,delay=0.35,$PARAM[prevent_del])</onclick>
            <onclick condition="!String.IsEmpty(ListItem.DBID) + String.IsEqual(ListItem.DBType,movie)">RunScript(plugin.video.themoviedb.helper,add_path=$INFO[ListItem.Label,videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22,%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D],call_auto=1190,delay=0.35,$PARAM[prevent_del])</onclick>
            <onclick condition="!String.IsEmpty(ListItem.DBID) + String.IsEqual(ListItem.DBType,tvshow)">RunScript(plugin.video.themoviedb.helper,add_path=$INFO[ListItem.Label,videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22,%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D],call_auto=1190,delay=0.35,$PARAM[prevent_del])</onclick>
        </definition>
    </include>

    <variable name="videoinfo_onclick_episode">
	<value condition="!Container(53011).ListItem.IsResumable">PlayMedia($ESCINFO[Container(53011).ListItem.FileNameAndPath])</value>
	<value condition="Container(53011).ListItem.IsResumable">PlayMedia($ESCINFO[Container(53011).ListItem.FileNameAndPath],resume)</value>
    </variable>

    <variable name="showcase_movement">
	<value condition="Skin.HasSetting(EnableShowCaseOverlay)">1</value>
	<value condition="!Skin.HasSetting(EnableShowCaseOverlay)">$PARAM[movement]</value>
    </variable>
    <variable name="OSD_Info_Label">
        <value condition="Control.HasFocus(18)">$LOCALIZE[287]</value> <!-- Subtitles -->
        <value condition="Control.HasFocus(32)">$LOCALIZE[31086]</value> <!-- Extended Info -->
        <value condition="Control.HasFocus(25)">$LOCALIZE[31736]</value> <!-- Settings -->
        <value condition="Control.HasFocus(25)">$LOCALIZE[31715]</value> <!-- More Info -->
        <value condition="Control.HasFocus(34)">$LOCALIZE[31695]</value> <!-- Cast -->
    </variable>
    <variable name="Info_Cast_List01">
        <value condition="!Container(3100).IsUpdating + Integer.IsGreater(Container(3100).NumItems,0)">$INFO[Container(3100).ListItemAbsolute(1).FolderPath]</value>
        <value>videodb://</value>
    </variable>
    <variable name="Info_Cast_List02">
        <value condition="!Container(3100).IsUpdating + Integer.IsGreater(Container(3100).NumItems,0)">$INFO[Container(3100).ListItemAbsolute(2).FolderPath]</value>
        <value>videodb://</value>
    </variable>
    <variable name="Info_Cast_List03">
        <value condition="!Container(3100).IsUpdating + Integer.IsGreater(Container(3100).NumItems,0)">$INFO[Container(3100).ListItemAbsolute(3).FolderPath]</value>
        <value>videodb://</value>
    </variable>
    <variable name="Info_Cast_List04">
        <value condition="!Container(3100).IsUpdating + Integer.IsGreater(Container(3100).NumItems,0)">$INFO[Container(3100).ListItemAbsolute(4).FolderPath]</value>
        <value>videodb://</value>
    </variable>
    <variable name="Info_Cast_List05">
        <value condition="!Container(3100).IsUpdating + Integer.IsGreater(Container(3100).NumItems,0)">$INFO[Container(3100).ListItemAbsolute(5).FolderPath]</value>
        <value>videodb://</value>
    </variable>
   <variable name="Info_Param_IMDB_or_QUERY">
        <value condition="String.IsEmpty(Window().Property(item.info.tvshowtitle)) + !String.IsEmpty(Window().Property(item.info.title)) + !String.IsEmpty(Window().Property(item.info.year))">query=$INFO[Window().Property(item.info.title)]&amp;year=$INFO[Window().Property(item.info.title)]</value>
        <value condition="!String.IsEmpty(Window().Property(item.info.tvshowtitle)) + !String.IsEmpty(Window().Property(item.info.year))">query=$INFO[Window().Property(item.info.tvshowtitle)]&amp;year=$INFO[Window().Property(item.info.title)]</value>
        <value condition="[String.IsEqual(ListItem.DBType,movie) | Container.Content(movies)] + !String.IsEmpty(ListItem.Property(imdb_id))">imdb_id=$INFO[ListItem.Property(imdb_id)]</value>
        <value condition="[String.IsEqual(ListItem.DBType,movie) | Container.Content(movies)] + !String.IsEmpty(ListItem.IMDBNumber) + String.StartsWith(ListItem.IMDBNumber,tt)">imdb_id=$INFO[ListItem.IMDBNumber]</value>
        <value condition="[String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(ListItem.TvShowTitle)">query=$INFO[ListItem.TvShowTitle]</value>
        <value condition="!String.IsEmpty(ListItem.Title) + !String.IsEmpty(ListItem.Year)">query=$INFO[ListItem.Title]&amp;year=$INFO[ListItem.Year]</value>
        <value condition="!String.IsEmpty(ListItem.Title)">query=$INFO[ListItem.Title]</value>
        <value condition="VideoPlayer.Content(Movies)">query=$INFO[VideoPlayer.Title]</value>
        <value condition="VideoPlayer.Content(Episodes)">query=$INFO[VideoPlayer.TvShowTitle]</value>
        <value>query=$INFO[ListItem.Label]</value>
    </variable>

   <variable name="Info_Param_IMDB_or_QUERY_1506">
        <value condition="[String.IsEqual(Container(1506).ListItem.DBType,movie) | Container.Content(movies)] + !String.IsEmpty(Container(1506).ListItem.Property(imdb_id))">imdb_id=$INFO[Container(1506).ListItem.Property(imdb_id)]</value>
        <value condition="[String.IsEqual(Container(1506).ListItem.DBType,movie) | Container.Content(movies)] + !String.IsEmpty(Container(1506).ListItem.IMDBNumber) + String.StartsWith(Container(1506).ListItem.IMDBNumber,tt)">imdb_id=$INFO[Container(1506).ListItem.IMDBNumber]</value>
        <value condition="[String.IsEqual(Container(1506).ListItem.DBType,season) | String.IsEqual(Container(1506).ListItem.DBType,tvshow) | String.IsEqual(Container(1506).ListItem.DBType,episode) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(Container(1506).ListItem.TvShowTitle)">query=$INFO[Container(1506).ListItem.TvShowTitle]</value>
        <value condition="!String.IsEmpty(Container(1506).ListItem.Title) + !String.IsEmpty(Container(1506).ListItem.Year)">query=$INFO[Container(1506).ListItem.Title]&amp;year=$INFO[Container(1506).ListItem.Year]</value>
        <value condition="!String.IsEmpty(Container(1506).ListItem.Title)">query=$INFO[Container(1506).ListItem.Title]</value>
        <value>query=$INFO[Container(1506).ListItem.Label]</value>
    </variable>

    <variable name="Info_Param_Type_1506">
        <value condition="String.IsEqual(Container(1506).ListItem.DBType,movie) | String.IsEqual(Container(1506).ListItem.DBType,set) | Container.Content(movies) | Container.Content(set)">type=movie</value>
        <value condition="String.IsEqual(Container(1506).ListItem.DBType,movie) | String.IsEqual(Container(1506).ListItem.DBType,set) | Container.Content(movies) | Container.Content(set)">type=movie</value>
        <value condition="String.IsEqual(Container(1506).ListItem.DBType,season) | String.IsEqual(Container(1506).ListItem.DBType,tvshow) | String.IsEqual(Container(1506).ListItem.DBType,episode) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episode)">type=tv</value>
    </variable>

    <variable name="Cast_Widget_Content_1506">
        <value condition="!Integer.IsEqual(Container(1506).NumItems,0) + !Container(1506).IsUpdating + !Window.IsVisible(DialogButtonMenu.xml)">plugin://plugin.video.themoviedb.helper/?info=cast&amp;$VAR[Info_Param_Type_1506]&amp;$VAR[Info_Param_IMDB_or_QUERY_1506]</value>
    </variable>

   <variable name="Info_Param_IMDB_or_QUERY_1505">
        <value condition="[String.IsEqual(Container(1505).ListItem.DBType,movie) | Container.Content(movies)] + !String.IsEmpty(Container(1505).ListItem.Property(imdb_id))">imdb_id=$INFO[Container(1505).ListItem.Property(imdb_id)]</value>
        <value condition="[String.IsEqual(Container(1505).ListItem.DBType,movie) | Container.Content(movies)] + !String.IsEmpty(Container(1505).ListItem.IMDBNumber) + String.StartsWith(Container(1505).ListItem.IMDBNumber,tt)">imdb_id=$INFO[Container(1505).ListItem.IMDBNumber]</value>
        <value condition="[String.IsEqual(Container(1505).ListItem.DBType,season) | String.IsEqual(Container(1505).ListItem.DBType,tvshow) | String.IsEqual(Container(1505).ListItem.DBType,episode) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(Container(1505).ListItem.TvShowTitle)">query=$INFO[Container(1505).ListItem.TvShowTitle]</value>
        <value condition="!String.IsEmpty(Container(1505).ListItem.Title) + !String.IsEmpty(Container(1505).ListItem.Year)">query=$INFO[Container(1505).ListItem.Title]&amp;year=$INFO[Container(1505).ListItem.Year]</value>
        <value condition="!String.IsEmpty(Container(1505).ListItem.Title)">query=$INFO[Container(1505).ListItem.Title]</value>
        <value>query=$INFO[Container(1505).ListItem.Label]</value>
    </variable>

    <variable name="Info_Param_Type_1505">
        <value condition="String.IsEqual(Container(1505).ListItem.DBType,movie) | String.IsEqual(Container(1505).ListItem.DBType,set) | Container.Content(movies) | Container.Content(set)">type=movie</value>
        <value condition="String.IsEqual(Container(1505).ListItem.DBType,movie) | String.IsEqual(Container(1505).ListItem.DBType,set) | Container.Content(movies) | Container.Content(set)">type=movie</value>
        <value condition="String.IsEqual(Container(1505).ListItem.DBType,season) | String.IsEqual(Container(1505).ListItem.DBType,tvshow) | String.IsEqual(Container(1505).ListItem.DBType,episode) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episode)">type=tv</value>
    </variable>

    <variable name="Cast_Widget_Content_1505">
        <value condition="!Integer.IsEqual(Container(1505).NumItems,0) + !Container(1505).IsUpdating + !Window.IsVisible(DialogButtonMenu.xml)">plugin://plugin.video.themoviedb.helper/?info=cast&amp;$VAR[Info_Param_Type_1505]&amp;$VAR[Info_Param_IMDB_or_QUERY_1505]</value>
    </variable>

    <variable name="Info_Param_Type">
        <value condition="String.IsEmpty(Window().Property(item.info.season)) + !String.IsEmpty(Window().Property(item.info.title))">type=movie</value>
        <value condition="!String.IsEmpty(Window().Property(item.info.season)) + !String.IsEmpty(Window().Property(item.info.title))">type=tv</value>
        <value condition="String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,set) | Container.Content(movies) | Container.Content(set) | VideoPlayer.Content(Movies)">type=movie</value>
        <value condition="String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episode) | VideoPlayer.Content(Episodes)">type=tv</value>
    </variable>

    <variable name="DetailsContent_1505">
        <value condition="String.IsEqual(Container(1505).ListItem.DBType,movie) + !String.IsEmpty(Container(1505).ListItem.IMDbNumber)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=movie&amp;imdb_id=$INFO[Container(1505).ListItem.IMDbNumber]</value>
        <value condition="String.IsEqual(Container(1505).ListItem.DBType,movie) + String.IsEmpty(Container(1505).ListItem.IMDbNumber)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=movie&amp;query=$INFO[Container(1505).ListItem.Title]&amp;year=$INFO[Container(1505).ListItem.Year]</value>
        <value condition="String.IsEqual(Container(1505).ListItem.DBType,tvshow) + !String.IsEmpty(Container(1505).ListItem.IMDbNumber)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=tv&amp;imdb_id=$INFO[Container(1505).ListItem.IMDbNumber]</value>
        <value condition="String.IsEqual(Container(1505).ListItem.DBType,tvshow) + String.IsEmpty(Container(1505).ListItem.IMDbNumber)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=tv&amp;query=$INFO[Container(1505).ListItem.TvShowTitle]&amp;year=$INFO[Container(1505).ListItem.Year]</value>
        <value condition="String.IsEqual(Container(1505).ListItem.DBType,season)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=tv&amp;query=$INFO[Container(1505).ListItem.TvShowTitle]&amp;year=$INFO[Container(1505).ListItem.Year]&amp;season=$INFO[Container(1505).ListItem.Season]</value>
        <value condition="String.IsEqual(Container(1505).ListItem.DBType,episode)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=tv&amp;query=$INFO[Container(1505).ListItem.TvShowTitle]&amp;year=$INFO[Container(1505).ListItem.Year]&amp;season=$INFO[Container(1505).ListItem.Season]&amp;episode=$INFO[Container(1505).ListItem.Episode]</value>
    </variable>

    <variable name="DetailsContent_1506">
        <value condition="String.IsEqual(Container(1506).ListItem.DBType,movie) + !String.IsEmpty(Container(1506).ListItem.IMDbNumber)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=movie&amp;imdb_id=$INFO[Container(1506).ListItem.IMDbNumber]</value>
        <value condition="String.IsEqual(Container(1506).ListItem.DBType,movie) + String.IsEmpty(Container(1506).ListItem.IMDbNumber)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=movie&amp;query=$INFO[Container(1506).ListItem.Title]&amp;year=$INFO[Container(1506).ListItem.Year]</value>
        <value condition="String.IsEqual(Container(1506).ListItem.DBType,tvshow) + !String.IsEmpty(Container(1506).ListItem.IMDbNumber)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=tv&amp;imdb_id=$INFO[Container(1506).ListItem.IMDbNumber]</value>
        <value condition="String.IsEqual(Container(1506).ListItem.DBType,tvshow) + String.IsEmpty(Container(1506).ListItem.IMDbNumber)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=tv&amp;query=$INFO[Container(1506).ListItem.TvShowTitle]&amp;year=$INFO[Container(1506).ListItem.Year]</value>
        <value condition="String.IsEqual(Container(1506).ListItem.DBType,season)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=tv&amp;query=$INFO[Container(1506).ListItem.TvShowTitle]&amp;year=$INFO[Container(1506).ListItem.Year]&amp;season=$INFO[Container(1506).ListItem.Season]</value>
        <value condition="String.IsEqual(Container(1506).ListItem.DBType,episode)">plugin://plugin.video.themoviedb.helper/?info=details&amp;tmdb_type=tv&amp;query=$INFO[Container(1506).ListItem.TvShowTitle]&amp;year=$INFO[Container(1506).ListItem.Year]&amp;season=$INFO[Container(1506).ListItem.Season]&amp;episode=$INFO[Container(1506).ListItem.Episode]</value>
    </variable>

    <variable name="Info_Fanart">
        <value condition="[String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(movies) | Container.Content(tvshows)] + !Skin.HasSetting(DisableExtendedInfo) + System.HasAddon(plugin.video.themoviedb.helper)">plugin://plugin.video.themoviedb.helper/?info=fanart&amp;$VAR[Info_Param_Type]&amp;$VAR[Info_Param_IMDB_or_QUERY]</value>
    </variable>

    <include name="Info_Fanart_List"><content target="images">$VAR[Info_Fanart]</content></include>

    <variable name="Info_Posters">
        <value condition="[Container.Content(movies) | Container.Content(tvshows)] + !Skin.HasSetting(DisableExtendedInfo) + System.HasAddon(plugin.video.themoviedb.helper)">plugin://plugin.video.themoviedb.helper/?info=posters&amp;$VAR[Info_Param_Type]&amp;$VAR[Info_Param_IMDB_or_QUERY]</value>
    </variable>

    <variable name="Info_Sets">
        <value condition="String.IsEqual(ListItem.DBType,movie) + !Skin.HasSetting(DisableExtendedInfo) + System.HasAddon(plugin.video.themoviedb.helper) + !String.IsEmpty(ListItem.Set)">plugin://plugin.video.themoviedb.helper/?info=collection&amp;type=movie&amp;query=$INFO[ListItem.Set]</value>
        <value condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.DBID)">$INFO[ListItem.SetID,videodb://movies/sets/,/]</value>
    </variable>

    <variable name="Info_Similar">
        <value condition="[VideoPlayer.Content(Episodes) | VideoPlayer.Content(Movies) | String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(movies) | Container.Content(tvshows)] + !Skin.HasSetting(DisableExtendedInfo) + System.HasAddon(plugin.video.themoviedb.helper)">plugin://plugin.video.themoviedb.helper/?info=similar&amp;$VAR[Info_Param_Type]&amp;$VAR[Info_Param_IMDB_or_QUERY]</value>
    </variable>

    <variable name="Info_CrewMembers">
        <value condition="[String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(movies) | Container.Content(tvshows)] + !Skin.HasSetting(DisableExtendedInfo) + System.HasAddon(plugin.video.themoviedb.helper)">plugin://plugin.video.themoviedb.helper/?info=crew&amp;$VAR[Info_Param_Type]&amp;$VAR[Info_Param_IMDB_or_QUERY]</value>
    </variable>

    <variable name="Info_Youtube">
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + System.HasAddon(plugin.video.youtube)">$INFO[ListItem.TvShowTitle,plugin://plugin.video.youtube/search/?q=,]</value>
        <value condition="!String.IsEmpty(ListItem.Artist) + System.HasAddon(plugin.video.youtube)">$INFO[ListItem.Artist,plugin://plugin.video.youtube/search/?q=,]</value>
        <value condition="!String.IsEmpty(ListItem.Title) + System.HasAddon(plugin.video.youtube)">$INFO[ListItem.Title,plugin://plugin.video.youtube/search/?q=,]</value>
        <value condition="System.HasAddon(plugin.video.youtube)">$INFO[ListItem.Label,plugin://plugin.video.youtube/search/?q=,]</value>
    </variable>

    <variable name="Info_FromDirector">
        <value condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.Director) + System.HasAddon(plugin.video.themoviedb.helper)">plugin://plugin.video.themoviedb.helper/?info=crew_in_movies&amp;type=person&amp;filter_key=job&amp;filter_value=Director&amp;query=$INFO[ListItem.Director]&amp;exclude_key=title&amp;exclude_value=$INFO[ListItem.Title]</value>
        <value condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Director)) + System.HasAddon(plugin.video.themoviedb.helper) + String.IsEqual(Container(8999).ListItem.Label,$LOCALIZE[31697])">plugin://plugin.video.themoviedb.helper/?info=crew_in_movies&amp;type=person&amp;filter_key=job&amp;filter_value=Director&amp;query=$INFO[Window(Home).Property(TMDBHelper.ListItem.Director)]&amp;exclude_key=title&amp;exclude_value=$INFO[ListItem.Title]</value> <!-- By Director -->
        <value condition="String.IsEqual(ListItem.DBType,movie)">videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22director%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Director]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
    </variable>

    <variable name="Info_FromStudio">
        <value condition="[String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | Container.Content(movies)] + System.HasAddon(plugin.video.themoviedb.helper) + !String.IsEmpty(ListItem.Studio)">plugin://plugin.video.themoviedb.helper?info=discover&amp;$VAR[Info_Param_Type]&amp;with_companies=$INFO[ListItem.Studio]</value>
        <value condition="[String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | Container.Content(movies)] + System.HasAddon(plugin.video.themoviedb.helper) + !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Studio.1.Name)) + String.IsEqual(Container(8999).ListItem.Label,$LOCALIZE[31698])">plugin://plugin.video.themoviedb.helper?info=discover&amp;$VAR[Info_Param_Type]&amp;with_companies=$INFO[Window(Home).Property(TMDBHelper.ListItem.Studio.1.Name)]</value> <!-- By Studio -->
        <value condition="Container.Content(movies)">videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22studio%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Studio]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
    </variable>

    <variable name="Info_FromYear">
        <value condition="String.IsEqual(ListItem.DBType,movie) + System.HasAddon(plugin.video.themoviedb.helper)">plugin://plugin.video.themoviedb.helper?info=discover&amp;$VAR[Info_Param_Type]&amp;primary_release_year=$INFO[ListItem.Year]</value>

    </variable>

    <variable name="Info_FromGenre">
        <value condition="[String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow)] + System.HasAddon(plugin.video.themoviedb.helper)">plugin://plugin.video.themoviedb.helper?info=discover&amp;$VAR[Info_Param_Type]&amp;with_genres=$INFO[ListItem.Genre]&amp;exclude_key=title&amp;exclude_value=$INFO[ListItem.Title]</value>
    </variable>

    <variable name="Info_Recommended">
        <value condition="[String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(movies) | Container.Content(tvshows)] + System.HasAddon(plugin.video.themoviedb.helper)">plugin://plugin.video.themoviedb.helper/?info=recommendations&amp;$VAR[Info_Param_Type]&amp;$VAR[Info_Param_IMDB_or_QUERY]</value>
    </variable>

    <variable name="DefMovieDBMoviesContent">
        <value condition="String.IsEqual(Window(1104).Property(content),1)">plugin://script.extendedinfo?info=topratedmovies</value>
        <value condition="String.IsEqual(Window(1104).Property(content),2)">plugin://script.extendedinfo?info=popularmovies</value>
        <value condition="String.IsEqual(Window(1104).Property(content),3)">plugin://script.extendedinfo?info=upcomingmovies</value>
        <value>plugin://script.extendedinfo?info=incinemamovies</value>
    </variable>
    <include name="Defs_Shadow_Opaque">
        <left>-24</left>
        <right>-24</right>
        <top>-24</top>
        <bottom>-24</bottom>
        <bordersize>24</bordersize>
        <!-- <bordertexture border="32" colordiffuse="PosterBack">common/shadow-24.png</bordertexture> -->
        <bordertexture border="32">common/trans-shadow-24.png</bordertexture>
    </include>
    <include name="Defs_DarkShadow">
        <left>-24</left>
        <right>-24</right>
        <top>-24</top>
        <bottom>-24</bottom>
        <bordersize>24</bordersize>
        <bordertexture border="24">common/dark-shadow-24.png</bordertexture>
    </include>
        <variable name="YoutubeBackground">
                <value condition="Skin.HasSetting(darkmode)">ffDEDEDE</value>
                <value>ff212121</value>
        </variable>
    <variable name="Defs_PictureBack_DBID">
        <value condition="String.EndsWith(ListItem.DBID,0)">$NUMBER[0]</value>
        <value condition="String.EndsWith(ListItem.DBID,1)">$NUMBER[1]</value>
        <value condition="String.EndsWith(ListItem.DBID,2)">$NUMBER[2]</value>
        <value condition="String.EndsWith(ListItem.DBID,3)">$NUMBER[3]</value>
        <value condition="String.EndsWith(ListItem.DBID,4)">$NUMBER[4]</value>
        <value condition="String.EndsWith(ListItem.DBID,5)">$NUMBER[5]</value>
        <value condition="String.EndsWith(ListItem.DBID,6)">$NUMBER[6]</value>
        <value condition="String.EndsWith(ListItem.DBID,7)">$NUMBER[7]</value>
        <value condition="String.EndsWith(ListItem.DBID,8)">$NUMBER[8]</value>
        <value condition="String.EndsWith(ListItem.DBID,9)">$NUMBER[9]</value>

        <value condition="String.EndsWith(ListItem.Label,a)">$NUMBER[0]</value>
        <value condition="String.EndsWith(ListItem.Label,b)">$NUMBER[1]</value>
        <value condition="String.EndsWith(ListItem.Label,c)">$NUMBER[2]</value>
        <value condition="String.EndsWith(ListItem.Label,d)">$NUMBER[3]</value>
        <value condition="String.EndsWith(ListItem.Label,e)">$NUMBER[4]</value>
        <value condition="String.EndsWith(ListItem.Label,f)">$NUMBER[5]</value>
        <value condition="String.EndsWith(ListItem.Label,g)">$NUMBER[6]</value>
        <value condition="String.EndsWith(ListItem.Label,h)">$NUMBER[7]</value>
        <value condition="String.EndsWith(ListItem.Label,i)">$NUMBER[8]</value>
        <value condition="String.EndsWith(ListItem.Label,j)">$NUMBER[9]</value>

        <value condition="String.EndsWith(ListItem.Label,k)">$NUMBER[0]</value>
        <value condition="String.EndsWith(ListItem.Label,l)">$NUMBER[1]</value>
        <value condition="String.EndsWith(ListItem.Label,m)">$NUMBER[2]</value>
        <value condition="String.EndsWith(ListItem.Label,n)">$NUMBER[3]</value>
        <value condition="String.EndsWith(ListItem.Label,o)">$NUMBER[4]</value>
        <value condition="String.EndsWith(ListItem.Label,p)">$NUMBER[5]</value>
        <value condition="String.EndsWith(ListItem.Label,q)">$NUMBER[6]</value>
        <value condition="String.EndsWith(ListItem.Label,r)">$NUMBER[7]</value>
        <value condition="String.EndsWith(ListItem.Label,s)">$NUMBER[8]</value>
        <value condition="String.EndsWith(ListItem.Label,t)">$NUMBER[9]</value>

        <value condition="String.EndsWith(ListItem.Label,u)">$NUMBER[0]</value>
        <value condition="String.EndsWith(ListItem.Label,v)">$NUMBER[1]</value>
        <value condition="String.EndsWith(ListItem.Label,w)">$NUMBER[2]</value>
        <value condition="String.EndsWith(ListItem.Label,x)">$NUMBER[3]</value>
        <value condition="String.EndsWith(ListItem.Label,y)">$NUMBER[4]</value>
        <value condition="String.EndsWith(ListItem.Label,z)">$NUMBER[5]</value>
        <value condition="String.EndsWith(ListItem.Label,0)">$NUMBER[6]</value>
        <value condition="String.EndsWith(ListItem.Label,1)">$NUMBER[7]</value>
        <value condition="String.EndsWith(ListItem.Label,2)">$NUMBER[8]</value>
        <value condition="String.EndsWith(ListItem.Label,3)">$NUMBER[9]</value>

        <value condition="String.EndsWith(ListItem.Label,4)">$NUMBER[0]</value>
        <value condition="String.EndsWith(ListItem.Label,5)">$NUMBER[1]</value>
        <value condition="String.EndsWith(ListItem.Label,6)">$NUMBER[2]</value>
        <value condition="String.EndsWith(ListItem.Label,7)">$NUMBER[3]</value>
        <value condition="String.EndsWith(ListItem.Label,8)">$NUMBER[4]</value>
        <value condition="String.EndsWith(ListItem.Label,9)">$NUMBER[5]</value>
        <value condition="String.EndsWith(ListItem.Label,?)">$NUMBER[7]</value>
        <value condition="String.EndsWith(ListItem.Label,.)">$NUMBER[8]</value>
        <value>$NUMBER[9]</value>
    </variable>
    <include name="Defs_PictureBack">
        <param name="textcolor" default="PosterFront_70" />
        <param name="diffuse" default="diffuse/widgetposter.png" />
        <param name="pad" default="0" />
        <param name="showtext" default="true" />
        <param name="colordiffuse" default="ff888888" />
        <param name="visible" default="String.StartsWith(ListItem.Icon,Default)" />
        <definition>
            <control type="group">
                <left>$PARAM[pad]</left>
                <right>$PARAM[pad]</right>
                <top>$PARAM[pad]</top>
                <bottom>$PARAM[pad]</bottom>
                <visible>$PARAM[visible]</visible>
                <visible>String.IsEqual(ListItem.DBType,album) | String.IsEqual(ListItem.DBType,artist)</visible>
                <control type="image">
                    <bordersize>10</bordersize>
                    <fadetime>0</fadetime>
                    <aspectratio aligny="center" scalediffuse="false">scale</aspectratio>
                    <texture colordiffuse="$PARAM[colordiffuse]" diffuse="$PARAM[diffuse]">$VAR[Defs_PictureBack_DBID,special://skin/extras/albumbacks/,.jpg]</texture>
                </control>
                <control type="textbox">
                    <left>20</left>
                    <right>20</right>
                    <top>20</top>
                    <bottom>20</bottom>
                    <align>center</align>
                    <aligny>center</aligny>
                    <font>font_small_bold</font>
                    <textcolor>$PARAM[textcolor]</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>!ListItem.IsParentFolder</visible>
                    <visible>$PARAM[showtext]</visible>
                </control>
            </control>
        </definition>
    </include>
    <include name="Defs_ShadowBack_Fullscreen">
        <right>-360</right>
        <top>-85</top>
        <texture>common/dark-shadow-24.png</texture>
        <height>300</height>
        <width>1250</width>
        <include>Animation_FadeIn_Slide</include>
    </include>
        <include name="Defs_ShadowBack_Fullscreen_volume">
        <right>-360</right>
        <top>-85</top>
        <texture>common/dark-shadow-24.png</texture>
        <height>100</height>
        <width>500</width>
        <include>Animation_FadeIn_Slide</include>
    </include>
    <include name="Defs_PosterBack">
        <param name="gradientcolordiffuse" default="cfffffff" />
        <definition>
            <control type="image">
                <left>$PARAM[pad]</left>
                <right>$PARAM[pad]</right>
                <bottom>$PARAM[pad]</bottom>
                <top>$PARAM[pad]</top>
                <bordersize>10</bordersize>
                <include condition="!Skin.HasSetting(DisableShadows)">Defs_Shadow_10</include>
                <texture colordiffuse="PosterBack" border="10">diffuse/box.png</texture>
            </control>
            <control type="image">
                <left>$PARAM[pad]</left>
                <right>$PARAM[pad]</right>
                <bottom>$PARAM[pad]</bottom>
                <top>$PARAM[pad]</top>
                <bordersize>10</bordersize>
                <texture border="5" colordiffuse="$PARAM[gradientcolordiffuse]">common/gradientcurve.png</texture>
                <visible>!Skin.HasSetting(PosterBackGradient)</visible>
            </control>
        </definition>
    </include>

    <variable name="Defs_VideoInfo_StudioMovies">
        <value condition="Container.Content(movies)">plugin://script.extendedinfo?info=studio&amp;&amp;studio=$INFO[ListItem.Studio]</value>
    </variable>

    <variable name="Defs_VideoInfo_Images">
        <value condition="System.HasAddon(script.artwork.helper)">plugin://script.artwork.helper/multiimage/listitem/?refresh=$INFO[ListItem.Label]</value>
    </variable>
    <variable name="Defs_VideoInfo_Images2">
        <value condition="Container.Content(movies) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[ListItem.Path,,/extrafanart/]</value>
        <value condition="!Container.Content(movies) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[ListItem.FileNameAndPath,,/extrafanart/]</value>
    </variable>
    <variable name="Defs_VideoInfo_Images3">
        <value condition="Container.Content(movies) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[ListItem.Path,,/extrathumbs/]</value>
        <value condition="!Container.Content(movies) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[ListItem.FileNameAndPath,,/extrathumbs/]</value>
    </variable>

    <variable name="Defs_VideoInfo_Extras">
        <value condition="Container.Content(movies) + String.IsEmpty(Window(home).Property(SpecialFeatures.Widget)) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[ListItem.Path,,/Extras/]</value>
        <value condition="!Container.Content(movies) + String.IsEmpty(Window(home).Property(SpecialFeatures.Widget)) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[ListItem.FileNameAndPath,,Extras/]</value>
        <value condition="!String.IsEmpty(Window(home).Property(SpecialFeatures.Widget)) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[Window(home).Property(SpecialFeatures.Widget)]</value>
    </variable>

    <include name="Defs_Settings_OnLoad">
        <onload condition="Window.IsActive(interfacesettings)">SetProperty(MenuIconFocus,ReplaceWindow(interfacesettings),Home)</onload>
        <onload condition="Window.IsActive(systemsettings)">SetProperty(MenuIconFocus,ReplaceWindow(systemsettings),Home)</onload>
        <onload condition="Window.IsActive(pvrsettings)">SetProperty(MenuIconFocus,ReplaceWindow(pvrsettings),Home)</onload>
        <onload condition="Window.IsActive(servicesettings)">SetProperty(MenuIconFocus,ReplaceWindow(servicesettings),Home)</onload>
        <onload condition="Window.IsActive(mediasettings)">SetProperty(MenuIconFocus,ReplaceWindow(mediasettings),Home)</onload>
        <onload condition="Window.IsActive(playersettings)">SetProperty(MenuIconFocus,ReplaceWindow(playersettings),Home)</onload>
        <onload condition="Window.IsActive(systeminfo)">SetProperty(MenuIconFocus,ReplaceWindow(systeminfo),Home)</onload>
        <onload condition="Window.IsActive(profiles)">SetProperty(MenuIconFocus,ReplaceWindow(profiles),Home)</onload>
        <onload condition="Window.IsActive(skinsettings)">SetProperty(MenuIconFocus,ReplaceWindow(skinsettings),Home)</onload>

        <onload condition="Window.IsActive(interfacesettings)">SetFocus(300,0)</onload>
        <onload condition="Window.IsActive(skinsettings)">SetFocus(300,1)</onload>
        <onload condition="Window.IsActive(mediasettings)">SetFocus(300,2)</onload>
        <onload condition="Window.IsActive(playersettings)">SetFocus(300,3)</onload>
        <onload condition="Window.IsActive(systemsettings)">SetFocus(300,4)</onload>
        <onload condition="Window.IsActive(servicesettings)">SetFocus(300,5)</onload>
        <onload condition="Window.IsActive(pvrsettings)">SetFocus(300,6)</onload>
        <onload condition="Window.IsActive(systeminfo)">SetFocus(300,7)</onload>
        <onload condition="Window.IsActive(profiles)">SetFocus(300,8)</onload>
    </include>

    <include name="Defs_Settings_OnLeft">
        <onleft condition="Window.IsActive(interfacesettings)">SetFocus(300,0)</onleft>
        <onleft condition="Window.IsActive(skinsettings)">SetFocus(300,1)</onleft>
        <onleft condition="Window.IsActive(mediasettings)">SetFocus(300,2)</onleft>
        <onleft condition="Window.IsActive(playersettings)">SetFocus(300,3)</onleft>
        <onleft condition="Window.IsActive(systemsettings)">SetFocus(300,4)</onleft>
        <onleft condition="Window.IsActive(servicesettings)">SetFocus(300,5)</onleft>
        <onleft condition="Window.IsActive(pvrsettings)">SetFocus(300,6)</onleft>
        <onleft condition="Window.IsActive(systeminfo)">SetFocus(300,7)</onleft>
        <onleft condition="Window.IsActive(profiles)">SetFocus(300,8)</onleft>

        <onup condition="Window.IsActive(interfacesettings)">SetFocus(300,0)</onup>
        <onup condition="Window.IsActive(skinsettings)">SetFocus(300,1)</onup>
        <onup condition="Window.IsActive(mediasettings)">SetFocus(300,2)</onup>
        <onup condition="Window.IsActive(playersettings)">SetFocus(300,3)</onup>
        <onup condition="Window.IsActive(systemsettings)">SetFocus(300,4)</onup>
        <onup condition="Window.IsActive(servicesettings)">SetFocus(300,5)</onup>
        <onup condition="Window.IsActive(pvrsettings)">SetFocus(300,6)</onup>
        <onup condition="Window.IsActive(systeminfo)">SetFocus(300,7)</onup>
        <onup condition="Window.IsActive(profiles)">SetFocus(300,8)</onup>

        <ondown>noop</ondown>
    </include>

    <include name="Defs_Settings_OnRight">
        <onright condition="Window.IsActive(interfacesettings)">SetFocus(300,0)</onright>
        <onright condition="Window.IsActive(skinsettings)">SetFocus(300,1)</onright>
        <onright condition="Window.IsActive(mediasettings)">SetFocus(300,2)</onright>
        <onright condition="Window.IsActive(playersettings)">SetFocus(300,3)</onright>
        <onright condition="Window.IsActive(systemsettings)">SetFocus(300,4)</onright>
        <onright condition="Window.IsActive(servicesettings)">SetFocus(300,5)</onright>
        <onright condition="Window.IsActive(pvrsettings)">SetFocus(300,6)</onright>
        <onright condition="Window.IsActive(systeminfo)">SetFocus(300,7)</onright>
        <onright condition="Window.IsActive(profiles)">SetFocus(300,8)</onright>

        <!-- <onup condition="Window.IsActive(interfacesettings)">SetFocus(300,0)</onup>
        <onup condition="Window.IsActive(skinsettings)">SetFocus(300,1)</onup>
        <onup condition="Window.IsActive(mediasettings)">SetFocus(300,2)</onup>
        <onup condition="Window.IsActive(playersettings)">SetFocus(300,3)</onup>
        <onup condition="Window.IsActive(systemsettings)">SetFocus(300,4)</onup>
        <onup condition="Window.IsActive(servicesettings)">SetFocus(300,5)</onup>
        <onup condition="Window.IsActive(pvrsettings)">SetFocus(300,6)</onup>
        <onup condition="Window.IsActive(systeminfo)">SetFocus(300,7)</onup>
        <onup condition="Window.IsActive(profiles)">SetFocus(300,8)</onup>

        <ondown>noop</ondown> -->
    </include>

    <include name="Defs_SkinShortcuts_SetStrings_OnClick">
        <onclick condition="String.IsEmpty(Window.Property(SetWidgets))">Close</onclick>
    </include>

    <include name="Defs_SkinShortcuts_Widget">
        <param name="visible" default="true" />
        <definition>
            <control type="togglebutton" id="312$PARAM[num]" description="Widget">
                <width>100%</width>
                <height>66</height>
                <usealttexture>ControlGroup(9300).HasFocus(312$PARAM[num]) + ControlGroup(9400).HasFocus()</usealttexture>
                <label>$VAR[Label_SkinShortcuts_Widget$PARAM[num]]</label>
                <altlabel>[COLOR=Selected]$VAR[Label_SkinShortcuts_Widget$PARAM[num]][/COLOR]</altlabel>
                <texturenofocus colordiffuse="dialog_fg_12" border="5">common/box.png</texturenofocus>
                <alttexturenofocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</alttexturenofocus>
                <align>left</align>
                <onclick>SetProperty(widgetID,Widget$PARAM[num])</onclick>
                <onclick>SendClick(312)</onclick>
                <include>Dialog_Standard_Right_Buttons</include>
                <visible>$PARAM[visible]</visible>
                <visible>String.IsEqual(Window.Property(groupname),mainmenu)</visible>
                <visible>!String.IsEqual(Container(211).ListItem.Property(widget),Weather) + !String.IsEqual(Container(211).ListItem.Property(widget),Settings)</visible>
                <onfocus>SetProperty(widgetName,widgetName.Widget$PARAM[num])</onfocus>
                <onfocus>SetProperty(WidgetSort,WidgetSort.Widget$PARAM[num])</onfocus>
                <onfocus>SetProperty(WidgetDirection,WidgetDirection.Widget$PARAM[num])</onfocus>
                <onfocus>SetProperty(WidgetAspect,WidgetAspect.Widget$PARAM[num])</onfocus>
                <onfocus>SetProperty(WidgetAspect_Item,$INFO[Container(211).ListItem.Property(WidgetAspect.Widget$PARAM[num])])</onfocus>
                <onfocus>SetProperty(WidgetDirection_Item,$INFO[Container(211).ListItem.Property(WidgetDirection.Widget$PARAM[num])])</onfocus>
                <onback condition="!String.IsEmpty(Window.Property(SetWidgets))">AlarmClock(reopen,RunScript(script.skinshortcuts,type=manage&amp;group=mainmenu),00:00,silent)</onback>
            </control>
        </definition>
    </include>

    <include name="Defs_Settings_Arrows">
        <control type="image">
            <visible>Container($PARAM[id]).HasPrevious</visible>
            <centerright>735</centerright>
            <centertop>-20</centertop>
            <width>16</width>
            <height>16</height>
            <texture flipy="true" colordiffuse="panel_fg_70">common/arrow-small.png</texture>
        </control>
        <control type="image">
            <visible>Container($PARAM[id]).HasNext</visible>
            <centerright>735</centerright>
            <centerbottom>54</centerbottom>
            <width>16</width>
            <height>16</height>
            <texture colordiffuse="panel_fg_70">common/arrow-small.png</texture>
        </control>
    </include>

    <include name="Defs_Settings_Line">
        <control type="image">
            <top>0</top>
            <left>450</left>
            <width>1</width>
            <bottom>80</bottom>
            <colordiffuse>main_fg_12</colordiffuse>
            <texture>common/white.png</texture>
        </control>
    </include>

    <include name="Defs_InfoDialog_Visible">
        <visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogMusicInfo.xml) + !Window.IsVisible(DialogAddonInfo.xml) + !Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + !Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
    </include>

    <!-- Options Menu -->
    <include name="Defs_Options_Texture">
        <control type="image">
            <left>-16</left>
            <right>-16</right>
            <top>-16</top>
            <bottom>-16</bottom>
            <bordertexture border="32">common/dark-shadow-24.png</bordertexture>
            <bordersize>24</bordersize>
            <texture border="16" colordiffuse="dialog_bg_100">common/rounded-dialog.png</texture>
        </control>
    </include>
    <include name="Defs_Options_Grouplist">
        <left>8</left>
        <bottom>16</bottom>
        <width>450</width>
        <top>16</top>
        <itemgap>0</itemgap>
        <onback condition="!Window.IsVisible(DialogButtonMenu.xml)">50</onback>
        <onleft condition="!Window.IsVisible(DialogButtonMenu.xml)">50</onleft>
        <onright condition="!Window.IsVisible(DialogButtonMenu.xml)">50</onright>
    </include>

    <include name="Defs_Powermenu_Group">
        <height>592</height>
        <centerleft>50%</centerleft>
        <centertop>50%</centertop>
        <width>466</width>
    </include>

    <include name="Defs_Options_StandardButtons">
        <control type="button" id="2">
            <description>Viewmode</description>
            <include>Defs_Hidden_Button</include>
        </control>
        <control type="button" id="3">
            <description>Sortby</description>
            <include>Defs_Hidden_Button</include>
        </control>
        <control type="button" id="6003">
            <description>Sort By</description>
            <label>$INFO[Control.GetLabel(3)]</label>
            <onclick>SendClick(3)</onclick>
            <visible>Control.IsVisible(3)</visible>
            <visible>Control.IsEnabled(3)</visible>
            <include>Defs_Hidden_Button</include>
        </control>
        <control type="togglebutton" id="4">
            <label>$LOCALIZE[584]</label>
            <altlabel>$LOCALIZE[585]</altlabel>
            <usealttexture>Container.SortDirection(Descending)</usealttexture>
            <include>Defs_Hidden_Button</include>
        </control>
    </include>

    <include name="Defs_Hidden_Button">
        <visible allowhiddenfocus="true">false</visible>
        <width>1</width>
        <height>1</height>
        <texturefocus />
        <texturenofocus />
    </include>

    <!-- Keyboard and Numeric Keys -->
    <include name="Defs_Keyboard_Button">
        <width>85</width>
        <height>75</height>
        <texturenofocus border="5" colordiffuse="dialog_fg_12">common/box.png</texturenofocus>
        <texturefocus border="5" colordiffuse="$VAR[ColorHighlight]">common/box.png</texturefocus>
        <textoffsetx>0</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>Selected</focusedcolor>
        <radioposx>320</radioposx>
        <radioposy>22</radioposy>
    </include>

    <!-- Context Button -->
    <include name="Defs_Context_Button">
        <align>left</align>
        <textoffsetx>30</textoffsetx>
        <radioposx>400</radioposx>
        <width>450</width>
        <height>70</height>
        <font>font_tiny</font>
        <textcolor>dialog_fg_70</textcolor>
        <textureradiofocus colordiffuse="dialog_fg_70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="dialog_fg_30">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight2]" border="16">common/gradient-diffuse-horizontal.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight2]" border="16">common/gradient-diffuse-horizontal.png</texturefocus>
    </include>

    <include name="separator_line">
        <control type="image">
            <width>100%</width>
            <height>1</height>
            <right>0</right>
            <texture colordiffuse="darkline_separator">common/white.png</texture>
        </control>
   </include>
    <!-- Settings Buttons -->
    <include name="Defs_Settings_Button">
        <align>left</align>
        <font>font_small</font>
        <radioposx>1380</radioposx>
        <textcolor>main_fg_100</textcolor>
        <disabledcolor>main_fg_12</disabledcolor>
        <height>80</height>
        <textoffsetx>view_pad</textoffsetx>
        <textureup flipy="true" colordiffuse="panel_fg_30">buttons/spin-down.png</textureup>
        <texturedown colordiffuse="panel_fg_30">buttons/spin-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="panel_fg_100">buttons/spin-down.png</textureupfocus>
        <texturedownfocus colordiffuse="panel_fg_100">buttons/spin-down.png</texturedownfocus>
        <textureradiofocus colordiffuse="panel_fg_70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="panel_fg_12">buttons/radio-off.png</textureradionofocus>
        <texturefocus colordiffuse="$VAR[Defs_Settings_ColorHighlight]">common/gradient-diffuse-horizontal.png</texturefocus>
        <alttexturefocus colordiffuse="$VAR[Defs_Settings_ColorHighlight]">common/gradient-diffuse-horizontal.png</alttexturefocus>
    </include>
    <variable name="Defs_Settings_ColorHighlight">
        <value condition="Control.HasFocus(3901) | Control.HasFocus(3902) | Control.HasFocus(3903) | Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(20)">00ffffff</value>
        <value>$VAR[ColorHighlight2]</value>
    </variable>

    <!-- Grouplist 9000 -->
    <include name="Defs_9000_Grouplist">
        <visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
        <onleft>50</onleft>
        <onright>50</onright>
        <onback>50</onback>
        <left>8</left>
        <top>16</top>
        <width>510</width>
        <height>350</height>
        <itemgap>0</itemgap>
    </include>

    <!-- Context Type Menu Background -->
    <include name="Defs_9000_Background">
        <visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
        <include>Animation_ZoomIn</include>
        <include>Animation_FadeOut</include>
        <top>184</top>
        <centerleft>50%</centerleft>
        <height>382</height>
        <width>466</width>

        <control type="image">
            <description>background image</description>
            <left>0</left>
            <top>0</top>
            <width>466</width>
            <height>100%</height>
            <texture border="16" colordiffuse="dialog_bg_100">common/rounded-shadow8.png</texture>
        </control>
    </include>

    <!-- Shadows -->
    <include name="Defs_Shadow_24">
        <left>-24</left>
        <right>-24</right>
        <top>-24</top>
        <bottom>-24</bottom>
        <bordersize>24</bordersize>
        <bordertexture border="32">common/shadow-24.png</bordertexture>
    </include>
    <include name="Defs_Shadow_10">
        <bordertexture border="20">common/shadow-10.png</bordertexture>
    </include>

    <include name="Defs_UpdateColorbox_Onclick">
        <onclick>AlarmClock(nms1,SetProperty(NINE_manual_set,"var=main,set=$INFO[Skin.String(colorbox_main)]|var=comp,set=$INFO[Skin.String(colorbox_comp)]|var=quality,set=$INFO[Skin.String(colorbox_quality)]|var=blursize,set=$INFO[Skin.String(colorbox_blursize)]|var=bitsize,set=$INFO[Skin.String(colorbox_bitsize)]|var=pixelsize,set=$INFO[Skin.String(colorbox_pixelsize)]|var=black,set=$INFO[Skin.String(colorbox_black)]|var=white,set=$INFO[Skin.String(colorbox_white)]|var=blend,set=$INFO[Skin.String(colorbox_blend)]|var=desat,set=$INFO[Skin.String(colorbox_desat)]",home),00:00,silent)</onclick>
        <onclick>AlarmClock(nms2,SetProperty(FIVE_daemon_fire,True,home),00:01,silent)</onclick>
    </include>

    <!-- Busy Spinner Side -->
    <include name="Defs_BusySpinner_Side">
        <param name="label" default="$LOCALIZE[20186]..." />
        <definition>
            <control type="group">
                <height>170</height>
                <width>720</width>
                <centerleft>50%</centerleft>
                <centertop>50%</centertop>
                <control type="image">
                    <visible>!Skin.HasSetting(EnableDefaultSpinner)</visible>
                    <description>Busy animation</description>
                    <top>0</top>
                    <width>60</width>
                    <height>60</height>
                    <texture>dialog/loading-back.png</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="group">
                    <description>Busy animation</description>
                    <top>0</top>
                    <width>60</width>
                    <height>60</height>
                    <control type="image">
                        <visible>Skin.HasSetting(EnableDefaultSpinner)</visible>
                        <texture>netflix/loading.gif</texture>
                        <aspectratio>keep</aspectratio>
                    </control>
                    <control type="image">
                    <animation effect="rotate" condition="true" start="0" end="360" loop="true" time="1000" center="auto">Conditional</animation> 
                        <texture colordiffuse="$VAR[ColorHighlight2]">dialog/loading-spinner.png</texture>
                        <aspectratio>keep</aspectratio>
                        <animation effect="fade" condition="true" start="0" end="75" pulse="true" time="1000">Conditional</animation>
		        <visible>!Skin.HasSetting(EnableDefaultSpinner)</visible>
                    </control>
                </control>
                <control type="label">
		    <left>70</left>
                    <description>Busy label</description>
                    <width>720</width>
                    <height>60</height>
                    <label>$PARAM[label]</label>
                    <textcolor>ffededed</textcolor>
		    <font>font_tiny_bold</font>
                </control>
            </control>
        </definition>
    </include>




    <!-- Busy Spinner -->
    <include name="Defs_BusySpinner">
        <param name="label" default="$LOCALIZE[20186]..." />
        <definition>
            <control type="group">
                <height>170</height>
                <width>720</width>
                <centerleft>50%</centerleft>
                <centertop>50%</centertop>
                <control type="image">
                    <visible>!Skin.HasSetting(EnableDefaultSpinner)</visible>
                    <description>Busy animation</description>
                    <centerleft>50%</centerleft>
                    <top>0</top>
                    <width>100</width>
                    <height>100</height>
                    <texture>dialog/loading-back.png</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="group">
                    <description>Busy animation</description>
                    <centerleft>50%</centerleft>
                    <top>0</top>
                    <width>100</width>
                    <height>100</height>
                    <control type="image">
                        <visible>Skin.HasSetting(EnableDefaultSpinner)</visible>
                        <texture background="true">$VAR[loading_spinner]</texture>
                        <aspectratio>keep</aspectratio>
                    </control>
                    <control type="image">
                    <animation effect="rotate" condition="true" start="0" end="360" loop="true" time="1000" center="auto">Conditional</animation> 
                        <texture colordiffuse="$VAR[ColorHighlight2]">dialog/loading-spinner.png</texture>
                        <aspectratio>keep</aspectratio>
                        <animation effect="fade" condition="true" start="0" end="75" pulse="true" time="1000">Conditional</animation>
		        <visible>!Skin.HasSetting(EnableDefaultSpinner)</visible>
                    </control>
                </control>
                <control type="label">
                    <description>Busy label</description>
                    <centerleft>50%</centerleft>
                    <bottom>0</bottom>
                    <width>720</width>
                    <height>100</height>
                    <aligny>center</aligny>
                    <align>center</align>
                    <label>$PARAM[label]</label>
                    <textcolor>ffededed</textcolor>
		    <font>font_tiny_bold</font>
                </control>
            </control>
        </definition>
    </include>

    <include name="Defs_Progress_Colorfade">
        <animation effect="fade" start="100" end="0" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),0)">Conditional</animation>
        <animation effect="fade" start="100" end="1" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),1)">Conditional</animation>
        <animation effect="fade" start="100" end="2" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),2)">Conditional</animation>
        <animation effect="fade" start="100" end="3" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),3)">Conditional</animation>
        <animation effect="fade" start="100" end="4" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),4)">Conditional</animation>
        <animation effect="fade" start="100" end="5" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),5)">Conditional</animation>
        <animation effect="fade" start="100" end="6" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),6)">Conditional</animation>
        <animation effect="fade" start="100" end="7" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),7)">Conditional</animation>
        <animation effect="fade" start="100" end="8" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),8)">Conditional</animation>
        <animation effect="fade" start="100" end="9" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),9)">Conditional</animation>
        <animation effect="fade" start="100" end="10" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),10)">Conditional</animation>
        <animation effect="fade" start="100" end="11" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),11)">Conditional</animation>
        <animation effect="fade" start="100" end="12" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),12)">Conditional</animation>
        <animation effect="fade" start="100" end="13" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),13)">Conditional</animation>
        <animation effect="fade" start="100" end="14" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),14)">Conditional</animation>
        <animation effect="fade" start="100" end="15" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),15)">Conditional</animation>
        <animation effect="fade" start="100" end="16" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),16)">Conditional</animation>
        <animation effect="fade" start="100" end="17" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),17)">Conditional</animation>
        <animation effect="fade" start="100" end="18" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),18)">Conditional</animation>
        <animation effect="fade" start="100" end="19" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),19)">Conditional</animation>
        <animation effect="fade" start="100" end="20" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),20)">Conditional</animation>
        <animation effect="fade" start="100" end="21" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),21)">Conditional</animation>
        <animation effect="fade" start="100" end="22" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),22)">Conditional</animation>
        <animation effect="fade" start="100" end="23" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),23)">Conditional</animation>
        <animation effect="fade" start="100" end="24" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),24)">Conditional</animation>
        <animation effect="fade" start="100" end="25" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),25)">Conditional</animation>
        <animation effect="fade" start="100" end="26" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),26)">Conditional</animation>
        <animation effect="fade" start="100" end="27" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),27)">Conditional</animation>
        <animation effect="fade" start="100" end="28" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),28)">Conditional</animation>
        <animation effect="fade" start="100" end="29" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),29)">Conditional</animation>
        <animation effect="fade" start="100" end="30" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),30)">Conditional</animation>
        <animation effect="fade" start="100" end="31" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),31)">Conditional</animation>
        <animation effect="fade" start="100" end="32" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),32)">Conditional</animation>
        <animation effect="fade" start="100" end="33" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),33)">Conditional</animation>
        <animation effect="fade" start="100" end="34" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),34)">Conditional</animation>
        <animation effect="fade" start="100" end="35" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),35)">Conditional</animation>
        <animation effect="fade" start="100" end="36" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),36)">Conditional</animation>
        <animation effect="fade" start="100" end="37" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),37)">Conditional</animation>
        <animation effect="fade" start="100" end="38" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),38)">Conditional</animation>
        <animation effect="fade" start="100" end="39" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),39)">Conditional</animation>
        <animation effect="fade" start="100" end="40" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),40)">Conditional</animation>
        <animation effect="fade" start="100" end="41" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),41)">Conditional</animation>
        <animation effect="fade" start="100" end="42" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),42)">Conditional</animation>
        <animation effect="fade" start="100" end="43" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),43)">Conditional</animation>
        <animation effect="fade" start="100" end="44" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),44)">Conditional</animation>
        <animation effect="fade" start="100" end="45" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),45)">Conditional</animation>
        <animation effect="fade" start="100" end="46" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),46)">Conditional</animation>
        <animation effect="fade" start="100" end="47" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),47)">Conditional</animation>
        <animation effect="fade" start="100" end="48" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),48)">Conditional</animation>
        <animation effect="fade" start="100" end="49" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),49)">Conditional</animation>
        <animation effect="fade" start="100" end="50" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),50)">Conditional</animation>
        <animation effect="fade" start="100" end="51" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),51)">Conditional</animation>
        <animation effect="fade" start="100" end="52" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),52)">Conditional</animation>
        <animation effect="fade" start="100" end="53" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),53)">Conditional</animation>
        <animation effect="fade" start="100" end="54" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),54)">Conditional</animation>
        <animation effect="fade" start="100" end="55" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),55)">Conditional</animation>
        <animation effect="fade" start="100" end="56" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),56)">Conditional</animation>
        <animation effect="fade" start="100" end="57" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),57)">Conditional</animation>
        <animation effect="fade" start="100" end="58" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),58)">Conditional</animation>
        <animation effect="fade" start="100" end="59" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),59)">Conditional</animation>
        <animation effect="fade" start="100" end="60" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),60)">Conditional</animation>
        <animation effect="fade" start="100" end="61" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),61)">Conditional</animation>
        <animation effect="fade" start="100" end="62" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),62)">Conditional</animation>
        <animation effect="fade" start="100" end="63" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),63)">Conditional</animation>
        <animation effect="fade" start="100" end="64" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),64)">Conditional</animation>
        <animation effect="fade" start="100" end="65" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),65)">Conditional</animation>
        <animation effect="fade" start="100" end="66" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),66)">Conditional</animation>
        <animation effect="fade" start="100" end="67" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),67)">Conditional</animation>
        <animation effect="fade" start="100" end="68" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),68)">Conditional</animation>
        <animation effect="fade" start="100" end="69" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),69)">Conditional</animation>
        <animation effect="fade" start="100" end="70" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),70)">Conditional</animation>
        <animation effect="fade" start="100" end="71" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),71)">Conditional</animation>
        <animation effect="fade" start="100" end="72" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),72)">Conditional</animation>
        <animation effect="fade" start="100" end="73" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),73)">Conditional</animation>
        <animation effect="fade" start="100" end="74" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),74)">Conditional</animation>
        <animation effect="fade" start="100" end="75" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),75)">Conditional</animation>
        <animation effect="fade" start="100" end="76" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),76)">Conditional</animation>
        <animation effect="fade" start="100" end="77" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),77)">Conditional</animation>
        <animation effect="fade" start="100" end="78" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),78)">Conditional</animation>
        <animation effect="fade" start="100" end="79" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),79)">Conditional</animation>
        <animation effect="fade" start="100" end="80" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),80)">Conditional</animation>
        <animation effect="fade" start="100" end="81" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),81)">Conditional</animation>
        <animation effect="fade" start="100" end="82" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),82)">Conditional</animation>
        <animation effect="fade" start="100" end="83" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),83)">Conditional</animation>
        <animation effect="fade" start="100" end="84" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),84)">Conditional</animation>
        <animation effect="fade" start="100" end="85" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),85)">Conditional</animation>
        <animation effect="fade" start="100" end="86" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),86)">Conditional</animation>
        <animation effect="fade" start="100" end="87" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),87)">Conditional</animation>
        <animation effect="fade" start="100" end="88" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),88)">Conditional</animation>
        <animation effect="fade" start="100" end="89" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),89)">Conditional</animation>
        <animation effect="fade" start="100" end="90" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),90)">Conditional</animation>
        <animation effect="fade" start="100" end="91" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),91)">Conditional</animation>
        <animation effect="fade" start="100" end="92" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),92)">Conditional</animation>
        <animation effect="fade" start="100" end="93" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),93)">Conditional</animation>
        <animation effect="fade" start="100" end="94" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),94)">Conditional</animation>
        <animation effect="fade" start="100" end="95" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),95)">Conditional</animation>
        <animation effect="fade" start="100" end="96" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),96)">Conditional</animation>
        <animation effect="fade" start="100" end="97" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),97)">Conditional</animation>
        <animation effect="fade" start="100" end="98" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),98)">Conditional</animation>
        <animation effect="fade" start="100" end="99" condition="Integer.IsEqual(Control.GetLabel($PARAM[id]),99)">Conditional</animation>
    </include>

</includes>
