<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<variable name="fanart_bg">
		<value condition="Skin.HasSetting(Disable_Fanart)">$VAR[default_global_bg]</value>
		<value condition="Player.HasAudio + Window.IsActive(Music)">$VAR[ArtistSlide]</value> 
		<value condition="Window.IsActive(mypics.xml) + !String.IsEmpty(ListItem.FilenameAndPath) + !String.IsEqual(ListItem.Label,..) + !ListItem.IsFolder + !Control.IsVisible(56)">$INFO[ListItem.FilenameAndPath]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(Home).Property(SkinHelper.ExtraFanArtPath))">$INFO[Window(Home).Property(SkinHelper.ExtraFanArtPath)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(home).Property(SkinHelper.Music.ExtraFanArt))">$INFO[Window(home).Property(SkinHelper.Music.ExtraFanArt)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="Container.Content(genres)">$VAR[Genre_fanart]</value>
		<value condition="String.IsEmpty(ListItem.Art(fanart)) + Window.IsActive(mypics.xml)">$VAR[default_pictures_bg]</value>
		<value condition="String.IsEmpty(ListItem.Art(fanart)) + Window.IsActive(MyPVRChannels.xml)">$VAR[default_livetv_bg]</value>
		<value condition="Window.IsActive(LoginScreen.xml)">special://skin/backgrounds/camera.jpg</value>
		<value condition="Window.IsActive(Music)">$VAR[default_music_bg]</value>
		<value>$VAR[default_global_bg]</value>
	</variable>

	<variable name="default_global_bg">
		<value condition="!String.IsEmpty(Skin.String(default_global_bg))">$INFO[Skin.String(default_global_bg)]</value>
		<value>special://skin/backgrounds/videos.jpg</value>
	</variable>
	<variable name="default_music_bg">
		<value condition="!String.IsEmpty(Skin.String(default_music_bg))">$INFO[Skin.String(default_music_bg)]</value>
		<value>special://skin/backgrounds/music.jpg</value>
	</variable>
	<variable name="default_livetv_bg">
		<value condition="!String.IsEmpty(Skin.String(default_livetv_bg))">$INFO[Skin.String(default_livetv_bg)]</value>
		<value>special://skin/backgrounds/livetv.jpg</value>
	</variable>
	<variable name="default_pictures_bg">
		<value condition="!String.IsEmpty(Skin.String(default_pictures_bg))">$INFO[Skin.String(default_pictures_bg)]</value>
		<value>special://skin/backgrounds/camera.jpg</value>
	</variable>

	<variable name="ArtistSlide">
		<value condition="!String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow)) + Skin.HasSetting(Vis-ArtistSlide) + !String.Contains(Window(Visualisation).Property(ArtistSlideshow),transparent)">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(home).Property(SkinHelper.Music.ExtraFanArt))">$INFO[Window(home).Property(SkinHelper.Music.ExtraFanArt)]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Art(fanart))">$INFO[MusicPlayer.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.Music.FanArt))">$INFO[Window(home).Property(SkinHelper.Music.FanArt)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>special://skin/backgrounds/music.jpg</value>
	</variable>
	<variable name="DialogAlbumInfoTitle">
		<value condition="Container.Content(Artists)">$INFO[Listitem.Artist]</value>
		<value condition="Container.Content(Albums)">$INFO[Listitem.Album]</value>
	</variable>

	<variable name="DialogPictureInfoImage">
		<value condition="String.Contains(Listitem.Filename,.bmp,right)">foldericons/pictures/bmp.png</value>
		<value condition="String.Contains(Listitem.Filename,.gif,right)">foldericons/pictures/gif.png</value>
		<value condition="String.Contains(Listitem.Filename,.jpg,right) | String.Contains(Listitem.Filename,.jpeg,right)">foldericons/pictures/jpg.png</value>
		<value condition="String.Contains(Listitem.Filename,.png,right)">foldericons/pictures/png.png</value>
		<value condition="String.Contains(Listitem.Filename,.tga,right)">foldericons/pictures/tga.png</value>
		<value condition="String.Contains(Listitem.Filename,.tiff,right)">foldericons/pictures/tiff.png</value>
		<value condition="String.Contains(Listitem.Filename,.wmf,right)">foldericons/pictures/wmf.png</value>
	</variable>

	<variable name="DialogPVRChannelManagerHeader">
		<value condition="String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19023]</value>
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
	</variable>
	<variable name="DialogPVRChannelManagerButton">
		<value condition="String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19024]</value>
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19023]</value>
	</variable>

	<variable name="Now_playing_status">
		<value condition="Player.Playing + Player.HasAudio">$LOCALIZE[10517]:</value>
		<value condition="Player.Playing + Player.HasVideo">$LOCALIZE[10522]:</value>
		<value condition="Player.Paused">$LOCALIZE[112]:</value>
	</variable>

	<variable name="OSDLabel2">
		<value condition="!VideoPlayer.Content(LiveTV) + !VideoPlayer.Content(Episodes) + !VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Genre]</value>
		<value condition="VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.Season,$LOCALIZE[20373]: ] $INFO[VideoPlayer.Episode,$LOCALIZE[20359]: ]     $INFO[VideoPlayer.Premiered,$LOCALIZE[552]: ]</value>
		<value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Year]$INFO[VideoPlayer.Studio, - ]</value>
	</variable>
	<variable name="OSDLabel3">
		<value condition="!VideoPlayer.Content(LiveTV) + !VideoPlayer.Content(Episodes) + !VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Genre]</value>
		<value condition="VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle], $INFO[VideoPlayer.Season,$LOCALIZE[20373] ] $INFO[VideoPlayer.Episode,$LOCALIZE[20359] ]</value>
		<value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Year]$INFO[VideoPlayer.Studio, - ]</value>
	</variable>
	<variable name="AudioChannels">
		<value condition="String.IsEqual(VideoPlayer.AudioChannels,10)">9.1</value>
		<value condition="String.IsEqual(VideoPlayer.AudioChannels,8)">7.1</value>
		<value condition="String.IsEqual(VideoPlayer.AudioChannels,6)">5.1</value>
		<value condition="String.IsEqual(VideoPlayer.AudioChannels,5)">4.1</value>
		<value condition="String.IsEqual(VideoPlayer.AudioChannels,4)">4.0</value>
		<value condition="String.IsEqual(VideoPlayer.AudioChannels,3)">2.1</value>
		<value condition="String.IsEqual(VideoPlayer.AudioChannels,2)">2.0</value>
		<value condition="String.IsEqual(VideoPlayer.AudioChannels,1)">1.0</value>
	</variable>
	<variable name="AudioChannels2">
		<value condition="String.IsEqual(ListItem.AudioChannels,10)">9.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,8)">7.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,6)">5.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,5)">4.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,4)">4.0</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,3)">2.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,2)">2.0</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,1)">1.0</value>
	</variable>
	<variable name="AudioCodec">
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aac)">aac</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ac3)">ac3</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aif)">aif</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aifc)">aifc</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aiff)">aiff</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,avs)">avs</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ape)">ape</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,cdda)">cdda</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dts)">dts</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,flac)">flac</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,m4a)">m4a</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mlp)">mlp</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp2)">mp2</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp3)">mp3</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mpc)">mpc</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ogg)">ogg</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ra)">ra</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,shn)">shn</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wav)">wav</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wma)">wma</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wv)">wv</value>
		<value>mp3</value>
	</variable>
	<variable name="hd_or_sd">
		<value condition="Integer.IsGreater(ListItem.VideoResolution,719) | String.IsEqual(ListItem.VideoResolution,2k) | String.IsEqual(ListItem.VideoResolution,4k)">HD</value>
		<value>SD</value>
	</variable>
	<variable name="hd_or_sd2">
		<value condition="Integer.IsGreater(VideoPlayer.VideoResolution,719) | String.IsEqual(VideoPlayer.VideoResolution,2k) | String.IsEqual(VideoPlayer.VideoResolution,4k)">HD</value>
		<value>SD</value>
	</variable>
	<variable name="season_number">
		<value condition="!String.IsEmpty(ListItem.Season)">$INFO[ListItem.Season]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SeasonNumber))">$INFO[Window(home).Property(SeasonNumber)]</value>
	</variable>
	<variable name="movie_label">
		<value condition="!String.IsEmpty(ListItem.OriginalTitle) + [Container.Content(episodes) | Container.Content(movies)] + Skin.HasSetting(PreferOriginalTitles)">$INFO[ListItem.OriginalTitle]</value>
		<value condition="!String.IsEmpty(ListItem.Title) + !Control.IsVisible(54) + !String.Contains(ListItem.Path,plugin://plugin.video.,left) + [Container.Content(songs) | Container.Content(episodes) | Container.Content(movies)]">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="ViewFanartText">
		<value condition="!String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
		<value condition="!String.IsEmpty(ListItem.Plot) + Control.IsVisible(50) + Container.Content(Episodes)">$INFO[ListItem.Premiered,(,) ][COLOR=$VAR[main_color]]$INFO[ListItem.TVShowTitle] $INFO[ListItem.Season, - S]$INFO[ListItem.Episode,E, -] $INFO[ListItem.Title][/COLOR][CR]$INFO[ListItem.Plot]</value>
		<value condition="String.IsEmpty(ListItem.PlotOutline) + !String.IsEmpty(ListItem.Plot) + !String.Contains(ListItem.Path,plugin://plugin.video.) + String.IsEmpty(ListItem.OriginalTitle)">[COLOR=$VAR[main_color]]$INFO[ListItem.Label][/COLOR][CR]$INFO[ListItem.Plot]</value>	
		<value condition="String.IsEmpty(ListItem.PlotOutline) + !String.IsEmpty(ListItem.Plot) + !String.Contains(ListItem.Path,plugin://plugin.video.) + !String.IsEmpty(ListItem.OriginalTitle)">[COLOR=$VAR[main_color]]$INFO[ListItem.OriginalTitle][/COLOR][CR]$INFO[ListItem.Plot]</value>		
		<value condition="String.Contains(ListItem.Path,plugin://plugin.video.) + Control.IsVisible(50)">[COLOR=$VAR[main_color]]$INFO[ListItem.Label][/COLOR][CR]$INFO[ListItem.Plot]</value>
		<value condition="String.Contains(ListItem.Path,plugin://plugin.video.) + !Control.IsVisible(50)">$INFO[ListItem.Plot]</value>
		<value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[Window(home).Property(SkinHelper.Music.AlbumCount),, $LOCALIZE[36919][CR]] $INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.Music.TrackList)) + Container.Content(Albums)">$INFO[Window(home).Property(SkinHelper.Music.SongCount),, $LOCALIZE[36921]:] [CR] $INFO[Window(home).Property(SkinHelper.Music.TrackList)]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Title,, - ]$INFO[ListItem.Duration]</value>
		<value condition="Window.IsActive(mypics.xml)">$INFO[ListItem.PictureResolution] $INFO[ListItem.Size][CR]$INFO[ListItem.PictureDatetime][CR]$INFO[ListItem.PictureCamModel][CR]$INFO[ListItem.PictureDigitalZoom,Zoom: ][CR]$INFO[ListItem.PictureISO,ISO: ][CR]$INFO[ListItem.PictureAperture,Aperture: ][CR]$INFO[ListItem.PictureExposure,Exposure: ][CR]$INFO[ListItem.PictureFocalLen,Lens: ][CR]$INFO[ListItem.Path]</value>
	</variable>
	<variable name="OSD_Plot">
		<value condition="!String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
		<value condition="String.IsEmpty(VideoPlayer.PlotOutline) + !String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
	</variable>
	<variable name="PVR_Header">
		<value condition="Control.IsVisible(11)">$LOCALIZE[19222] - $LOCALIZE[19030]</value>
		<value condition="Control.IsVisible(12)">$LOCALIZE[19222] - $LOCALIZE[19031]</value>
		<value condition="Control.IsVisible(50)">$LOCALIZE[20007]</value>
		<value condition="Control.IsVisible(52) + !Window.IsActive(MyPVRTimers.xml)">$LOCALIZE[19142]</value>
		<value condition="Control.IsVisible(52) + Window.IsActive(MyPVRTimers.xml)">$LOCALIZE[19026]</value>
	</variable>
	<variable name="settings_description">
		<value condition="Control.HasFocus(1)">$LOCALIZE[31167]</value><!-- Appearance Description -->
		<value condition="Control.HasFocus(2)">$LOCALIZE[31159]</value><!-- Video Description -->
		<value condition="Control.HasFocus(3)">$LOCALIZE[31161]</value><!-- Music Description -->
		<value condition="Control.HasFocus(4)">$LOCALIZE[31162]</value><!-- Pictures Description -->
		<value condition="Control.HasFocus(5)">$LOCALIZE[31163]</value><!-- Weather Description -->
		<value condition="Control.HasFocus(6)">$LOCALIZE[31164]</value><!-- System Description -->
		<value condition="Control.HasFocus(7)">$LOCALIZE[31165]</value><!-- Services Description -->
		<value condition="Control.HasFocus(8)">$LOCALIZE[31160]</value><!-- PVR Description -->
		<value condition="Control.HasFocus(10)">$LOCALIZE[31170]</value><!-- SysINFO Description -->
		<value condition="Control.HasFocus(11)">$LOCALIZE[14114]</value><!-- EventLog Description -->
		<value condition="Control.HasFocus(12)">$LOCALIZE[31169]</value><!-- Addons Description -->
		<value condition="Control.HasFocus(13)">$LOCALIZE[31166]</value><!-- Profiles Description -->
		<value condition="Control.HasFocus(14)">$LOCALIZE[7]</value><!-- File Manager Description -->
		<value condition="Control.HasFocus(16)">$LOCALIZE[31168]</value><!-- Skin Description -->
	</variable>
	<variable name="settings_color_94">
		<value condition="Skin.String(Section,1)">$VAR[main_color]</value>
		<value condition="Control.HasFocus(94)">$VAR[main_color]</value>
		<value>grey_b</value>
	</variable>
	<variable name="settings_color_95">
		<value condition="Skin.String(Section,2)">$VAR[main_color]</value>
		<value condition="Control.HasFocus(95)">$VAR[main_color]</value>
		<value>grey_b</value>
	</variable>
	<variable name="settings_color_96">
		<value condition="Skin.String(Section,3)">$VAR[main_color]</value>
		<value condition="Control.HasFocus(96)">$VAR[main_color]</value>
		<value>grey_b</value>
	</variable>
	<variable name="settings_color_97">
		<value condition="Skin.String(Section,4)">$VAR[main_color]</value>
		<value condition="Control.HasFocus(97)">$VAR[main_color]</value>
		<value>grey_b</value>
	</variable>
	<variable name="list_bg_color">
		<value condition="!String.IsEmpty(Skin.String(list_bg_color)) + !String.IsEqual(Skin.String(list_bg_color),None)">$INFO[Skin.String(list_bg_color)]</value>
		<value condition="!Skin.HasSetting(bold_list)">$VAR[main_color]</value>
		<value>-</value>
	</variable>
	<variable name="list_color">
		<value condition="!String.IsEmpty(Skin.String(list_color_custom)) + !String.IsEqual(Skin.String(list_color_custom),None)">$INFO[Skin.String(list_color_custom)]</value>
		<value condition="!Skin.HasSetting(bold_list)">grey_b</value>
		<value>$VAR[main_color]</value>
	</variable>
	<variable name="widelist_color">
		<value condition="!String.IsEmpty(Skin.String(widelist_color)) + !String.IsEqual(Skin.String(widelist_color),None)">$INFO[Skin.String(widelist_color)]</value>
		<value>$VAR[main_color]</value>
	</variable>
	<variable name="widelist_bg_color">
		<value condition="!String.IsEmpty(Skin.String(widelist_bg_color)) + !String.IsEqual(Skin.String(widelist_bg_color),None)">$INFO[Skin.String(widelist_bg_color)]</value>
		<value>BFFFFFFF</value>
	</variable>
	<variable name="main_color">
		<value condition="!String.IsEmpty(Skin.String(main_color)) + !String.IsEqual(Skin.String(main_color),None)">$INFO[Skin.String(main_color)]</value>
		<value>FF2d95d7</value>
	</variable>
	<variable name="mouse_color">
		<value condition="!String.IsEmpty(Skin.String(mouse_color)) + !String.IsEqual(Skin.String(mouse_color),None)">$INFO[Skin.String(mouse_color)]</value>
		<value>$VAR[main_color]</value>
	</variable>

	<variable name="tile_main_color">
		<value condition="!String.IsEmpty(Container(9000).ListItem.Property(TextColor))">$INFO[Container(9000).ListItem.Property(TextColor)]</value>
		<value>$VAR[main_color]</value>
	</variable>
	<variable name="tile_sub_color">
		<value condition="!String.IsEmpty(Container(9001).ListItem.Property(TextColor))">$INFO[Container(9001).ListItem.Property(TextColor)]</value>
		<value>$VAR[main_color]</value>
	</variable>
	<variable name="topbar_text_color">
		<value condition="!String.IsEmpty(Skin.String(topbar_text_color)) + !String.IsEqual(Skin.String(topbar_text_color),None)">$INFO[Skin.String(topbar_text_color)]</value>
		<value>white</value>
	</variable>
	<variable name="topbar_rss1_color">
		<value condition="!String.IsEmpty(Skin.String(topbar_rss1_color)) + !String.IsEqual(Skin.String(topbar_rss1_color),None)">$INFO[Skin.String(topbar_rss1_color)]</value>
		<value>white</value>
	</variable>
	<variable name="topbar_rss2_color">
		<value condition="!String.IsEmpty(Skin.String(topbar_rss2_color)) + !String.IsEqual(Skin.String(topbar_rss2_color),None)">$INFO[Skin.String(topbar_rss2_color)]</value>
		<value>white</value>
	</variable>
	<variable name="weather_color">
		<value condition="!String.IsEmpty(Skin.String(weather_color)) + !String.IsEqual(Skin.String(weather_color),None)">$INFO[Skin.String(weather_color)]</value>
		<value>white</value>
	</variable>

	<variable name="menu_icon_color_nf">
		<value condition="!String.IsEmpty(Skin.String(menu_icon_color_nf)) + !String.IsEqual(Skin.String(menu_icon_color_nf),None)">$INFO[Skin.String(menu_icon_color_nf)]</value>
		<value>grey</value>
	</variable>

	<variable name="menu_vertical_item_bg">
		<value condition="!String.IsEmpty(ListItem.Property(TextColor))">special://skin/extras/colors/$INFO[ListItem.Property(TextColor)].png</value>
		<value>white.png</value>
	</variable>
	<variable name="menu_vertical_item_diffuse">
		<value condition="!String.IsEmpty(Container(9000).ListItem.Property(TextColor))">white</value>
		<value>$VAR[main_color]</value>
	</variable>
	<variable name="dialog_icon_color">
		<value condition="String.IsEmpty(Container(211).ListItem.Property(Icon_Overlay)) + !String.IsEmpty(Container(211).ListItem.Property(TextColor))">$INFO[Container(211).ListItem.Property(TextColor)]</value>
		<value condition="String.IsEmpty(Container(211).ListItem.Property(Icon_Overlay)) + String.IsEmpty(Container(211).ListItem.Property(TextColor))">$VAR[main_color]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(Icon_Overlay),$LOCALIZE[31140]) + !String.IsEmpty(Container(211).ListItem.Property(TextColor))">$INFO[Container(211).ListItem.Property(TextColor)]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(Icon_Overlay),$LOCALIZE[31141])">-</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(Icon_Overlay),$LOCALIZE[31142])">$VAR[main_color]</value>	
		<value>$VAR[main_color]</value>
	</variable>

	<variable name="dialog_icon_color_nf">
		<value condition="String.IsEmpty(Container(211).ListItem.Property(Icon_Overlay2))">$VAR[menu_icon_color_nf]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(Icon_Overlay2),$LOCALIZE[767])">grey</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(Icon_Overlay2),$LOCALIZE[31141])">-</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(Icon_Overlay2),$LOCALIZE[31142])">$VAR[main_color]</value>	
		<value>$VAR[menu_icon_color_nf]</value>
	</variable>

	<variable name="menu_icon_color_f">
		<value condition="Control.HasFocus(15) | Control.HasFocus(10) | Control.HasFocus(20)">$VAR[menu_icon_color_nf]</value>
		<value condition="String.IsEmpty(Container(9000).ListItem.Property(Icon_Overlay)) + !String.IsEmpty(Container(9000).ListItem.Property(TextColor))">$INFO[Container(9000).ListItem.Property(TextColor)]</value>
		<value condition="String.IsEmpty(Container(9000).ListItem.Property(Icon_Overlay)) + String.IsEmpty(Container(9000).ListItem.Property(TextColor))">$VAR[main_color]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Icon_Overlay),$LOCALIZE[31140]) + !String.IsEmpty(Container(9000).ListItem.Property(TextColor))">$INFO[Container(9000).ListItem.Property(TextColor)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Icon_Overlay),$LOCALIZE[31141])">-</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Icon_Overlay),$LOCALIZE[31142])">$VAR[main_color]</value>	
		<value>$VAR[main_color]</value>
	</variable>

	<variable name="sub_icon_color">
		<value condition="!String.IsEmpty(Container(9001).ListItem.Property(TextColor))">$INFO[Container(9001).ListItem.Property(TextColor)]</value>
		<value condition="!Skin.HasSetting(Home_Horizontal)">$VAR[main_color]</value>
		<value>white</value>
	</variable>
	<variable name="menu_focus_color">
		<value condition="!String.IsEmpty(Container(9000).ListItem.Property(TextColor))">$INFO[Container(9000).ListItem.Property(TextColor)]</value>
		<value>$VAR[main_color]</value>
	</variable>
	<variable name="menu_subfocus_color">
		<value condition="!String.IsEmpty(Container(9001).ListItem.Property(TextColor))">$INFO[Container(9001).ListItem.Property(TextColor)]</value>
		<value>$VAR[main_color]</value>
	</variable>
	<variable name="menu_bg_color">
		<value condition="!String.IsEmpty(Skin.String(menu_bg_color)) + !String.IsEqual(Skin.String(menu_bg_color),None)">$INFO[Skin.String(menu_bg_color)]</value>
		<value condition="[String.IsEmpty(Skin.String(menu_bg_color)) | String.IsEqual(Skin.String(menu_bg_color),None)] + Skin.HasSetting(Home_Horizontal)">black</value>
		<value condition="[String.IsEmpty(Skin.String(menu_bg_color)) | String.IsEqual(Skin.String(menu_bg_color),None)] + !Skin.HasSetting(Home_Horizontal)">FF242424</value>
		<value>black</value>
	</variable>
	<variable name="submenu_color">
		<value condition="!String.IsEmpty(Skin.String(submenu_color)) + !String.IsEqual(Skin.String(submenu_color),None)">$INFO[Skin.String(submenu_color)]</value>
		<value condition="[String.IsEmpty(Skin.String(submenu_color)) | String.IsEqual(Skin.String(submenu_color),None)] + Skin.HasSetting(Home_Horizontal)">FF444444</value>
		<value condition="[String.IsEmpty(Skin.String(submenu_color)) | String.IsEqual(Skin.String(submenu_color),None)] + !Skin.HasSetting(Home_Horizontal)">grey_50</value>
		<value>grey_50</value>
	</variable>
	<variable name="splash_path">
		<value condition="!String.IsEmpty(Skin.String(splash_path))">$INFO[Skin.String(splash_path)]</value>
		<value>special://skin/extras/splash.jpg</value>
	</variable>

	<variable name="DialogSeekBarLabel">
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![player.forwarding | player.rewinding]">[B]$INFO[Player.SeekStepSize][/B]</value>
		<!-- <value condition="Player.HasPerformedSeek(3) + ![player.forwarding | player.rewinding]">[B]$INFO[Player.SeekOffset][/B]</value> -->
		<value condition="Player.Playing + !Player.Seeking + !Player.HasPerformedSeek(3)">[B]$LOCALIZE[31042][/B]</value>
		<value condition="[Player.Paused + !Player.Caching] + !Player.Seeking + !Player.HasPerformedSeek(3)">[B]$LOCALIZE[112][/B]</value>
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking + !Player.HasPerformedSeek(3)">[B]$LOCALIZE[15107] $INFO[Player.CacheLevel]%[/B]</value>
		<value condition="Player.Paused">[B]$LOCALIZE[112][/B]</value>
		<value condition="Player.Seeking">[B]$LOCALIZE[773] $INFO[Player.SeekOffset][/B]</value>
		<value condition="Player.Rewinding2x + !Player.Seeking">[B]$LOCALIZE[31045] x2[/B]</value>
		<value condition="Player.Rewinding4x + !Player.Seeking">[B]$LOCALIZE[31045] x4[/B]</value>
		<value condition="Player.Rewinding8x + !Player.Seeking">[B]$LOCALIZE[31045] x8[/B]</value>
		<value condition="Player.Rewinding16x + !Player.Seeking">[B]$LOCALIZE[31045] x16[/B]</value>
		<value condition="Player.Rewinding32x + !Player.Seeking">[B]$LOCALIZE[31045] x32[/B]</value>
		<value condition="Player.Forwarding2x + !Player.Seeking">[B]$LOCALIZE[31044] x2[/B]</value>
		<value condition="Player.Forwarding4x + !Player.Seeking">[B]$LOCALIZE[31044] x4[/B]</value>
		<value condition="Player.Forwarding8x + !Player.Seeking">[B]$LOCALIZE[31044] x8[/B]</value>
		<value condition="Player.Forwarding16x + !Player.Seeking">[B]$LOCALIZE[31044] x16[/B]</value>
		<value condition="Player.Forwarding32x + !Player.Seeking">[B]$LOCALIZE[31044] x32[/B]</value>
		<value condition="Player.HasPerformedSeek(3) + !Player.Seeking">[B]$INFO[Player.SeekOffset][/B]</value>
	</variable>
	<variable name="shortcuts_bgpath">
		<value condition="!String.IsEmpty(Container(211).ListItem.Property(backgroundName))">$INFO[Container(211).ListItem.Property(backgroundName)]</value>
		<value>$INFO[Container(211).ListItem.Property(background)]</value>
	</variable>
	<variable name="sub_lang_name">		
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,ara)">ar</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,bul)">bg</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,bos)">bs</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,cat)">ca</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,cze)">cs</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,dan)">da</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,ger)">de</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,gre)">el</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,eng)">en</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,spa)">es</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,est)">et</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,fas)">fa</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,fin)">fi</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,fao)">fo</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,fra)">fr</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,glg)">gl</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,heb)">he</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,hin)">hi</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,hrv)">hr</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,hun)">hu</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,hye)">hy</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,ind)">id</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,isl)">is</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,ita)">it</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,jpn)">ja</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,kaz)">kk</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,kor)">ko</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,itz)">lb</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,lit)">lt</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,lav)">lv</value>		
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,mkd)">mk</value>		
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,may)">ms</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,dut)">nl</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,nor)">no</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,pol)">pl</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,por)">pt</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,rum)">ro</value>		
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,rus)">ru</value>	
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,slo)">sk</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,slv)">sl</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,alb)">sq</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,srp)">sr</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,swe)">sv</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,tur)">tr</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,ukr)">uk</value>		
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,vie)">vi</value>
		<value condition="String.IsEqual(VideoPlayer.SubtitlesLanguage,chi)">zh</value>
	</variable>
	<!-- Password Protection -->
	<variable name="passcode">
		<value condition="[String.IsEmpty(Container(211).ListItem.Property(ParentalControl)) | String.Contains(Container(211).ListItem.Property(ParentalControl),no)]">$LOCALIZE[106]</value>
		<value>$LOCALIZE[107]</value>
	</variable>
	<variable name="temp_passcode">
		<value condition="!String.IsEmpty(Skin.String(temp))">$INFO[Skin.String(temp)]</value>
		<value>$INFO[Skin.String(passcode)]</value>
	</variable>
	<variable name="password_time">
		<value condition="!String.IsEmpty(Skin.String(password_time))">$INFO[Skin.String(password_time)]</value>
		<value>5</value>
	</variable>
	<variable name="password_fanart">
		<value condition="!String.IsEmpty(Skin.String(password_fanart))">$INFO[Skin.String(password_fanart)]</value>
		<value>$VAR[default_global_bg]</value>
	</variable>

	<variable name="password_notification">
		<value condition="String.IsEqual(Skin.String(mypassword),Skin.String(passcode))">$LOCALIZE[31086] $VAR[password_time] $LOCALIZE[12391]</value>
		<value>$LOCALIZE[31089]!</value>
	</variable>
	<variable name="password_notification_icon">
		<value condition="String.IsEqual(Skin.String(mypassword),Skin.String(passcode))">key.png</value>
		<value condition="!String.IsEqual(Skin.String(mypassword),Skin.String(passcode))">defaulticonerror.png</value>
	</variable>
	<variable name="widelist_fakecdart">
		<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="Container.Content(seasons)">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Art(poster)]</value>
	</variable>

	<variable name="camera_brand">
		<value condition="String.Contains(ListItem.PictureCamMake,nikon)">nikon.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,canon)">canon.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,apple)">apple.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,samsung)">samsung.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,sony)">sony.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,pentax)">pentax.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,htc)">htc.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,casio)">casio.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,fujifilm)">fujifilm.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,nokia)">nokia.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,panasonic)">panasonic.png</value>	
		<value condition="String.Contains(ListItem.PictureCamMake,gopro)">gopro.png</value>	
		<value condition="String.Contains(ListItem.PictureCamMake,olympus)">olympus.png</value>
		<value condition="String.Contains(ListItem.PictureCamMake,lg electronics)">lg.png</value>
		<value>default.png</value>
	</variable>

	<variable name="PosterThumb">
		<value condition="String.IsEqual(ListItem.Label,..)">$INFO[ListItem.Icon]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEqual(ListItem.Art(animatedposter), ) + !Window.IsActive(Home)">$INFO[ListItem.Art(animatedposter)]</value>
		<!-- <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Window(Home).Property(SkinHelper.AnimatedPoster))">$INFO[Window(Home).Property(SkinHelper.AnimatedPoster)]</value>	 -->
		<value condition="Container.Content(seasons) + String.Contains(ListItem.Label,*,left) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="Container.Content(episodes) + !String.IsEmpty(Container.Art(season.poster))">$INFO[Container.Art(season.poster)]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(Container.Art(poster))">$INFO[Container.Art(poster)]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(Container.Art(tvshow.poster))">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(poster))">$INFO[ListItem.Property(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(tvshow.poster))">$INFO[ListItem.Property(tvshow.poster)]</value>
		<value condition="Container.Content(genres) + Window.IsActive(MyMusicNav.xml)">$VAR[Music_Genre_Icons]</value>
		<value condition="Container.Content(genres)">$VAR[Genre_Icons]</value>
		<value condition="!String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value> 
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value>defaultmovies.png</value>
	</variable>

	<variable name="HelperPosterThumb">
		<value condition="String.IsEqual(Container(999).ListItem.Label,..)">$INFO[Container(999).ListItem.Icon]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEqual(Container(999).ListItem.Art(animatedposter), )">$INFO[Container(999).ListItem.Art(animatedposter)]</value>
		<!--  <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Window(Home).Property(SkinHelper.AnimatedPoster))">$INFO[Window(Home).Property(SkinHelper.AnimatedPoster)]</value>	 -->
		<value condition="String.IsEqual(Container(999).ListItem.Property(type),season) + String.Contains(Container(999).ListItem.Label,*,left) + !String.IsEmpty(Container(999).ListItem.Art(tvshow.poster))">$INFO[Container(999).ListItem.Art(tvshow.poster)]</value>
		<value condition="String.IsEqual(Container(999).ListItem.Property(type),season) + !String.IsEmpty(Container(999).ListItem.Art(poster))">$INFO[Container(999).ListItem.Art(poster)]</value>
		<value condition="String.IsEqual(Container(999).ListItem.Property(type),episode) + !String.IsEmpty(Container(999).ListItem.Icon)">$INFO[Container(999).ListItem.Icon]</value>
		<value condition="String.IsEqual(Container(999).ListItem.Property(type),episode) + !String.IsEmpty(Container.Art(season.poster))">$INFO[Container.Art(season.poster)]</value>
		<value condition="String.IsEqual(Container(999).ListItem.Property(type),season) + !String.IsEmpty(Container.Art(poster))">$INFO[Container.Art(poster)]</value>
		<value condition="String.IsEqual(Container(999).ListItem.Property(type),season) + !String.IsEmpty(Container.Art(tvshow.poster))">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Container(999).ListItem.Art(tvshow.poster))">$INFO[Container(999).ListItem.Art(tvshow.poster)]</value>
		<value condition="String.IsEqual(Container(999).ListItem.Property(type),episode) + !String.IsEmpty(Container(999).ListItem.Art(poster))">$INFO[Container(999).ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Container(999).ListItem.Art(poster))">$INFO[Container(999).ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Container(999).ListItem.Property(poster))">$INFO[Container(999).ListItem.Property(poster)]</value>
		<value condition="!String.IsEmpty(Container(999).ListItem.Property(tvshow.poster))">$INFO[Container(999).ListItem.Property(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Container(999).ListItem.Thumb)">$INFO[Container(999).ListItem.Thumb]</value>
		<value condition="!String.IsEmpty(Container(999).ListItem.Icon)">$INFO[Container(999).ListItem.Icon]</value>
		<value>defaultmovies.png</value>
	</variable>

	<variable name="BannerImage">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(banner))">$INFO[ListItem.Property(banner)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.Music.Banner))">$INFO[Window(home).Property(SkinHelper.Music.Banner)]</value>
		<value condition="String.IsEqual(Listitem.Label,..)">defaultfolderback.png</value>
	</variable>
	<variable name="BannerImageFallback">
		<value condition="String.IsEqual(ListItem.Label,..)">defaultfolderback.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(FanArt.image)">$INFO[FanArt.image]</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>

	<variable name="widgetoninfoaction">
		<value condition="Control.HasFocus(9002) + String.Contains(Container(9002).ListItem.Property(type),movie) + !String.IsEmpty(Container(9002).ListItem.Property(DBID))">RunScript(script.skin.helper.service,action=showinfo,movieid=$INFO[Container(9002).ListItem.Property(dbid)])</value>
		<value condition="Control.HasFocus(9002) + String.Contains(Container(9002).ListItem.Property(type),show) + !String.IsEmpty(Container(9002).ListItem.Property(DBID))">RunScript(script.skin.helper.service,action=showinfo,tvshowid=$INFO[Container(9002).ListItem.Property(dbid)])</value>
		<value condition="Control.HasFocus(9002) + String.Contains(Container(9002).ListItem.Property(type),episode) + !String.IsEmpty(Container(9002).ListItem.Property(DBID))">RunScript(script.skin.helper.service,action=showinfo,episodeid=$INFO[Container(9002).ListItem.Property(dbid)])</value>
		<value condition="Control.HasFocus(9002) + String.Contains(Container(9002).ListItem.dbtype,movie) + !String.IsEmpty(Container(9002).ListItem.DBID)">RunScript(script.skin.helper.service,action=showinfo,movieid=$INFO[Container(9002).ListItem.dbid])</value>
		<value condition="Control.HasFocus(9002) + String.Contains(Container(9002).ListItem.dbtype,show) + !String.IsEmpty(Container(9002).ListItem.DBID)">RunScript(script.skin.helper.service,action=showinfo,tvshowid=$INFO[Container(9002).ListItem.dbid])</value>
		<value condition="Control.HasFocus(9002) + String.Contains(Container(9002).ListItem.dbtype,episode) + !String.IsEmpty(Container(9002).ListItem.DBID)">RunScript(script.skin.helper.service,action=showinfo,episodeid=$INFO[Container(9002).ListItem.dbid])</value>
	</variable>

	<variable name="Genre_Icons">
		<value condition="String.IsEmpty(Skin.String(MovieGenreIconPack.path)) + [String.Contains(Listitem.label,א) | String.Contains(Listitem.label,ה) | String.Contains(Listitem.label,ו) | String.Contains(Listitem.label,י) | String.Contains(Listitem.label,פ) | String.Contains(Listitem.label,ר)]">resource://resource.images.moviegenreicons.arctic.zephyr/$VAR[genre_translations].png</value>
		<value condition="String.IsEmpty(Skin.String(MovieGenreIconPack.path)) | Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.arctic.zephyr/)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[ListItem.Label].png</value>

		<value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.poster/)">resource://resource.images.moviegenreicons.poster/$INFO[ListItem.Label].jpg</value>
		<value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.coloured/)">resource://resource.images.moviegenreicons.coloured/$INFO[ListItem.Label].jpg</value>
		<value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.white/)">resource://resource.images.moviegenreicons.white/$INFO[ListItem.Label].jpg</value>
		<value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.transparent/)">resource://resource.images.moviegenreicons.transparent/$INFO[ListItem.Label].png</value>
		<value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.grey/)">resource://resource.images.moviegenreicons.grey/$INFO[ListItem.Label].jpg</value>
		<value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.filmstrip/)">resource://resource.images.moviegenreicons.filmstrip/$INFO[ListItem.Label].jpg</value>
		<value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.xzener-reflection/)">resource://resource.images.moviegenreicons.xzener-reflection/$INFO[ListItem.Label].png</value>
		<value>DefaultGenre.png</value>
	</variable>
	<variable name="Genre_fanart">
		<value condition="String.Contains(Container.FolderPath,videodb://tvshows/genres,left)">http://localhost:52307/gettvshowgenreimages&amp;title=$INFO[Listitem.Label]&amp;type=fanart.0&amp;fallback=$VAR[default_global_bg]</value>
		<value>http://localhost:52307/getmoviegenreimagesrandom&amp;title=$INFO[Listitem.Label]&amp;type=fanart.0&amp;fallback=$VAR[default_global_bg]</value>
	</variable>

	<variable name="Music_Genre_Icons">
		<value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.text/)">resource://resource.images.musicgenreicons.text/$INFO[ListItem.Label].jpg</value>
		<value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.grey/)">resource://resource.images.musicgenreicons.grey/$INFO[ListItem.Label].jpg</value>
		<value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.poster/)">resource://resource.images.musicgenreicons.poster/$INFO[ListItem.Label].jpg</value>
		<value condition="String.IsEmpty(Skin.String(MusicGenreIconPack.path))">defaultmusicsongs.png</value>
	</variable>

	<variable name="genre_translations">
		<value condition="String.IsEqual(ListItem.Label,אימה)">Horror</value>
		<value condition="String.IsEqual(ListItem.Label,אנימציה)">Animation</value>
		<value condition="String.IsEqual(ListItem.Label,אקשן)">Action</value>
		<value condition="String.IsEqual(ListItem.Label,דוקומנטרי)">Documentary</value>
		<value condition="String.IsEqual(ListItem.Label,דרמה)">Drama</value>
		<value condition="String.IsEqual(ListItem.Label,הסטוריה)">History</value>
		<value condition="String.IsEqual(ListItem.Label,הרפתקאות)">Adventure</value>
		<value condition="String.IsEqual(ListItem.Label,זר)">Short</value>
		<value condition="String.IsEqual(ListItem.Label,ישראלי)">Biography</value>
		<value condition="String.IsEqual(ListItem.Label,מבוגרים)">Adult</value>
		<value condition="String.IsEqual(ListItem.Label,מדע בדיוני)">Sci-Fi</value>
		<value condition="String.IsEqual(ListItem.Label,מוסיקה)">Music</value>
		<value condition="String.IsEqual(ListItem.Label,מותחן)">Thriller</value>
		<value condition="String.IsEqual(ListItem.Label,מלחמה)">War</value>
		<value condition="String.IsEqual(ListItem.Label,מסתורין)">Mystery</value>
		<value condition="String.IsEqual(ListItem.Label,מערבון)">Western</value>
		<value condition="String.IsEqual(ListItem.Label,משפחה)">Family</value>
		<value condition="String.IsEqual(ListItem.Label,ספורט)">Sport</value>
		<value condition="String.IsEqual(ListItem.Label,פנטזיה)">Fantasy</value>
		<value condition="String.IsEqual(ListItem.Label,פעולה)">Action</value>
		<value condition="String.IsEqual(ListItem.Label,פשע)">Crime</value>
		<value condition="String.IsEqual(ListItem.Label,קומדיה)">Comedy</value>
		<value condition="String.IsEqual(ListItem.Label,קומדיה רומנטית)">Soap</value>
		<value condition="String.IsEqual(ListItem.Label,חדשות)">News</value>
		<value condition="String.IsEqual(ListItem.Label,מדובב)">Mini-Series</value>
		<value condition="String.Contains(ListItem.Label,רומנטי)">Romance</value>
		<value>Short</value>
	</variable>

	
	
</includes>
