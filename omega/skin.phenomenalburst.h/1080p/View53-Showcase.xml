<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View-ShowCase-53">
		<include>ShowCase_View</include>
	</include>
	<include name="ShowCase_View">
		<control type="group">
			<visible>Control.IsVisible(53)</visible>
			<visible>Integer.IsGreater(Container.NumItems,-1) | !Container.IsUpdating</visible>
			
			<control type="multiimage">
				<description>Fanart</description>
				<posx>0</posx>
				<posy>0</posy>
				<width>1920</width>
				<height>1080</height>
				<aspectratio>scale</aspectratio>
				<imagepath background="true">$VAR[fanart_bg]</imagepath>
				<timeperimage>5000</timeperimage>
				<randomize>true</randomize>
				<fadetime>650</fadetime>
				<animation effect="fade" start="100" end="70" time="300" condition="true">Conditional</animation>
				<visible>!Player.HasVideo</visible>
			</control>

			<control type="image">
				<left>0</left>
				<top>400</top>
				<width>1920</width>
				<height>680</height>
				<texture background="true">views\showcase_floor.png</texture>
			</control>

			<!-- settings for cdart -->
			<control type="label" id="4444">
				<description>ShowCase Open Case Movies - Enable OpenCase mod</description>
				<label>1</label>
				<include>HiddenObject</include>
				<include>ShowCaseDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Control.IsVisible(53) + !Skin.HasSetting(showcasemod) + !Container.Content(genres) + [Container.Content(movies) | Container.Content(tvshows) |  Container.Content(seasons) | Container.Content(sets)] + !ListItem.IsCollection</visible>
			</control>
			<control type="label" id="4445">
				<description>ShowCase Boxset Mod - Enable BoxSet mod</description>
				<label>1</label>
				<include>HiddenObject</include>
				<include>ShowCaseDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Control.IsVisible(53) + !Skin.HasSetting(boxsetmod) + ListItem.IsCollection + !Container.Content(genres)</visible>
			</control>
			<control type="label" id="4446">
				<description>ShowCase Open Case Sets - Enable OpenCase mod</description>
				<label>1</label>
				<include>HiddenObject</include>
				<include>ShowCaseDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Control.IsVisible(53) + !Skin.HasSetting(showcasemod) + Skin.HasSetting(boxsetmod) + !Container.Content(genres) + [Container.Content(movies) | Container.Content(sets)] + ListItem.IsCollection</visible>
			</control>

			<!-- Hidden Button to show\hide info panel -->
			<control type="button" id="4449">
				<posx>2000</posx>
				<posy>-10</posy>
				<width>1</width>
				<height>1</height>
				<label></label>
				<texturefocus>-</texturefocus>
				<texturenofocus>-</texturenofocus>
				<onup>9100</onup>
				<ondown>53</ondown>
				<onright>Control.Move(53,1)</onright>
				<onleft>Control.Move(53,-1)</onleft>
				<onclick>down</onclick>
				<onclick>select</onclick>
				<onback>53</onback>
			</control>
			<!-- INFO Panel -->
			<control type="group">
				<posx>90</posx>
				<posy>130</posy>
				<visible>!String.IsEqual(ListItem.label,..) + !ListItem.IsCollection + !Skin.HasSetting(Showcase_HidePanel) + !Control.HasFocus(4449) + Integer.IsGreater(Container.NumItems,0)</visible>
				<visible>![Container.OnNext | Container.OnPrevious]</visible>
				<animation effect="slide" start="0,350" end="0,0" time="300" delay="600">Visible</animation>
				<animation effect="slide" start="0,0" end="0,350" time="300" delay="0" condition="Skin.HasSetting(Showcase_HidePanel) | Control.HasFocus(4449)">Hidden</animation>
				<!-- <animation effect="slide" start="0,400" end="0,0" time="400" delay="1000" tween="cubic" easing="inout">Visible</animation> -->
				<control type="image">
					<description>background image</description>
					<left>0</left>
					<top>0</top>
					<width>1740</width>
					<height>780</height>
					<texture colordiffuse="B3FFFFFF" border="40">views/listpanel_back.png</texture>
				</control>

				<!-- Title -->
				<control type="label">
					<posx>700</posx>
					<posy>40</posy>
					<width>1000</width>
					<height>100</height>
					<font>font-30</font>
					<textcolor>$var[main_color]</textcolor>
					<align>center</align>
					<label>$VAR[movie_label]</label>
					<wrapmultiline>false</wrapmultiline>	
				</control>


				<!-- plot -->
				<control type="label">
					<description>Plot Title</description>
					<posx>1680</posx>
					<posy>120</posy>
					<width>200</width>
					<height>30</height>
					<font>font-25</font>
					<align>right</align>
					<textcolor>$VAR[main_color]</textcolor>
					<label>$LOCALIZE[207]:</label>
					<animation effect="slide" end="-1080" time="0" condition="!String.IsEqual(System.Language,Hebrew) + !Skin.HasSetting(Prefer_RTL)">Conditional</animation>
					<visible>!String.IsEmpty(ListItem.Plot)</visible>
				</control>
				<control type="textbox">
					<description>Plot Value for TVShows\Movies</description>
					<posx>520</posx>
					<posy>160</posy>
					<width>1150</width>
					<height>210</height>
					<font>font-24</font>
					<include>align_tag</include>
					<textcolor>grey_b</textcolor>
					<label>$VAR[ViewFanartText]</label>
					<autoscroll time="2000" delay="13000" repeat="6000">!Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>!String.IsEmpty(ListItem.Plot)</visible>
				</control>

				<control type="label">
					<posx>30</posx>
					<posy>40</posy>
					<width>450</width>
					<height>30</height>
					<label>[B]$INFO[ListItem.Season,, $LOCALIZE[33054]] $INFO[ListItem.Episode,, $LOCALIZE[20360]][/B]</label>
					<font>font-22</font>
					<align>center</align>
					<textcolor>grey_b</textcolor>
					<visible>Container.Content(TVShows)</visible>
				</control>
				<control type="label">
					<posx>30</posx>
					<posy>40</posy>
					<width>450</width>
					<height>30</height>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes), , $LOCALIZE[16101] ][B]$INFO[ListItem.Episode,, $LOCALIZE[20360] - ][/B] </label>
					<font>font-22</font>
					<align>center</align>
					<textcolor>grey_b</textcolor>
					<visible>Container.Content(Seasons)</visible>
				</control>
				<!-- Star Rating -->
				<control type="group">
					<posx>45</posx>
					<posy>40</posy>
					<animation effect="slide" end="160" time="0" condition="!String.IsEqual(System.Language,Hebrew) + !Skin.HasSetting(Prefer_RTL)">Conditional</animation>
					<visible>!String.IsEmpty(ListItem.StarRating) + !ListItem.IsCollection + !String.IsEmpty(ListItem.Rating) + ![Container.Content(Seasons) | Container.Content(TVShows)]</visible>
					<control type="image">
						<description>Rating image</description>
						<posx>35</posx>
						<posy>0</posy>
						<width>188</width>
						<height>38</height>
						<texture background="true">rating0.png</texture>
						<aspectratio align="right">keep</aspectratio>
					</control>
					<control type="image">
						<description>Rating image</description>
						<posx>35</posx>
						<posy>0</posy>
						<width>188</width>
						<height>38</height>
						<texture background="true" colordiffuse="$VAR[main_color]">$INFO[ListItem.StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!String.IsEqual(ListItem.StarRating,rating0.png)</visible>
					</control>
					<!-- Rating -->
					<control type="label">
						<posx>233</posx>
						<posy>0</posy>
						<width>380</width>
						<height>30</height>
						<label>$INFO[ListItem.Rating]</label>
						<font>font-20</font>
						<align>left</align>
						<textcolor>grey_a</textcolor>
					</control>
					<control type="label">
						<description>Rating Title</description>
						<animation effect="slide" end="-560" time="0" condition="!String.IsEqual(System.Language,Hebrew) + !Skin.HasSetting(Prefer_RTL)">Conditional</animation>
						<posx>400</posx>
						<posy>-10</posy>
						<width>200</width>
						<height>30</height>
						<font>font-25</font>
						<include>align_tag</include>
						<textcolor>$VAR[main_color]</textcolor>
						<label>$LOCALIZE[563]:</label>
					</control>
				</control>

				<!-- Genre -->
				<control type="label">
					<left>35</left>
					<top>75</top>
					<width>454</width>
					<height>30</height>
					<align>center</align>
					<font>font-24</font>
					<textcolor>grey_b</textcolor>
					<label>$INFO[ListItem.Genre]</label>
					<scroll>True</scroll>
					<visible>!String.IsEmpty(ListItem.Genre)</visible>
				</control>

				<!-- Year -->
				<control type="label">
					<left>485</left>
					<top>30</top>
					<width>200</width>
					<height>30</height>
					<align>right</align>
					<font>font-25</font>
					<textcolor>$VAR[main_color]</textcolor>
					<label>$LOCALIZE[345]:</label>
					<animation effect="slide" end="-80" time="0" condition="!String.IsEqual(System.Language,Hebrew) + !Skin.HasSetting(Prefer_RTL)">Conditional</animation>
					<visible>!String.IsEmpty(ListItem.Year)</visible>
				</control>
				<control type="label">
					<left>505</left>
					<top>40</top>
					<width>200</width>
					<height>30</height>
					<align>left</align>
					<font>font-20</font>
					<textcolor>grey_b</textcolor>
					<label>$INFO[ListItem.Year]</label>
					<animation effect="slide" end="110" time="0" condition="!String.IsEqual(System.Language,Hebrew) + !Skin.HasSetting(Prefer_RTL)">Conditional</animation>
					<visible>!String.IsEmpty(ListItem.Year)</visible>
				</control>

				<!-- Duration -->
				<control type="label">
					<left>495</left>
					<top>80</top>
					<width>200</width>
					<height>30</height>
					<align>center</align>
					<font>font-20</font>
					<textcolor>grey_b</textcolor>
					<label>$INFO[ListItem.Duration,, $LOCALIZE[12391]]</label>
					<visible>!String.IsEmpty(ListItem.Duration)</visible>
				</control>

				<!-- Fanart -->
				<control type="image">
					<description>Fanart</description>
					<posx>32</posx>
					<posy>129</posy>
					<width>462</width>
					<height>260</height>
					<aspectratio>stretch</aspectratio>
					<texture background="true" fallback="special://skin/backgrounds/videos.jpg">$INFO[ListItem.Art(fanart)]</texture>
					<fadetime>300</fadetime>
					<animation effect="fade" start="100" end="90" time="300" condition="true">Conditional</animation>
				</control>

				<control type="image">
					<posx>32</posx>
					<posy>340</posy>
					<width>462</width>
					<height>50</height>
					<texture background="true">black.png</texture>
					<animation effect="fade" end="80" time="0" condition="true">Conditional</animation>
					<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
				</control>
				<!-- HD\SD\3D Indicator flag -->
				<control type="image">
					<posx>45</posx>
					<posy>340</posy>
					<width>42</width>
					<height>48</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$VAR[UnFocusHDIndicator]</texture>
					<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
				</control>
				<!-- Audio Channels -->
				<control type="label">
					<posx>200</posx>
					<posy>348</posy>
					<label>$VAR[AudioChannels2]$INFO[ListItem.VideoResolution,  ,]</label>
					<font>font-16</font>
					<textcolor>white</textcolor>
					<width>110</width>
					<height>52</height>
					<align>left</align>
				</control>
				<!-- Dubbed Language -->
				<control type="group">
					<posx>375</posx>
					<posy>350</posy>
					<include>ListItemLanguage</include>
				</control>
				<!-- Audio Codec -->
				<control type="image">
					<colordiffuse>white</colordiffuse>
					<posx>100</posx>
					<posy>335</posy>
					<width>90</width>
					<height>58</height>
					<texture background="true">$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
				</control>

				<control type="image">
					<left>30</left>
					<top>70</top>
					<width>1678</width>
					<height>60</height>
					<texture border="1">separator2.png</texture>
				</control>
				<control type="image">
					<left>30</left>
					<top>331</top>
					<width>1678</width>
					<height>60</height>
					<texture border="1">separator2.png</texture>
				</control>
				<control type="image">
					<left>494</left>
					<top>30</top>
					<width>2</width>
					<height>360</height>
					<texture border="1">separator3.png</texture>
				</control>
				<control type="image">
					<left>694</left>
					<top>30</top>
					<width>2</width>
					<height>100</height>
					<texture border="1">separator3.png</texture>
				</control>
			</control>
			<!-- End of INFO Panel -->

			<control type="image">
				<left>785</left>
				<top>965</top>
				<width>350</width>
				<height>115</height>
				<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
				<visible>Skin.HasSetting(Enable.ShowCase.Logo)</visible>
			</control>
			<control type="group">
				<visible>[Container.Content(movies) + !Skin.HasSetting(Enable.ShowCase.FloorInfo.movies) + [!Skin.HasSetting(Enable.ShowCase.Logo) | String.IsEmpty(ListItem.Art(clearlogo))]] | [Container.Content(tvshows) + !Skin.HasSetting(Enable.ShowCase.FloorInfo.tvshows) + [!Skin.HasSetting(Enable.ShowCase.Logo) | String.IsEmpty(ListItem.Art(clearlogo))]] | [Container.Content(seasons) + !Skin.HasSetting(Enable.ShowCase.FloorInfo.seasons)] | [Container.Content(musicvideos) + !Skin.HasSetting(Enable.ShowCase.FloorInfo.movies)]</visible>
				<animation effect="slide" start="0,0" end="0,37" time="0" tween="cubic" easing="inout" condition="String.IsEmpty(ListItem.Art(clearlogo)) + Control.IsVisible(53) + Skin.HasSetting(Enable.ShowCase.Logo)">Conditional</animation>
				<control type="grouplist">
					<left>300</left>
					<top>960</top>
					<width>1320</width>
					<height>42</height>
					<align>center</align>
					<itemgap>18</itemgap>
					<orientation>horizontal</orientation>
					<visible>!ListItem.IsCollection</visible>
					<control type="label">
						<width>auto</width>
						<height>42</height>
						<aligny>top</aligny>
						<align>center</align>
						<font>font-24</font>
						<textcolor>white</textcolor>
						<scroll>true</scroll>
						<label>$VAR[FloorLabelVar]</label>
						<textoffsety>-2</textoffsety>
						<textoffsetx>0</textoffsetx>
					</control>
					<control type="image">
						<width>42</width>
						<height>46.5</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$VAR[UnFocusHDIndicator]</texture>
						<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
					</control>
				</control>
			</control>
			<control type="label">
				<left>300</left>
				<top>1000</top>
				<width>1320</width>
				<height>42</height>
				<align>center</align>
				<font>font-24</font>
				<textcolor>white</textcolor>
				<scroll>true</scroll>
				<label>$VAR[FloorLabelVar]</label>
				<textoffsety>-2</textoffsety>
				<textoffsetx>0</textoffsetx>
				<visible>[Control.IsVisible(53) + ListItem.IsCollection + [!Skin.HasSetting(Enable.ShowCase.Logo) | String.IsEmpty(ListItem.Art(clearlogo))]]</visible>
			</control>

			<control type="group">
				<left>300</left>
				<top>965</top>
				<visible>[Control.IsVisible(53) + Container.Content(movies) + !Skin.HasSetting(Enable.ShowCase.FloorInfo.movies) + [!Skin.HasSetting(Enable.ShowCase.Logo)]] | [Control.IsVisible(53) + Container.Content(tvshows) + !Skin.HasSetting(Enable.ShowCase.FloorInfo.tvshows) + [!Skin.HasSetting(Enable.ShowCase.Logo)]] | [Control.IsVisible(53) + Container.Content(seasons) + !Skin.HasSetting(Enable.ShowCase.FloorInfo.seasons)]</visible>

				<control type="label">
					<left>185</left>
					<top>32</top>
					<width>1000</width>
					<height>30</height>
					<align>center</align>
					<font>font-22</font>
					<textcolor>white</textcolor>
					<label>$VAR[FloorSubLabelVar]</label>
					<textoffsetx>30</textoffsetx>
					<visible>Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | [Container.Content(movies) + !ListItem.IsCollection]</visible>
					<visible>Skin.HasSetting(Showcase_HidePanel)</visible>
					<animation effect="slide" start="0,0" end="0,16" time="320" tween="cubic" easing="inout" condition="[Control.IsVisible(53) + [Container.Content(movies) + Skin.HasSetting(Enable.Showcase.MovieGenre)]] | [Control.IsVisible(53) + Container.Content(seasons) + Skin.HasSetting(Enable.Showcase.SeasonGenre)]">Conditional</animation>
				</control>
				<control type="label">
					<left>185</left>
					<top>70</top>
					<width>950</width>
					<height>30</height>
					<align>center</align>
					<font>font-20</font>
					<textcolor>white</textcolor>
					<label>$INFO[ListItem.Genre]</label>
					<textoffsetx>30</textoffsetx>
					<visible>Skin.HasSetting(Showcase_HidePanel)</visible>
					<visible>[Control.IsVisible(53) + [Container.Content(movies) + !Skin.HasSetting(Enable.Showcase.MovieGenre)]] | [Control.IsVisible(53) + [Container.Content(tvshows) + !Skin.HasSetting(Enable.Showcase.TVShowGenre)]] | [Control.IsVisible(52) + [Container.Content(movies) + Skin.HasSetting(Enable.Landscape.MovieGenre)]] | [Control.IsVisible(52) + [Container.Content(tvshows) + Skin.HasSetting(Enable.Landscape.TVShowGenre)]] | [Control.IsVisible(503) + [Container.Content(movies) + Skin.HasSetting(Enable.Wall.MovieGenre)]] | [Control.IsVisible(503) + [Container.Content(tvshows) + Skin.HasSetting(Enable.Wall.TVShowGenre)]] | [Control.IsVisible(53) + Container.Content(seasons) + !Skin.HasSetting(Enable.Showcase.SeasonGenre)] | [Control.IsVisible(52) + Container.Content(seasons) + Skin.HasSetting(Enable.Landscape.SeasonGenre)] | [Control.IsVisible(503) + Container.Content(seasons) + Skin.HasSetting(Enable.Wall.SeasonGenre)]</visible>
					<animation effect="fade" start="0" end="100" time="320">VisibleChange</animation>
				</control>
			</control>
			<include>View_53_ShowCase</include>
		</control>
	</include>
	<include name="scmfixed">
		<control type="fixedlist" id="53">
			<include>contents53list</include>
		</control>
	</include>
	<include name="scmwrap">
		<control type="wraplist" id="53">
			<include>contents53list</include>
		</control>
	</include>
	<include name="contents53list">
		<left>-69</left>
		<top>540</top>
		<width>2058</width>
		<height>525</height>
		<onleft>53</onleft>
		<onright>53</onright>
		<onup>4449</onup>
		<ondown>72</ondown>
		<!-- <visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos) | Container.Content(seasons) | Container.Content(genres) | Container.Content(sets)</visible> -->
		<viewtype label="31203">list</viewtype>
		<visible>String.IsEqual(Window(Home).Property(SkinHelper.ForcedView),53) | String.IsEmpty(Window(Home).Property(SkinHelper.ForcedView))</visible>
		<pagecontrol>72</pagecontrol>
		<scrolltime tween="quadratic">300</scrolltime>
		<focusposition>3</focusposition>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<itemlayout height="525" width="155" condition="![Skin.HasSetting(noshowcaseflow) + !Control.IsVisible(6000)]"/>
		<focusedlayout height="525" width="155" condition="![Skin.HasSetting(noshowcaseflow) + !Control.IsVisible(6000)]"/>
		<itemlayout height="525" width="294" condition="Skin.HasSetting(noshowcaseflow)">
			<control type="group">
				<top>30</top>
				<animation effect="zoom" start="80" end="90" center="147,345" time="300" reversible="false" tween="cubic">Focus</animation>
				<animation effect="fade" time="0" delay="800">Visible</animation>
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseBackVar]</texture>
					<include>MovieShowcaseNoCase</include>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseBackVar]</texture>
					<include>MovieShowcaseNoCaseClear</include>
				</control>
				<control type="image">
					<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumb</include>
				</control>
				<control type="image">
					<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumbReflection</include>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
					<include>MovieShowcaseCase</include>
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase</include>
					<texture background="true">$VAR[IconOverlay0Var]</texture>
				</control>
			</control>
		</itemlayout>
		<focusedlayout height="525" width="294" condition="Skin.HasSetting(noshowcaseflow)">
			<control type="group">
				<top>30</top>
				<animation effect="fade" time="0" delay="800">Visible</animation>
				<animation effect="zoom" start="80" end="100" center="147,345" time="300" reversible="false" tween="cubic">Focus</animation>
				<control type="group">
					<visible>Control.IsVisible(7000)</visible>
					<control type="image">
						<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseBackVar]</texture>
						<include>MovieShowcaseCase</include>
					</control>
					<control type="image">
						<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseBackVar]</texture>
						<include>MovieShowcaseNoCase</include>
					</control>
					<control type="image">
						<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseBackVar]</texture>
						<include>MovieShowcaseNoCaseClear</include>
					</control>
					<control type="image">
						<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
						<include>MovieShowcaseThumb</include>
					</control>
					<control type="image">
						<texture background="true" fallback="$VAR[CaseTypePathVar]">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
						<include>MovieShowcaseCase</include>
					</control>
					<control type="image">
						<texture background="true">$VAR[IconOverlay0Var]</texture>
						<include>WatchedOverlayShowCase</include>
					</control>
					<control type="group">
						<left>28</left>
						<top>22</top>
						<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon0</include>
					</control>
					<control type="image">
						<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
						<include>MovieShowcaseThumbReflection</include>
					</control>
					<control type="image">
						<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
						<include>MovieShowcaseCaseReflection</include>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="View_53_ShowCase">
		<control type="group">
			<top>-50</top>
			<left>0</left>
			<animation effect="slide" tween="cubic" time="720" start="0,1080" end="0,0">VisibleChange</animation>
			<control type="group">
				<camera x="960" y="810" />
				<control type="group" id="6001">
					<left>55</left>
					<top>570</top>
					<visible>Container.OnNext + !Skin.HasSetting(noshowcaseflow)</visible>
					<animation effect="slide" end="-135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>15</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>Container.OnNext</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-7</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>1635</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>825</left>
							<visible>Container.OnNext</visible>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<animation effect="rotatey" center="1290" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="608" end="-55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-1Var]</texture>
								<include>MovieShowcaseNoCase</include>
							</control>
							<control type="image">
								<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-1Var]</texture>
								<include>MovieShowcaseNoCaseClear</include>
							</control>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-1Var]</texture>
								<include>MovieShowcaseCase</include>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture background="true">$VAR[IconOverlay-1Var]</texture>
							</control>
							<control type="group">
								<left>28</left>
								<top>22</top>
								<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-1</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
								<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
								<include>MovieShowcaseThumbReflection</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-1Var]</texture>
								<include>MovieShowcaseCaseReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6002">
					<left>55</left>
					<top>570</top>
					<visible>Container.OnPrevious + !Skin.HasSetting(noshowcaseflow)</visible>
					<animation effect="slide" end="135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>1500</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem7</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>-120</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>15</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="-75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>690</left>
							<visible>Container.OnPrevious</visible>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<animation effect="rotatey" center="540" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="1223" end="55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes1Var]</texture>
								<include>MovieShowcaseNoCase</include>
							</control>
							<control type="image">
								<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes1Var]</texture>
								<include>MovieShowcaseNoCaseClear</include>
							</control>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes1Var]</texture>
								<include>MovieShowcaseCase</include>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture background="true">$VAR[IconOverlay1Var]</texture>
							</control>
							<control type="group">
								<left>28</left>
								<top>22</top>
								<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon1</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<include>MovieShowcaseThumbReflection</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png">$VAR[CaseTypePathVar]$VAR[ShowcaseRes1Var]</texture>
								<include>MovieShowcaseCaseReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6000">
					<left>55</left>
					<top>570</top>
					<visible>!Control.IsVisible(6001) + !Control.IsVisible(6002) + !Skin.HasSetting(noshowcaseflow)</visible>
					<control type="group">
						<left>15</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="-135" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-1028" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="0" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-866" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="135" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-704" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="270" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-543" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="405" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-384" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="540" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-226" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1965" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="1028" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1830" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="866" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1695" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="704" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1560" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="543" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1425" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="384" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1290" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="226" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<left>758</left>
						<control type="group">
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<include>MovieShowCaseItem0</include>
						</control>
					</control>
				</control>
				<control type="group" id="7000">
					<visible>[Container.OnNext | Container.OnPrevious]</visible>
					<animation effect="fade" time="1600" end="0" reversible="false">Hidden</animation>
					<control type="label">
						<include>HiddenObject</include>
					</control>
				</control>
			</control>
			<include condition="Skin.HasSetting(HorizontalListNav)">scmfixed</include>
			<include condition="!Skin.HasSetting(HorizontalListNav)">scmwrap</include>
			<!-- scroll -->
			<include content="horizontal_scroll">
				<param name="id" value="72" />
				<param name="listid" value="53" />
				<param name="posy">1140</param>
				<param name="height">10</param>
			</include>

			<control type="group">
				<left>813</left>
				<top>570</top>
				<visible>!Control.IsVisible(7000) + Skin.HasSetting(noshowcaseflow)</visible>
				<include>MovieShowCaseItem0</include>
				<include>BoxsetMod</include>
			</control>
		</control>
	</include>
	<include name="MovieShowcaseThumb">
		<left>-4</left>
		<top>-10</top>
		<width>304</width>
		<height>434</height>
		<align>center</align>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowcaseCase">
		<left>-55</left>
		<top>-50</top>
		<width>375</width>
		<height>500</height>
		<bordersize>20</bordersize>
		<visible>Skin.HasSetting(Enable.ShowCase.Covers)</visible>
	</include>
	<include name="MovieShowcaseNoCase">
		<left>-55</left>
		<top>-20</top>
		<width>375</width>
		<height>470</height>
		<bordersize>20</bordersize>
		<visible>!Skin.HasSetting(Enable.ShowCase.Covers) + !Skin.HasSetting(showcasemod)</visible>
	</include>
	<include name="MovieShowcaseNoCaseClear">
		<left>-55</left>
		<top>-50</top>
		<width>375</width>
		<height>500</height>
		<bordersize>20</bordersize>
		<visible>!Skin.HasSetting(Enable.ShowCase.Covers)  + Skin.HasSetting(useclearcases) + !Skin.HasSetting(showcasemod) + [Container.Content(movies) | Container.Content(sets) | Container.Content(musicvideos)]</visible>
	</include>
	<include name="MovieShowcaseThumbReflection">
		<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
		<left>16</left>
		<top>422</top>
		<width>264</width>
		<height>396</height>
		<colordiffuse>d1FFFFFF</colordiffuse>
	</include>
	<include name="MovieShowcaseCaseReflection">
		<aspectratio scalediffuse="false" aligny="top">stretch</aspectratio>
		<left>-35</left>
		<top>400</top>
		<width>335</width>
		<height>406</height>
		<colordiffuse>d1FFFFFF</colordiffuse>
		<visible>Skin.HasSetting(Enable.ShowCase.Covers) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(genres)</visible>
	</include>
	<include name="WatchedOverlayShowCase">
		<left>188</left>
		<top>-9</top>
		<width>120</width>
		<height>120</height>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowCaseItem-7">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-7Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-7Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-7Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-7</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes-7Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-6">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-6Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-6Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-6Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-6</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>121</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes-6Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-5">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-5Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-5Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-5Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-5</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>131</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes-5Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-4">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-4Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-4Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-4Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-4</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>145</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes-4Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-3">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-3Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-3Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-3Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-3</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>160</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes-3Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-2">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-2Var]</texture>
			<left>-55</left>
			<top>-20</top>
			<width>375</width>
			<height>470</height>
			<bordersize>20</bordersize>
			<visible>!Skin.HasSetting(Enable.ShowCase.Covers)  + !Skin.HasSetting(showcasemod) + [Container.Content(movies) | Container.Content(sets)]</visible>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-2Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-2Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-2</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>179</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes-2Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-1">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-1Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes-1Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-1Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true">$VAR[IconOverlay-1Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-1</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes-1Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem0">
		<control type="group">
			<visible>!listItem.IsCollection + !Skin.HasSetting(boxsetmod) | Skin.HasSetting(boxsetmod)</visible>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
				<include>MovieShowcaseThumbReflection</include>
				<include>ShowCaseModAnimation</include>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
				<include>MovieShowcaseCaseReflection</include>
				<include>ShowCaseModAnimation</include>
			</control>
			<control type="image">
				<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseBackVar]</texture>
				<include>MovieShowcaseNoCase</include>
			</control>
			<control type="image">
				<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseBackVar]</texture>
				<include>MovieShowcaseNoCaseClear</include>
			</control>
			<control type="image">
				<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseBackVar]</texture>
				<include>MovieShowcaseCase</include>
			</control>
			<control type="group">
				<left>25</left>
				<top>72</top>
				<width>240</width>
				<height>240</height>
				<visible>Skin.HasSetting(Enable.ShowCase.Covers) + !Skin.HasSetting(showcasemod)</visible>
				<control type="image">
					<!-- <texture background="true" fallback="bd.png">$INFO[ListItem(0).Art(discart)]</texture> -->
					<texture background="true" flipx="false" diffuse="thumbs/sets/cdart-mask.png">$INFO[ListItem(0).Art(poster)]</texture>
					<include>ShowCaseModDiscAnimation</include>
					<visible>!ListItem.IsCollection + String.IsEmpty(ListItem(0).Art(discart))</visible>
				</control>
				<control type="image">
					<texture background="true" fallback="bd.png">$INFO[ListItem(0).Art(discart)]</texture>
					<include>ShowCaseModDiscAnimation</include>
					<visible>!ListItem.IsCollection + !String.IsEmpty(ListItem(0).Art(discart))</visible>
				</control>
				<include>ShowCaseRollingMovieSetDiscs</include>
			</control>
			<control type="group">
				<left>30</left>
				<top>93</top>
				<width>230</width>
				<height>230</height>
				<visible>!Skin.HasSetting(Enable.ShowCase.Covers) + !Skin.HasSetting(showcasemod)</visible>
				<control type="image">
					<!-- <texture background="true" fallback="bd.png">$INFO[ListItem(0).Art(discart)]</texture> -->
					<texture background="true" flipx="false" diffuse="thumbs/sets/cdart-mask.png">$INFO[ListItem(0).Art(poster)]</texture>
					<include>ShowCaseModDiscAnimation</include>
					<visible>!ListItem.IsCollection + String.IsEmpty(ListItem(0).Art(discart))</visible>
				</control>
				<control type="image">
					<texture background="true" fallback="bd.png">$INFO[ListItem(0).Art(discart)]</texture>
					<include>ShowCaseModDiscAnimation</include>
					<visible>!ListItem.IsCollection + !String.IsEmpty(ListItem(0).Art(discart))</visible>
				</control>
				<include>ShowCaseRollingMovieSetDiscs</include>
			</control>
			<control type="group">
				<include>ShowCaseModAnimation</include>
				<control type="image">
					<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumb</include>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
					<include>MovieShowcaseCase</include>
				</control>
				<control type="image">
					<texture background="true">$VAR[IconOverlay0Var]</texture>
					<include>WatchedOverlayShowCase</include>
				</control>
			</control>
			<control type="group">
				<left>28</left>
				<top>22</top>
				<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon0</include>
			</control>
		</control>
		<include>BoxsetMod</include>
	</include>
	<include name="MovieShowCaseItem1">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes1Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes1Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes1Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true">$VAR[IconOverlay1Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="!Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon1</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes1Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem2">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes2Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes2Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes2Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true">$VAR[IconOverlay2Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes2Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem3">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes3Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes3Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes3Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true">$VAR[IconOverlay3Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes3Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem4">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes4Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes4Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes4Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true">$VAR[IconOverlay4Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes4Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem5">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes5Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes5Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes5Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true">$VAR[IconOverlay5Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes5Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem6">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes6Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes6Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes6Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true">$VAR[IconOverlay6Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes6Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem7">
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes7Var]</texture>
			<include>MovieShowcaseNoCase</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]back_$VAR[ShowcaseRes7Var]</texture>
			<include>MovieShowcaseNoCaseClear</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes7Var]</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true">$VAR[IconOverlay7Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" >$VAR[CaseTypePathVar]$VAR[ShowcaseRes7Var]</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>

	<variable name="ShowcaseItem-7Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(-7).Art(animatedposter))">$INFO[Container.ListItem(-7).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-6Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(-6).Art(animatedposter))">$INFO[Container.ListItem(-6).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-5Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(-5).Art(animatedposter))">$INFO[Container.ListItem(-5).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-4Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(-4).Art(animatedposter))">$INFO[Container.ListItem(-4).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-3Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(-3).Art(animatedposter))">$INFO[Container.ListItem(-3).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-2Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(-2).Art(animatedposter))">$INFO[Container.ListItem(-2).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-1Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(-1).Art(animatedposter))">$INFO[Container.ListItem(-1).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem0Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem.Art(animatedposter))">$INFO[Container.ListItem.Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem.Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem.Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ShowcaseItem1Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(1).Art(animatedposter))">$INFO[Container.ListItem(1).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem2Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(2).Art(animatedposter))">$INFO[Container.ListItem(2).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem3Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(3).Art(animatedposter))">$INFO[Container.ListItem(3).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem4Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(4).Art(animatedposter))">$INFO[Container.ListItem(4).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem5Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(5).Art(animatedposter))">$INFO[Container.ListItem(5).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem6Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(6).Art(animatedposter))">$INFO[Container.ListItem(6).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem7Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(7).Art(animatedposter))">$INFO[Container.ListItem(7).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem8Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(8).Art(animatedposter))">$INFO[Container.ListItem(8).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(8).Icon]</value>
	</variable>
	<variable name="ShowcaseItem9Var">
		<value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Container.ListItem(9).Art(animatedposter))">$INFO[Container.ListItem(9).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(9).Art(poster))">$INFO[ListItem(9).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(9).Icon]</value>
	</variable>
	<variable name="ShowcaseRes-7Var">
		<value condition="ListItem(-7).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(-7).Filename,3d) | SubString(ListItem(-7).Filename,3dbd) | String.IsEqual(ListItem(-7).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(-7).Filename,.4k) | String.IsEqual(ListItem(-7).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(-7).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(-7).Filename,hdtv) | SubString(ListItem(-7).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(-7).Filename,webdl) | SubString(ListItem(-7).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(-7).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(-7).VideoResolution,576) | String.IsEqual(ListItem(-7).VideoResolution,540) | String.IsEqual(ListItem(-7).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(-7).VideoResolution)">$INFO[ListItem(-7).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes-6Var">
		<value condition="ListItem(-6).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(-6).Filename,3d) | SubString(ListItem(-6).Filename,3dbd) | String.IsEqual(ListItem(-6).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(-6).Filename,.4k) | String.IsEqual(ListItem(-6).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(-6).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(-6).Filename,hdtv) | SubString(ListItem(-6).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(-6).Filename,webdl) | SubString(ListItem(-6).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(-6).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(-6).VideoResolution,576) | String.IsEqual(ListItem(-6).VideoResolution,540) | String.IsEqual(ListItem(-6).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(-6).VideoResolution)">$INFO[ListItem(-6).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes-5Var">
		<value condition="ListItem(-5).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(-5).Filename,3d) | SubString(ListItem(-5).Filename,3dbd) | String.IsEqual(ListItem(-5).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(-5).Filename,.4k) | String.IsEqual(ListItem(-5).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(-5).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(-5).Filename,hdtv) | SubString(ListItem(-5).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(-5).Filename,webdl) | SubString(ListItem(-5).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(-5).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(-5).VideoResolution,576) | String.IsEqual(ListItem(-5).VideoResolution,540) | String.IsEqual(ListItem(-5).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(-5).VideoResolution)">$INFO[ListItem(-5).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes-4Var">
		<value condition="ListItem(-4).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(-4).Filename,3d) | SubString(ListItem(-4).Filename,3dbd) | String.IsEqual(ListItem(-4).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(-4).Filename,.4k) | String.IsEqual(ListItem(-4).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(-4).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(-4).Filename,hdtv) | SubString(ListItem(-4).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(-4).Filename,webdl) | SubString(ListItem(-4).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(-4).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(-4).VideoResolution,576) | String.IsEqual(ListItem(-4).VideoResolution,540) | String.IsEqual(ListItem(-4).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(-4).VideoResolution)">$INFO[ListItem(-4).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes-3Var">
		<value condition="ListItem(-3).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(-3).Filename,3d) | SubString(ListItem(-3).Filename,3dbd) | String.IsEqual(ListItem(-3).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(-3).Filename,.4k) | String.IsEqual(ListItem(-3).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(-3).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(-3).Filename,hdtv) | SubString(ListItem(-3).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(-3).Filename,webdl) | SubString(ListItem(-3).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(-3).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(-3).VideoResolution,576) | String.IsEqual(ListItem(-3).VideoResolution,540) | String.IsEqual(ListItem(-3).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(-3).VideoResolution)">$INFO[ListItem(-3).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes-2Var">
		<value condition="ListItem(-2).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(-2).Filename,3d) | SubString(ListItem(-2).Filename,3dbd) | String.IsEqual(ListItem(-2).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(-2).Filename,.4k) | String.IsEqual(ListItem(-2).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(-2).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(-2).Filename,hdtv) | SubString(ListItem(-2).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(-2).Filename,webdl) | SubString(ListItem(-2).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(-2).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(-2).VideoResolution,576) | String.IsEqual(ListItem(-2).VideoResolution,540) | String.IsEqual(ListItem(-2).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(-2).VideoResolution)">$INFO[ListItem(-2).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes-1Var">
		<value condition="ListItem(-1).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(-1).Filename,3d) | SubString(ListItem(-1).Filename,3dbd) | String.IsEqual(ListItem(-1).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(-1).Filename,.4k) | String.IsEqual(ListItem(-1).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(-1).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(-1).Filename,hdtv) | SubString(ListItem(-1).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(-1).Filename,webdl) | SubString(ListItem(-1).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(-1).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(-1).VideoResolution,576) | String.IsEqual(ListItem(-1).VideoResolution,540) | String.IsEqual(ListItem(-1).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(-1).VideoResolution)">$INFO[ListItem(-1).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes1Var">
		<value condition="ListItem(1).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(1).Filename,3d) | SubString(ListItem(1).Filename,3dbd) | String.IsEqual(ListItem(1).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(1).Filename,.4k) | String.IsEqual(ListItem(1).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(1).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(1).Filename,hdtv) | SubString(ListItem(1).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(1).Filename,webdl) | SubString(ListItem(1).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(1).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(1).VideoResolution,576) | String.IsEqual(ListItem(1).VideoResolution,540) | String.IsEqual(ListItem(1).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(1).VideoResolution)">$INFO[ListItem(1).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes2Var">
		<value condition="ListItem(2).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(2).Filename,3d) | SubString(ListItem(2).Filename,3dbd) | String.IsEqual(ListItem(2).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(2).Filename,.4k) | String.IsEqual(ListItem(2).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(2).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(2).Filename,hdtv) | SubString(ListItem(2).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(2).Filename,webdl) | SubString(ListItem(2).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(2).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(2).VideoResolution,576) | String.IsEqual(ListItem(2).VideoResolution,540) | String.IsEqual(ListItem(2).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(2).VideoResolution)">$INFO[ListItem(2).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes3Var">
		<value condition="ListItem(3).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(3).Filename,3d) | SubString(ListItem(3).Filename,3dbd) | String.IsEqual(ListItem(3).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(3).Filename,.4k) | String.IsEqual(ListItem(3).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(3).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(3).Filename,hdtv) | SubString(ListItem(3).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(3).Filename,webdl) | SubString(ListItem(3).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(3).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(3).VideoResolution,576) | String.IsEqual(ListItem(3).VideoResolution,540) | String.IsEqual(ListItem(3).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(3).VideoResolution)">$INFO[ListItem(3).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes4Var">
		<value condition="ListItem(4).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(4).Filename,3d) | SubString(ListItem(4).Filename,3dbd) | String.IsEqual(ListItem(4).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(4).Filename,.4k) | String.IsEqual(ListItem(4).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(4).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(4).Filename,hdtv) | SubString(ListItem(4).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(4).Filename,webdl) | SubString(ListItem(4).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(4).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(4).VideoResolution,576) | String.IsEqual(ListItem(4).VideoResolution,540) | String.IsEqual(ListItem(4).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(4).VideoResolution)">$INFO[ListItem(4).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes5Var">
		<value condition="ListItem(5).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(5).Filename,3d) | SubString(ListItem(5).Filename,3dbd) | String.IsEqual(ListItem(5).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(5).Filename,.4k) | String.IsEqual(ListItem(5).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(5).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(5).Filename,hdtv) | SubString(ListItem(5).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(5).Filename,webdl) | SubString(ListItem(5).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(5).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(5).VideoResolution,576) | String.IsEqual(ListItem(5).VideoResolution,540) | String.IsEqual(ListItem(5).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(5).VideoResolution)">$INFO[ListItem(5).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes6Var">
		<value condition="ListItem(6).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(6).Filename,3d) | SubString(ListItem(6).Filename,3dbd) | String.IsEqual(ListItem(6).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(6).Filename,.4k) | String.IsEqual(ListItem(6).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(6).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(6).Filename,hdtv) | SubString(ListItem(6).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(6).Filename,webdl) | SubString(ListItem(6).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(6).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(6).VideoResolution,576) | String.IsEqual(ListItem(6).VideoResolution,540) | String.IsEqual(ListItem(6).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(6).VideoResolution)">$INFO[ListItem(6).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="ShowcaseRes7Var">
		<value condition="ListItem(7).IsCollection">sets.png</value>
		<value condition="SubString(ListItem(7).Filename,3d) | SubString(ListItem(7).Filename,3dbd) | String.IsEqual(ListItem(7).VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem(7).Filename,.4k) | String.IsEqual(ListItem(7).VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem(7).Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem(7).Filename,hdtv) | SubString(ListItem(7).Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem(7).Filename,webdl) | SubString(ListItem(7).Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem(7).Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem(7).VideoResolution,576) | String.IsEqual(ListItem(7).VideoResolution,540) | String.IsEqual(ListItem(7).VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem(7).VideoResolution)">$INFO[ListItem(7).VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="IconOverlay-1Var">
		<value condition="ListItem(-1).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(-1).Overlay]</value>
	</variable>
	<variable name="IconOverlay0Var">
		<value condition="ListItem.IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem.Overlay]</value>
	</variable>
	<variable name="IconOverlay1Var">
		<value condition="ListItem(1).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(1).Overlay]</value>
	</variable>
	<variable name="IconOverlay2Var">
		<value condition="ListItem(2).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(2).Overlay]</value>
	</variable>
	<variable name="IconOverlay3Var">
		<value condition="ListItem(3).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(3).Overlay]</value>
	</variable>
	<variable name="IconOverlay4Var">
		<value condition="ListItem(4).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(4).Overlay]</value>
	</variable>
	<variable name="IconOverlay5Var">
		<value condition="ListItem(5).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(5).Overlay]</value>
	</variable>
	<variable name="IconOverlay6Var">
		<value condition="ListItem(6).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(6).Overlay]</value>
	</variable>
	<variable name="IconOverlay7Var">
		<value condition="ListItem(7).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(7).Overlay]</value>
	</variable>
	<variable name="IconOverlay8Var">
		<value condition="ListItem(8).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(8).Overlay]</value>
	</variable>
	<variable name="IconOverlay9Var">
		<value condition="ListItem(9).IsResumable">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">overlays/showcase/$INFO[ListItem(9).Overlay]</value>
	</variable>
	<variable name="GlobalCaseBackVar">
		<value condition="ListItem.IsCollection">back_sets.png</value>
		<value condition="SubString(ListItem.Filename,3d) | SubString(ListItem.Filename,3dbd) | String.IsEqual(ListItem.VideoResolution,3d)">back_3d.png</value>
		<value condition="SubString(ListItem.Filename,.4k) | String.IsEqual(ListItem.VideoResolution,4K)">back_4k.png</value>
		<value condition="SubString(ListItem.Filename,hddvd)">back_hddvd.png</value>
		<value condition="SubString(ListItem.Filename,hdtv) | SubString(ListItem.Filename,hd tv)">back_hdtv.png</value>
		<value condition="SubString(ListItem.Filename,webdl) | SubString(ListItem.Filename,web-dl)">back_webdl.png</value>
		<value condition="SubString(ListItem.Filename,screener)">back_screener.png</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,576) | String.IsEqual(ListItem.VideoResolution,540) | String.IsEqual(ListItem.VideoResolution,480)">back_540p.png</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution)">back_$INFO[ListItem.VideoResolution]p.png</value>
		<value>back_1080p.png</value>
	</variable>
	<include name="UnwatchedIconCircle">
		<control type="image">
			<width>36</width>
			<height>36</height>
			<aspectratio>keep</aspectratio>
			<texture background="true">circle2.png</texture>
		</control>
	</include>
	<include name="UnwatchedIconVars">
		<top>4</top>
		<posx>0</posx>
		<width>36</width>
		<height>36</height>
		<align>center</align>
		<aligny>top</aligny>
		<font>font10</font>
		<textcolor>black</textcolor>
		<scroll>false</scroll>
	</include>
	<include name="UnwatchedIcon">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)</visible>	
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon1">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(1).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon0">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)</visible>		
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-1">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-1).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-2">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-2).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-3">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-3).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-4">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-4).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-5">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-5).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-6">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-6).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-7">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-7).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="ShowCaseRollingMovieSetDiscs">
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.0.DiscArt)]</texture>
			<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
				<effect type="slide" start="1100,0" end="0,0" delay="0" time="2600" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2600" tween="cubic" easing="inout" />
			</animation>
			<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.0.DiscArt))</visible>
		</control>
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.1.DiscArt)]</texture>
			<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
				<effect type="slide" start="1100,0" end="0,0" delay="500" time="2600" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="720" delay="500" time="2600" tween="cubic" easing="inout" />
			</animation>
			<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.1.DiscArt))</visible>
		</control>
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.2.DiscArt)]</texture>
			<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
				<effect type="slide" start="1100,0" end="0,0" delay="1000" time="2600" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="720" delay="1000" time="2600" tween="cubic" easing="inout" />
			</animation>
			<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.2.DiscArt))</visible>
		</control>
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.3.DiscArt)]</texture>
			<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
				<effect type="slide" start="1100,0" end="0,0" delay="1500" time="2600" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="720" delay="1500" time="2600" tween="cubic" easing="inout" />
			</animation>
			<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.3.DiscArt))</visible>
		</control>
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.4.DiscArt)]</texture>
			<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
				<effect type="slide" start="1100,0" end="0,0" delay="2000" time="2600" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="720" delay="2000" time="2600" tween="cubic" easing="inout" />
			</animation>
			<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.4.DiscArt))</visible>
		</control>
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.5.DiscArt)]</texture>
			<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
				<effect type="slide" start="1100,0" end="0,0" delay="2500" time="2600" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="720" delay="2500" time="2600" tween="cubic" easing="inout" />
			</animation>
			<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.5.DiscArt))</visible>
		</control>
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.6.DiscArt)]</texture>
			<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
				<effect type="slide" start="1100,0" end="0,0" delay="3000" time="2600" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="720" delay="3000" time="2600" tween="cubic" easing="inout" />
			</animation>
			<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.6.DiscArt))</visible>
		</control>
		<control type="image">
			<aspectratio>keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.7.DiscArt)]</texture>
			<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
				<effect type="slide" start="1100,0" end="0,0" delay="3500" time="2600" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="720" delay="3500" time="2600" tween="cubic" easing="inout" />
			</animation>
			<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.7.DiscArt))</visible>
		</control>
	</include>
	<variable name="GlobalCaseVar">
		<value condition="ListItem.IsCollection">sets.png</value>
		<value condition="SubString(ListItem.Filename,3d) | SubString(ListItem.Filename,3dbd) | String.IsEqual(ListItem.VideoResolution,3d)">3d.png</value>
		<value condition="SubString(ListItem.Filename,.4k) | String.IsEqual(ListItem.VideoResolution,4K)">4k.png</value>
		<value condition="SubString(ListItem.Filename,hddvd)">hddvd.png</value>
		<value condition="SubString(ListItem.Filename,hdtv) | SubString(ListItem.Filename,hd tv)">hdtv.png</value>
		<value condition="SubString(ListItem.Filename,webdl) | SubString(ListItem.Filename,web-dl)">webdl.png</value>
		<value condition="SubString(ListItem.Filename,screener)">screener.png</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,576) | String.IsEqual(ListItem.VideoResolution,540) | String.IsEqual(ListItem.VideoResolution,480)">540p.png</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution)">$INFO[ListItem.VideoResolution]p.png</value>
		<value>1080p.png</value>
	</variable>
	<variable name="CaseTypePathVar">
		<value>thumbs/boxes/</value>

	</variable>
	<include name="BoxsetMod">
		<control type="group">
			<visible>!Skin.HasSetting(boxsetmod) + ListItem.IsCollection</visible>
			<control type="group">
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]back_sets.png</texture>
					<include>MovieShowcaseCase</include>
					<top>3</top>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]back_sets.png</texture>
					<include>MovieShowcaseNoCase</include>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]back_sets.png</texture>
					<include>MovieShowcaseNoCaseClear</include>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
					<texture background="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$VAR[BoxsetModFanartVar]</texture>
				</control>
				<control type="image">
					<left>37</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.0.DiscArt)]</texture>
				</control>
				<control type="group">
					<left>37</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.0.DiscArt))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(SkinHelper.MovieSet.0.Poster)]</texture>
					</control>
					<control type="image">
						<texture background="true">thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.0.Poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>28</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
					<texture background="true" fallback="thumbs/sets/disc3.png" diffuse="thumbs/sets/disc3.png">$VAR[BoxsetModFanartVar]</texture>
					<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.0.Poster))</visible>
				</control>
				<control type="image">
					<left>37</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.1.DiscArt)]</texture>
				</control>
				<control type="group">
					<left>30</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.1.DiscArt))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(SkinHelper.MovieSet.1.Poster)]</texture>
					</control>
					<control type="image">
						<texture background="true">thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.1.Poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>28</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
					<texture background="true" fallback="thumbs/sets/disc2.png" diffuse="thumbs/sets/disc2.png">$VAR[BoxsetModFanartVar]</texture>
					<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.1.Poster))</visible>
				</control>
				<control type="image">
					<left>37</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$INFO[Window(home).Property(SkinHelper.MovieSet.2.DiscArt)]</texture>
				</control>
				<control type="group">
					<left>37</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.2.DiscArt))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(SkinHelper.MovieSet.2.Poster)]</texture>
					</control>
					<control type="image">
						<texture background="true">thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.2.Poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>28</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
					<texture background="true" fallback="thumbs/sets/disc1.png" diffuse="thumbs/sets/disc1.png">$VAR[BoxsetModFanartVar]</texture>
					<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.2.Poster))</visible>
				</control>
				<control type="image">
					<left>220</left>
					<top>10</top>
					<width>100</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
					<texture background="true">thumbs/sets/div.png</texture>
				</control>
			</control>
			<control type="group">
				<animation type="conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
					<effect type="rotatey" center="278" end="-90" time="1040" tween="cubic" easing="in"/>
					<effect type="rotatey" center="278" start="-90" end="-90" time="0" delay="1040"/>
					<effect type="fade" start="0" end="100" time="0" delay="1000"/>
					<effect type="rotatey" center="278" start="90" end="38" time="440" delay="1040" tween="cubic"/>
				</animation>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$VAR[BoxsetModFanartVar]</texture>
				</control>
				<control type="image">
					<left>40</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Window(home).Property(SkinHelper.MovieSet.6.DiscArt)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.6.DiscArt))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(SkinHelper.MovieSet.6.Poster)]</texture>
					</control>
					<control type="image">
						<texture background="true">thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.6.Poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc3.png" diffuse="thumbs/sets/disc3.png">$VAR[BoxsetModFanartVar]</texture>
					<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.6.Poster))</visible>
				</control>
				<control type="image">
					<left>40</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Window(home).Property(SkinHelper.MovieSet.7.DiscArt)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.7.DiscArt))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(SkinHelper.MovieSet.7.Poster)]</texture>
					</control>
					<control type="image">
						<texture background="true">thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.7.Poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc2.png" diffuse="thumbs/sets/disc2.png">$VAR[BoxsetModFanartVar]</texture>
					<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.7.Poster))</visible>
				</control>
				<control type="image">
					<left>40</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Window(home).Property(SkinHelper.MovieSet.8.DiscArt)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.8.DiscArt))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(SkinHelper.MovieSet.8.Poster)]</texture>
					</control>
					<control type="image">
						<texture background="true">thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.8.Poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc1.png" diffuse="thumbs/sets/disc1.png">$VAR[BoxsetModFanartVar]</texture>
					<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.8.Poster))</visible>
				</control>
				<control type="group">
					<visible>!Skin.HasSetting(Disable.BoxsetBrochure)</visible>
					<top>28</top>
					<control type="image">
						<left>20</left>
						<top>-30</top>
						<width>240</width>
						<height>430</height>
						<texture background="true" flipx="true" colordiffuse="grey_50">thumbs/sets/brochure.png</texture>
					</control>
					<control type="image">
						<left>69</left>
						<top>-39</top>
						<width>150</width>
						<height>150</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<colordiffuse>99000000</colordiffuse>
					</control>
					<control type="image">
						<left>70</left>
						<top>-40</top>
						<width>150</width>
						<height>150</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<colordiffuse>99ffffff</colordiffuse>
					</control>
					<control type="group">
						<animation type="conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
							<effect type="fade" start="0" end="100" time="0" delay="1100"/>
							<effect type="rotatey" center="130" start="48" end="180" time="50" delay="1000" tween="cubic"/>
						</animation>
						<control type="textbox">
							<left>20</left>
							<top>0</top>
							<width>200</width>
							<height>280</height>
							<aligny>top</aligny>
							<label>$INFO[Window(Home).Property(SkinHelper.MovieSet.Title)]</label>
							<font>font-15</font>
							<textcolor>grey_b</textcolor>
							<animation effect="slide" end="0,64" time="0" condition="!String.IsEmpty(ListItem.Art(clearlogo))">Conditional</animation>
						</control>
					</control>
					<control type="image">
						<left>26</left>
						<top>-18</top>
						<width>160</width>
						<height>392</height>
						<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/brochurecover.png" diffuse="thumbs/sets/brochurecover.png">$VAR[BoxsetModFanartVar]</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<animation type="conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
					<effect type="rotatey" center="300" end="-90" time="1040" tween="cubic" easing="in"/>
					<effect type="rotatey" center="300" start="-90" end="-90" time="0" delay="1040"/>
					<effect type="fade" start="100" end="0" time="0" delay="1000"/>
					<effect type="rotatey" center="300" start="90" end="0" time="440" delay="1040" tween="cubic"/>
				</animation>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
					<texture background="true" diffuse="thumbs/sets/backset.png">thumbs/sets/backset.png</texture>
				</control>
			</control>
			<control type="group">
				<animation type="conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
					<effect type="rotatey" center="19" end="90" time="440" tween="cubic" easing="in"/>
					<effect type="rotatey" center="19" start="90" end="90" time="0" delay="440"/>
					<effect type="fade" start="0" end="100" time="0" delay="400"/>
					<effect type="rotatey" center="19" start="-90" end="-40" time="440" delay="440" tween="cubic"/>
				</animation>
				<control type="image">
					<include>MovieShowcaseCase</include>
					<texture background="true">$VAR[CaseTypePathVar]sets.png</texture>
				</control>
				<control type="image">
					<left>20</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$VAR[BoxsetModFanartVar]</texture>
				</control>
				<control type="image">
					<left>40</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Window(home).Property(SkinHelper.MovieSet.3.DiscArt)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.3.DiscArt))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(SkinHelper.MovieSet.3.Poster)]</texture>
					</control>
					<control type="image">
						<texture background="true">thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.3.Poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>20</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc3.png" diffuse="thumbs/sets/disc3.png">$VAR[BoxsetModFanartVar]</texture>
					<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.3.Poster))</visible>
				</control>
				<control type="image">
					<left>40</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Window(home).Property(SkinHelper.MovieSet.4.DiscArt)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.4.DiscArt))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(SkinHelper.MovieSet.4.Poster)]</texture>
					</control>
					<control type="image">
						<texture background="true">thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.4.Poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>20</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc2.png" diffuse="thumbs/sets/disc2.png">$VAR[BoxsetModFanartVar]</texture>
					<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.4.Poster))</visible>
				</control>
				<control type="image">
					<left>40</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Window(home).Property(SkinHelper.MovieSet.5.DiscArt)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.5.DiscArt))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(SkinHelper.MovieSet.5.Poster)]</texture>
					</control>
					<control type="image">
						<texture background="true">thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.5.Poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>20</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc1.png" diffuse="thumbs/sets/disc1.png">$VAR[BoxsetModFanartVar]</texture>
					<visible>!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.5.Poster))</visible>
				</control>
			</control>
			<control type="image">
				<left>-25</left>
				<top>10</top>
				<width>100</width>
				<height>392</height>
				<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
				<texture background="true">thumbs/sets/div.png</texture>
			</control>
			<control type="group">
				<animation type="conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
					<effect type="rotatey" center="0" end="90" time="440" tween="cubic" easing="in"/>
					<effect type="rotatey" center="0" start="90" end="90" time="0" delay="440"/>
					<effect type="fade" start="100" end="0" time="0" delay="400"/>
					<effect type="rotatey" center="0" start="-90" end="0" time="440" delay="440" tween="cubic"/>
				</animation>
				<control type="image">
					<include>MovieShowcaseThumb</include>
					<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
				</control>
				<control type="image">
					<include>MovieShowcaseCase</include>
					<texture background="true">$VAR[CaseTypePathVar]sets.png</texture>
				</control>
				<control type="image">
					<texture background="true">$VAR[IconOverlay0Var]</texture>
					<include>WatchedOverlayShowCase</include>
				</control>
			</control>
		</control>
	</include>
	<include name="ShowCaseModDiscAnimation">
		<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]" reversible="false">
			<effect type="slide" start="1100,0" end="0,0" delay="0" time="2600" tween="cubic" easing="inout" />
			<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2600" tween="cubic" easing="inout" />
		</animation>
	</include>
	<include name="ShowCaseModAnimation">
		<animation type="conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]">
			<effect type="rotatey" center="19" start="0" end="70" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="3500" center="19" start="0" end="-70" time="1000" tween="quadratic" easing="out" />
		</animation>
		<animation type="conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]">
			<effect type="rotatey" center="19" start="0" end="70" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="6000" center="19" start="0" end="-70" time="1000" tween="quadratic" easing="out" />
		</animation>
	</include>
	<variable name="ShowcaseModDelayOnClickVar">
		<value condition="String.IsEmpty(Skin.String(Showcase.Delay))">Skin.SetString(Showcase.Delay,3)</value>
		<value condition="String.IsEqual(Skin.String(Showcase.Delay),2)">Skin.SetString(Showcase.Delay,3)</value>
		<value condition="String.IsEqual(Skin.String(Showcase.Delay),3)">Skin.SetString(Showcase.Delay,4)</value>
		<value condition="String.IsEqual(Skin.String(Showcase.Delay),4)">Skin.SetString(Showcase.Delay,5)</value>
		<value condition="String.IsEqual(Skin.String(Showcase.Delay),5)">Skin.SetString(Showcase.Delay,2)</value>
	</variable>
	<variable name="ShowcaseDelayLocalizeVar">
		<value condition="!String.IsEmpty(Skin.String(Showcase.Delay))">$INFO[Skin.String(Showcase.Delay),, $LOCALIZE[31091]]</value>
		<value>2 $LOCALIZE[31091]</value>
	</variable>
	<variable name="BoxsetModFanartVar">
		<value condition="!String.IsEmpty(ListItem.Art(extrafanart1))">$INFO[ListItem.Art(extrafanart1)]</value>
		<value condition="String.IsEmpty(ListItem.Art(extrafanart1))">$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<include name="HiddenObject">
		<left>-300</left>
		<top>-300</top>
		<width>1</width>
		<height>1</height>
		<texturefocus>-</texturefocus>
		<texturenofocus>-</texturenofocus>
		<label></label>
		<font>-</font>
	</include>
	<include name="ShowCaseDelayAnimation">
		<visible>![Container.OnNext | Container.OnPrevious]</visible>
		<animation effect="fade" end="100" time="120" delay="2000" condition="String.IsEqual(Skin.String(ShowCase.Delay),2) | String.IsEmpty(Skin.String(Showcase.Delay))">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="3000" condition="String.IsEqual(Skin.String(ShowCase.Delay),3)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="4000" condition="String.IsEqual(Skin.String(ShowCase.Delay),4)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="5000" condition="String.IsEqual(Skin.String(ShowCase.Delay),5)">Visible</animation>
	</include>
	<variable name="FloorLabelVar">
		<value condition="Container.Content(episodes) + SubString(Container.FolderPath,/recentlyaddedepisodes)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="FloorSubLabelVar">
		<value condition="Container.Content(episodes)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary]</value>
		<value condition="Container.Content(musicvideos)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Content(movies) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Rating,, • ]$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !String.IsEmpty(ListItem.Title)">$LOCALIZE[20360]: $INFO[ListItem.Property(TotalEpisodes)] $INFO[ListItem.Property(UnWatchedEpisodes), ($LOCALIZE[16101]: ,)]</value>
	</variable>
	<variable name="UnFocusHDIndicator">
		<value condition="ListItem.IsStereoscopic">flags/resolutions/3d.png</value>
		<value>$INFO[ListItem.VideoResolution,flags/resolutions/,.png]</value>
	</variable>

</includes>
