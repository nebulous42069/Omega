<?xml version="1.0" encoding="UTF-8"?>
<window>
    <onload>SetFocus(2000,0,absolute)</onload>
    <controls>
        <!-- Background -->
        <control type="image">
            <left>0</left>
            <top>0</top>
            <width>1920</width>
            <height>1080</height>
            <texture colordiffuse="FF000000">fenlight_common/white.png</texture>
            <animation type="WindowOpen" reversible="false">
                <effect type="fade" start="0" end="80" time="120" />
            </animation>
        </control>
        <control type="group">
            <left>100</left>
            <top>25</top>
            <animation type="WindowOpen" reversible="false">
                <effect type="fade" end="100" time="200" />
            </animation>
            <!-- Logo and Background-->
            <control type="group">
                <control type="image">
                    <left>-2</left>
                    <top>-2</top>
                    <width>1724</width>
                    <height>1034</height>
                    <texture colordiffuse="FFCCCCCC" border="30">fenlight_common/circle.png</texture>
                </control>
                <control type="image">
                    <width>1720</width>
                    <height>1030</height>
                    <texture colordiffuse="FF1F2020" border="30">fenlight_common/circle.png</texture>
                </control>
                <control type="image">
                    <left>12</left>
                    <top>12</top>
                    <width>40</width>
                    <height>40</height>
                    <align>left</align>
                    <aligny>top</aligny>
                    <aspectratio aligny="top">keep</aspectratio>
                    <texture colordiffuse="FFCCCCCC">fenlight_common/fenlight.png</texture>
                </control>
                <control type="label">
                    <width max="1700">auto</width>
                    <top>22</top>
                    <left>0</left>
                    <height>20</height>
                    <font>font12</font> <!-- FENLIGHT_26 -->
                    <textcolor>FFCCCCCC</textcolor>
                    <align>center</align>
                    <aligny>center</aligny>
                    <label>[UPPERCASE][B]FENLIGHT - SETTINGS[/B][/UPPERCASE]</label>
                </control>
            </control>
            <control type="fixedlist" id="2000">
                <animation effect="slide" end="0,-340" time="0" condition="Integer.IsEqual(Container(2000).NumItems,1) | Integer.IsEqual(Container(2000).NumItems,2)">Conditional</animation>
                <animation effect="slide" end="0,-255" time="0" condition="Integer.IsEqual(Container(2000).NumItems,3) | Integer.IsEqual(Container(2000).NumItems,4)">Conditional</animation>
                <animation effect="slide" end="0,-170" time="0" condition="Integer.IsEqual(Container(2000).NumItems,5) | Integer.IsEqual(Container(2000).NumItems,6)">Conditional</animation>
                <animation effect="slide" end="0,-85" time="0" condition="Integer.IsEqual(Container(2000).NumItems,7) | Integer.IsEqual(Container(2000).NumItems,8)">Conditional</animation>
                <left>20</left>
                <top>100</top>
                <width>470</width>
                <height>765</height>
                <onleft>10025</onleft>
                <onright>SetFocus(2100,1,absolute)</onright>
                <onup>2000</onup>
                <ondown>2000</ondown>
                <orientation>Vertical</orientation>
                <focusposition>4</focusposition>
                <movement>4</movement>
                <scrolltime tween="cubic" easing="out">500</scrolltime>
                <itemlayout height="85" width="470">
                    <control type="label">
                        <left>40</left>
                        <width>390</width>
                        <height>85</height>
                        <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
                        <font>font12</font> <!-- FENLIGHT_26 -->
                        <textcolor>FFCCCCCC</textcolor>
                        <aligny>center</aligny>
                    </control>
                </itemlayout>
                <focusedlayout height="85" width="470">
                    <control type="image">
                        <animation effect="fade" start="100" end="50" time="0" condition="!Control.HasFocus(2000)">Conditional</animation>
                        <height>85</height>
                        <width>470</width>
                        <texture colordiffuse="FFCCCCCC" border="30">fenlight_common/circle.png</texture>
                    </control>
                    <control type="label">
                        <left>40</left>
                        <width>390</width>
                        <height>85</height>
                        <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
                        <font>font12</font> <!-- FENLIGHT_26 -->
                        <textcolor>FF1F2020</textcolor>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <scroll>Control.HasFocus(2000)</scroll>
                    </control>
                </focusedlayout>
                <content>
                    <item id="10">
                        <label>General</label>
                        <onclick>noop</onclick>
                    </item>
                    <item id="20">
                        <label>Features</label>
                        <onclick>noop</onclick>
                    </item>
                    <item id="30">
                        <label>Navigation</label>
                        <onclick>noop</onclick>
                    </item>
                    <item id="40">
                        <label>Accounts</label>
                        <onclick>noop</onclick>
                    </item>
                    <item id="50">
                        <label>Results</label>
                        <onclick>noop</onclick>
                    </item>
                    <item id="60">
                        <label>Playback</label>
                        <onclick>noop</onclick>
                    </item>
                </content>
            </control>
            <control type="fixedlist" id="2100">
                <animation effect="fade" start="100" end="0" time="300" condition="Container(2100).IsUpdating">conditional</animation>
                <animation effect="slide" end="0,-340" time="0" condition="Integer.IsEqual(Container(2100).NumItems,1) | Integer.IsEqual(Container(2100).NumItems,2)">Conditional</animation>
                <animation effect="slide" end="0,-255" time="0" condition="Integer.IsEqual(Container(2100).NumItems,3) | Integer.IsEqual(Container(2100).NumItems,4)">Conditional</animation>
                <animation effect="slide" end="0,-170" time="0" condition="Integer.IsEqual(Container(2100).NumItems,5) | Integer.IsEqual(Container(2100).NumItems,6)">Conditional</animation>
                <animation effect="slide" end="0,-85" time="0" condition="Integer.IsEqual(Container(2100).NumItems,7) | Integer.IsEqual(Container(2100).NumItems,8)">Conditional</animation>
                <left>520</left>
                <top>100</top>
                <width>1160</width>
                <height>765</height>
                <onleft>2000</onleft>
                <onleft>SetFocus(2100,1,absolute)</onleft>
                <onright>10025</onright>
                <pagecontrol>10025</pagecontrol>
                <orientation>Vertical</orientation>
                <focusposition>4</focusposition>
                <movement>4</movement>
                <scrolltime tween="cubic" easing="out">500</scrolltime>
                <itemlayout height="85" width="1160">
                    <!-- SEPARATOR -->
                    <control type="group">
                        <visible>String.IsEqual(ListItem.Property(setting_type),separator)</visible>
                        <control type="label">
                            <left>40</left>
                            <width>630</width>
                            <height>85</height>
                            <label>[UPPERCASE][B]$INFO[ListItem.Label][/B][/UPPERCASE]</label>
                            <font>font12</font> <!-- FENLIGHT_26 -->
                            <textcolor>FFCCCCCC</textcolor>
                            <aligny>center</aligny>
                            <align>center</align>
                        </control>
                        <control type="image">
                            <top>70</top>
                            <left>30</left>
                            <height>2</height>
                            <width>1100</width>
                            <texture colordiffuse="FFCCCCCC">fenlight_common/white.png</texture>
                        </control>
                    </control>
                    <!-- INFO ICON -->
                    <control type="image">
                        <visible>String.IsEqual(ListItem.Property(setting_type),info) + Control.HasFocus(2100)</visible>
                        <top>27</top>
                        <left>5</left>
                        <width>30</width>
                        <height>30</height>
                        <texture colordiffuse="FFCCCCCC">fenlight_common/info.png</texture>
                    </control>
                    <!-- LABEL -->
                    <control type="label">
                        <visible>!String.IsEqual(ListItem.Property(setting_type),separator)</visible>
                        <left>40</left>
                        <width>630</width>
                        <height>85</height>
                        <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
                        <font>font12</font> <!-- FENLIGHT_26 -->
                        <textcolor>FFCCCCCC</textcolor>
                        <aligny>center</aligny>
                        <scroll>false</scroll>
                    </control>
                    <!-- BOOLEAN -->
                    <control type="group">
                        <visible>String.IsEqual(ListItem.Property(setting_type),boolean)</visible>
                        <control type="image">
                            <visible>String.IsEqual(ListItem.Property(setting_value),false)</visible>
                            <top>0</top>
                            <left>1030</left>
                            <width>150</width>
                            <align>right</align>
                            <aligny>center</aligny>
                            <aspectratio>keep</aspectratio>
                            <texture colordiffuse="FFCCCCCC">fenlight_buttons/radio_button_off.png</texture>
                        </control>
                        <control type="image">
                            <visible>String.IsEqual(ListItem.Property(setting_value),true)</visible>
                            <top>0</top>
                            <left>1030</left>
                            <width>150</width>
                            <align>right</align>
                            <aligny>center</aligny>
                            <aspectratio>keep</aspectratio>
                            <texture colordiffuse="FFCCCCCC">fenlight_buttons/radio_button_on.png</texture>
                        </control>
                    </control>
                    <!-- SETTING VALUE LABEL -->
                    <control type="group">
                        <visible>!String.IsEqual(ListItem.Property(setting_type),boolean)</visible>
                        <!-- EMPTY LABEL -->
                        <control type="label">
                            <visible>String.IsEqual(ListItem.Property(setting_value),empty_setting)</visible>
                            <left>700</left>
                            <width>425</width>
                            <height>85</height>
                            <label>[B]...[/B]</label>
                            <font>font12</font> <!-- FENLIGHT_26 -->
                            <textcolor>FFCCCCCC</textcolor>
                            <align>right</align>
                            <aligny>center</aligny>
                            <scroll>Control.HasFocus(100)</scroll>
                        </control>
                        <!-- LABEL -->
                        <control type="label">
                            <visible>!String.IsEqual(ListItem.Property(setting_value),empty_setting)</visible>
                            <left>700</left>
                            <width>425</width>
                            <height>85</height>
                            <label>[UPPERCASE][B]$INFO[ListItem.Property(setting_value)][/B][/UPPERCASE]</label>
                            <font>font12</font> <!-- FENLIGHT_26 -->
                            <textcolor>FFCCCCCC</textcolor>
                            <align>right</align>
                            <aligny>center</aligny>
                            <scroll>Control.HasFocus(100)</scroll>
                        </control>
                    </control>
                </itemlayout>
                <focusedlayout height="85" width="1160">
                    <!-- HIGHLIGHT -->
                    <control type="image">
                        <visible>Control.HasFocus(2100)</visible>
                        <height>85</height>
                        <width>1160</width>
                        <texture colordiffuse="FFCCCCCC" border="30">fenlight_common/circle.png</texture>
                    </control>
                    <!-- SEPARATOR -->
                    <control type="group">
                        <visible>String.IsEqual(ListItem.Property(setting_type),separator)</visible>
                        <control type="label">
                            <left>40</left>
                            <width>630</width>
                            <height>85</height>
                            <label>[UPPERCASE][B]$INFO[ListItem.Label][/B][/UPPERCASE]</label>
                            <font>font12</font> <!-- FENLIGHT_26 -->
                            <textcolor>FFCCCCCC</textcolor>
                            <aligny>center</aligny>
                            <align>center</align>
                        </control>
                        <control type="image">
                            <top>70</top>
                            <left>30</left>
                            <height>2</height>
                            <width>1100</width>
                            <texture colordiffuse="FFCCCCCC">fenlight_common/white.png</texture>
                        </control>
                    </control>
                    <!-- INFO ICON -->
                    <control type="image">
                        <visible>String.IsEqual(ListItem.Property(setting_type),info) + Control.HasFocus(2100)</visible>
                        <top>27</top>
                        <left>5</left>
                        <width>30</width>
                        <height>30</height>
                        <texture colordiffuse="FF1F2020">fenlight_common/info.png</texture>
                    </control>
                    <!-- LABEL -->
                    <control type="group">
                        <visible>!String.IsEqual(ListItem.Property(setting_type),separator)</visible>
                        <control type="label">
                            <visible>Control.HasFocus(2100)</visible>
                            <left>40</left>
                            <width>630</width>
                            <height>85</height>
                            <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
                            <font>font12</font> <!-- FENLIGHT_26 -->
                            <textcolor>FF1F2020</textcolor>
                            <aligny>center</aligny>
                            <label>$INFO[ListItem.Label]</label>
                            <scroll>Control.HasFocus(2100)</scroll>
                        </control>
                        <control type="label">
                            <visible>!Control.HasFocus(2100)</visible>
                            <left>40</left>
                            <width>630</width>
                            <height>85</height>
                            <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
                            <font>font12</font> <!-- FENLIGHT_26 -->
                            <textcolor>FFCCCCCC</textcolor>
                            <aligny>center</aligny>
                            <label>$INFO[ListItem.Label]</label>
                            <scroll>false</scroll>
                        </control>
                    </control>
                    <!-- BOOLEAN -->
                    <control type="group">
                        <visible>String.IsEqual(ListItem.Property(setting_type),boolean)</visible>
                        <control type="group">
                            <visible>!Control.HasFocus(2100)</visible>
                            <control type="image">
                                <visible>String.IsEqual(ListItem.Property(setting_value),false)</visible>
                                <top>0</top>
                                <left>1030</left>
                                <width>150</width>
                                <align>right</align>
                                <aligny>center</aligny>
                                <aspectratio>keep</aspectratio>
                                <texture colordiffuse="FFCCCCCC">fenlight_buttons/radio_button_off.png</texture>
                            </control>
                            <control type="image">
                                <visible>String.IsEqual(ListItem.Property(setting_value),true)</visible>
                                <top>0</top>
                                <left>1030</left>
                                <width>150</width>
                                <align>right</align>
                                <aligny>center</aligny>
                                <aspectratio>keep</aspectratio>
                                <texture colordiffuse="FFCCCCCC">fenlight_buttons/radio_button_on.png</texture>
                            </control>
                        </control>
                        <control type="group">
                            <visible>Control.HasFocus(2100)</visible>
                            <control type="image">
                                <visible>String.IsEqual(ListItem.Property(setting_value),false)</visible>
                                <top>0</top>
                                <left>1030</left>
                                <width>150</width>
                                <align>right</align>
                                <aligny>center</aligny>
                                <aspectratio>keep</aspectratio>
                                <texture colordiffuse="FF1F2020">fenlight_buttons/radio_button_off.png</texture>
                            </control>
                            <control type="image">
                                <visible>String.IsEqual(ListItem.Property(setting_value),true)</visible>
                                <top>0</top>
                                <left>1030</left>
                                <width>150</width>
                                <align>right</align>
                                <aligny>center</aligny>
                                <aspectratio>keep</aspectratio>
                                <texture colordiffuse="FF1F2020">fenlight_buttons/radio_button_on.png</texture>
                            </control>
                        </control>
                    </control>
                    <!-- SETTING VALUE LABEL -->
                    <control type="group">
                        <visible>!String.IsEqual(ListItem.Property(setting_type),boolean)</visible>
                        <!-- EMPTY LABEL -->
                        <control type="group">
                            <visible>String.IsEqual(ListItem.Property(setting_value),empty_setting)</visible>
                            <control type="label">
                                <visible>Control.HasFocus(2100)</visible>
                                <left>700</left>
                                <width>425</width>
                                <height>85</height>
                                <label>[B]...[/B]</label>
                                <font>font12</font> <!-- FENLIGHT_26 -->
                                <textcolor>FF1F2020</textcolor>
                                <align>right</align>
                                <aligny>center</aligny>
                                <scroll>Control.HasFocus(2100)</scroll>
                            </control>
                            <control type="label">
                                <visible>!Control.HasFocus(2100)</visible>
                                <left>700</left>
                                <width>425</width>
                                <height>85</height>
                                <label>[B]...[/B]</label>
                                <font>font12</font> <!-- FENLIGHT_26 -->
                                <textcolor>FFCCCCCC</textcolor>
                                <align>right</align>
                                <aligny>center</aligny>
                                <scroll>false</scroll>
                            </control>
                        </control>
                        <!-- SETTING VALUE LABEL -->
                        <control type="group">
                            <visible>!String.IsEqual(ListItem.Property(setting_value),empty_setting)</visible>
                            <control type="label">
                                <visible>Control.HasFocus(2100)</visible>
                                <left>700</left>
                                <width>425</width>
                                <height>85</height>
                                <label>[UPPERCASE][B]$INFO[ListItem.Property(setting_value)][/B][/UPPERCASE]</label>
                                <font>font12</font> <!-- FENLIGHT_26 -->
                                <textcolor>FF1F2020</textcolor>
                                <align>right</align>
                                <aligny>center</aligny>
                                <scroll>Control.HasFocus(2100)</scroll>
                            </control>
                            <control type="label">
                                <visible>!Control.HasFocus(2100)</visible>
                                <left>700</left>
                                <width>425</width>
                                <height>85</height>
                                <label>[UPPERCASE][B]$INFO[ListItem.Property(setting_value)][/B][/UPPERCASE]</label>
                                <font>font12</font> <!-- FENLIGHT_26 -->
                                <textcolor>FFCCCCCC</textcolor>
                                <align>right</align>
                                <aligny>center</aligny>
                                <scroll>false</scroll>
                            </control>
                        </control>
                    </control>
                </focusedlayout>
                <content>
    <!-- GENERAL 10 -->
            <!-- Manage Addon Updates -->
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Manage Addon Updates</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Update Action</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.update.action_name)]</property>
                        <property name="setting_description">Choose the manner in which Fen Light handles updates</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=update.action)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.update.action),3)</visible>
                        <label>    - Delay Before Running (secs)</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.update.delay)]</property>
                        <property name="setting_description">Choose the delay time before Fen Light checks for updates after Kodi start</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=update.delay)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Use Test Repository for Updates (Warning!!!)</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.update.use_test_repo)]</property>
                        <property name="setting_description">Enable this and Fen Light will update from the Tikipeter Test Repository. It is STRONGLY advised to NOT enable this setting, but if you like to live life on the edge....</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=update.use_test_repo)</onclick>
                    </item>
            <!-- General -->
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>General</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Autostart FenLight When Kodi Starts</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.auto_start_fenlight)]</property>
                        <property name="setting_description">Enable this and Fen Light will autostart after running it's services upon Kodi start</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=auto_start_fenlight)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <visible>String.EndsWith(Window(10000).Property(fenlight.addon_fanart),fenlight_fanart.jpg)</visible>
                        <label>Assign Addon Background Image</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">...</property>
                        <property name="setting_description">Choose any custom background you would like to use within Fen Light</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_path&amp;setting_id=addon_fanart)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <visible>!String.EndsWith(Window(10000).Property(fenlight.addon_fanart),fenlight_fanart.jpg)</visible>
                        <label>Restore Default Background Image</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.addon_fanart)]</property>
                        <property name="setting_description">Restore default Fen Light background</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=restore_addon_fanart_choice)</onclick>
                    </item>
            <!-- Watched Indicators -->
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Watched Indicators</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.trakt.user),empty_setting)</visible>
                        <label>Watched Status Provider</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.watched_indicators_name)]</property>
                        <property name="setting_description">Choose the provider that keeps track of the Movies and Episodes you have watched within Fen Light. Options are the built in method of Fen Light or, if authorized, your Trakt account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=watched_indicators)</onclick>
                    </item>
            <!-- Trakt Cache -->
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Trakt Cache</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.trakt.user),empty_setting)</visible>
                        <label>Resync Interval (mins)</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.trakt.sync_interval)]</property>
                        <property name="setting_description">Choose how often Fen Light polls your Trakt service for any changes</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=trakt.sync_interval)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.trakt.user),empty_setting)</visible>
                        <label>Refresh Widgets After Trakt Sync</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.trakt.refresh_widgets)]</property>
                        <property name="setting_description">Enable this and Fen Light will refresh widgets after performing a Trakt Sync if there were any changes</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=trakt.refresh_widgets)</onclick>
                    </item>
            <!-- UTC Time Offset -->
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>UTC Time Offset</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>UTC (+/-)</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.datetime.offset)]</property>
                        <property name="setting_description">Choose the correct UTC offset based on your location</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=datetime.offset)</onclick>
                    </item>
            <!-- Downloads -->
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Downloads</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Movies Directory</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.movie_download_directory)]</property>
                        <property name="setting_description">Choose your download location for Movies</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_path&amp;setting_id=movie_download_directory)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>TV Shows Directory</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.tvshow_download_directory)]</property>
                        <property name="setting_description">Choose your download location for TV Shows</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_path&amp;setting_id=tvshow_download_directory)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Premium Files Directory</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.premium_download_directory)]</property>
                        <property name="setting_description">Choose your download location for Premium files. Includes downloads from debrid service caches or Easynews</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_path&amp;setting_id=premium_download_directory)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(10)</visible>
                        <label>Image Files Directory</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.image_download_directory)]</property>
                        <property name="setting_description">Choose your download location for Images</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_path&amp;setting_id=image_download_directory)</onclick>
                    </item>
    <!-- FEATURES 20-->
            <!-- Extras -->
                    <item>
                        <visible>Container(2000).HasFocus(20)</visible>
                        <label>Extras</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(20)</visible>
                        <label>Open Extras When Selecting</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.extras.open_action_name)]</property>
                        <property name="setting_description">Choose whether you want Fen Light to open the Extras window when you select either a Movie, TV Show or Both</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=extras.open_action)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(20)</visible>
                        <label>Enable Content for Extras Lists</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">...</property>
                        <property name="setting_description">Choose what content is included within the Extras window</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=extras_lists_choice)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(20)</visible>
                        <label>Set Actions for Extras Buttons</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">...</property>
                        <property name="setting_description">Choose the function and order of the buttons in the Extras window. You can set separate button functions for Movies and TV Shows</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=extras_buttons_choice)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(20)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.omdb_api),empty_setting)</visible>
                        <label>Enable Extra Ratings</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.extras.enable_extra_ratings)]</property>
                        <property name="setting_description">Enable this and the Extras menu will show ratings from more services than just TMDb. Must have a valid OMDb API assigned in the Accounts settings for this to show</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=extras.enable_extra_ratings)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(20)</visible>
                        <label>Enable Scrollbars for Extras Lists</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.extras.enable_scrollbars)]</property>
                        <property name="setting_description">Choose this and the individual lists within the Extras window will each utilize a scrollbar when needed</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=extras.enable_scrollbars)</onclick>
                    </item>
            <!-- Custom Actions -->
                    <item>
                        <visible>Container(2000).HasFocus(20)</visible>
                        <label>Custom Actions</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(20)</visible>
                        <label>Replace Kodi Context Menu and Info Window with Fen Light</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.auto_custom_actions)]</property>
                        <property name="setting_description">Enable this and Fen Light will attempt to open it's custom context menu instead of Kodi's standard context menu when called from a media item, and will also attempt to open it's Extras window instead of Kodi's default Information window</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=auto_custom_actions)</onclick>
                    </item>
    <!-- NAVIGATION 30 -->
            <!-- Sorting - Personal Lists -->
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Sorting - Personal Lists</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>In Progress</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.sort.progress_name)]</property>
                        <property name="setting_description">Choose the sort order for your In Progress media</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=sort.progress)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Watched</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.sort.watched_name)]</property>
                        <property name="setting_description">Choose the sort order for your Watched media</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=sort.watched)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.trakt.user),empty_setting)</visible>
                        <label>Collection</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.sort.collection_name)]</property>
                        <property name="setting_description">Choose the sort order for your Trakt Collection media</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=sort.collection)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.trakt.user),empty_setting)</visible>
                        <label>Watchlist</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.sort.watchlist_name)]</property>
                        <property name="setting_description">Choose the sort order for your Trakt Watchlist media</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=sort.watchlist)</onclick>
                    </item>
            <!-- Content -->
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Content</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Paginate Lists When Available</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.paginate.lists_name)]</property>
                        <property name="setting_description">Enable this and Fen Light will attempt to paginate lists when possible. This is mainly applicable to personal lists</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=paginate.lists)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.paginate.lists),1) | String.IsEqual(Window(10000).Property(fenlight.paginate.lists),3)</visible>
                        <label>    - Addon Item Limit</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.paginate.limit_addon)]</property>
                        <property name="setting_description">Choose the limit of pagination when within Fen Light</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=paginate.limit_addon)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.paginate.lists),2) | String.IsEqual(Window(10000).Property(fenlight.paginate.lists),3)</visible>
                        <label>    - Widgets Item Limit</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.paginate.limit_widgets)]</property>
                        <property name="setting_description">Choose the limit of pagination for Fen Light widgets</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=paginate.limit_widgets)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Flatten TV Show Seasons</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.default_all_episodes_name)]</property>
                        <property name="setting_description">Choose the times when Fen Light will load all episodes of a TV Show when browsed into</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=default_all_episodes)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Single Episode Display Format - Within Addon</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.single_ep_display_name)]</property>
                        <property name="setting_description">Choose the display format Fen Light uses when naming single episodes within the addon. Applicable for lists like Next Episodes, In Progress Episodes etc.</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=single_ep_display)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Single Episode Display Format - Widgets</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.single_ep_display_widget_name)]</property>
                        <property name="setting_description">Choose the display format Fen Light uses when naming single episodes for widgets. Applicable for lists like Next Episodes, In Progress Episodes etc.</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=single_ep_display_widget)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Use Minimal Media Info</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.use_minimal_media_info)]</property>
                        <property name="setting_description">Enable this and Fen Light will NOT assign certain properties to media it creates. Examples of suppressed properties would be ratings, casts, mpaa rating etc. Fen Light will provide Kodi only with the most basic and needed properties for the media</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=use_minimal_media_info)</onclick>
                    </item>
            <!-- Next Episodes -->
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Next Episodes</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Include Trakt Watchlist/Fen Light Favorites</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.nextep.include_unwatched_name)]</property>
                        <property name="setting_description">Choose which lists are included within Fen Light's Next Episodes. You can include your Trakt Watchlist, your Fen Light Favorites, or both. They will show with a DARKGOLDENROD highlight</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=nextep.include_unwatched)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Include Unaired Episodes When Available</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.nextep.include_unaired)]</property>
                        <property name="setting_description">Enable this to include unaired episodes within Next Episodes. They will show with a RED highlight</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=nextep.include_unaired)</onclick>
                    </item>
            <!-- Widgets -->
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Widgets</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Hide Watched Items in Widgets</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.widget_hide_watched)]</property>
                        <property name="setting_description">Enable this and watched items will be hidden in Fen Light widgets</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=widget_hide_watched)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(30)</visible>
                        <label>Hide Next Page Item in Widgets</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.widget_hide_next_page)]</property>
                        <property name="setting_description">Enable this and the "Next Page" item will be hidden in Fen Light widgets</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=widget_hide_next_page)</onclick>
                    </item>
    <!-- ACCOUNTS 40 -->
            <!-- Trakt -->
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>Trakt</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.trakt.user),empty_setting)</visible>
                        <label>Authorize</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">...</property>
                        <property name="setting_description">Authorize your Trakt account and use it within Fen Light</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=trakt.trakt_authenticate)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.trakt.user),empty_setting)</visible>
                        <label>Revoke Authorization</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">...</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.trakt.user)]</property>
                        <property name="setting_description">Revoke authorization of your Trakt account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=trakt.trakt_revoke_authentication)</onclick>
                    </item>
            <!-- OMDb -->
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>OMDb</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>API Key</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.omdb_api)]</property>
                        <property name="setting_description">Enter here your OMDb API key. This will allow you to utilize extra ratings information in Fen Light's Extras window</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_string&amp;setting_id=omdb_api)</onclick>
                    </item>
            <!-- External Scrapers -->
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>External Scrapers</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>Enable</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.provider.external)]</property>
                        <property name="setting_description">Enable this to use external scrapers. No support is provided when you choose to use external scrapers within Fen Light</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=provider.external)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.external),true)</visible>
                        <label>Choose External Scrapers Module</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.external_scraper.name)]</property>
                        <property name="setting_description">Choose the external scraper module to use within Fen Light. No support is provided when you choose to use external scrapers within Fen Light</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=external_scraper_choice)</onclick>
                    </item>
            <!-- Real Debrid -->
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>Real Debrid</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.rd.token),empty_setting)</visible>
                        <label>Authorize</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">...</property>
                        <property name="setting_description">Authorize your Real Debrid account and use it within Fen Light</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=real_debrid.authenticate)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.rd.token),empty_setting)</visible>
                        <label>Enable</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.rd.enabled)]</property>
                        <property name="setting_description">Enable the use of your Real Debrid account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=rd.enabled)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.rd.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.rd.enabled),true)</visible>
                        <label>Revoke Authorization</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.rd.account_id)]</property>
                        <property name="setting_description">Revoke authorization of your Real Debrid account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=real_debrid.revoke_authentication)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.rd.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.rd.enabled),true)</visible>
                        <label>Add Resolved Debrid Cache to Cloud</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.store_resolved_to_cloud.real-debrid_name)]</property>
                        <property name="setting_description">Choose which resolved media is automatically added to your Real Debrid Cloud. All media or only show packs</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=store_resolved_to_cloud.real-debrid)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.rd.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.rd.enabled),true)</visible>
                        <label>Search Cloud Storage</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.provider.rd_cloud)]</property>
                        <property name="setting_description">Enable this and Fen Light will search your Real Debrid Cloud for media</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=provider.rd_cloud)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.rd.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.rd.enabled),true)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.rd_cloud),true)</visible>
                        <label>    - Filter Results by Name</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.rd_cloud.title_filter)]</property>
                        <property name="setting_description">Enable this and Fen Light will perform extra name matching functions on your Real Debrid Cloud results. Will help to limit incorrect results, but may also filter some relevant results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=rd_cloud.title_filter)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.rd.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.rd.enabled),true)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.rd_cloud),true)</visible>
                        <label>    - Check Before Full Search</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.check.rd_cloud)]</property>
                        <property name="setting_description">Enable this and Fen Light will search for results in your Real Debrid Cloud before checking other enabled scrapers</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=check.rd_cloud)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.rd.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.rd.enabled),true)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.rd_cloud),true)</visible>
                        <label>    - Show Results at Top</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.sort_rdcloud_first)]</property>
                        <property name="setting_description">Enable this and Fen Light will sort the results from your Real Debrid Cloud to the top of all results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=results.sort_rdcloud_first)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.rd.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.rd.enabled),true)</visible>
                        <label>Priority (Lower Number Equals Higher Priority)</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.rd.priority)]</property>
                        <property name="setting_description">Choose the order in which Real Debrid results appear in relation to any other active accounts. The lower the number, the higher the sort order</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=rd.priority)</onclick>
                    </item>
            <!-- Premiumize -->
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>Premiumize</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.pm.token),empty_setting)</visible>
                        <label>Authorize</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">...</property>
                        <property name="setting_description">Authorize your Premiumize account and use it within Fen Light</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=premiumize.authenticate)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.pm.token),empty_setting)</visible>
                        <label>Enable</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.pm.enabled)]</property>
                        <property name="setting_description">Enable the use of your Premiumize account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=pm.enabled)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.pm.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.pm.enabled),true)</visible>
                        <label>Revoke Authorization</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.pm.account_id)]</property>
                        <property name="setting_description">Revoke authorization of your Premiumize account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=premiumize.revoke_authentication)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.pm.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.pm.enabled),true)</visible>
                        <label>Add Resolved Debrid Cache to Cloud</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.store_resolved_to_cloud.premiumize.me_name)]</property>
                        <property name="setting_description">Choose which resolved media is automatically added to your Premiumize Cloud. All media or only show packs</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=store_resolved_to_cloud.premiumize.me)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.pm.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.pm.enabled),true)</visible>
                        <label>Search Cloud Storage</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.provider.pm_cloud)]</property>
                        <property name="setting_description">Enable this and Fen Light will search your Premiumize Cloud for media</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=provider.pm_cloud)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.pm.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.pm.enabled),true)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.pm_cloud),true)</visible>
                        <label>    - Filter Results by Name</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.pm_cloud.title_filter)]</property>
                        <property name="setting_description">Enable this and Fen Light will perform extra name matching functions on your Premiumize Cloud results. Will help to limit incorrect results, but may also filter some relevant results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=pm_cloud.title_filter)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.pm.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.pm.enabled),true)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.pm_cloud),true)</visible>
                        <label>    - Check Before Full Search</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.check.pm_cloud)]</property>
                        <property name="setting_description">Enable this and Fen Light will search for results in your Premiumize Cloud before checking other enabled scrapers</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=check.pm_cloud)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.pm.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.pm.enabled),true)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.pm_cloud),true)</visible>
                        <label>    - Show Results at Top</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.sort_pmcloud_first)]</property>
                        <property name="setting_description">Enable this and Fen Light will sort the results from your Premiumize Cloud to the top of all results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=results.sort_pmcloud_first)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.pm.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.pm.enabled),true)</visible>
                        <label>Priority (Lower Number Equals Higher Priority)</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.pm.priority)]</property>
                        <property name="setting_description">Choose the order in which Real Debrid results appear in relation to any other active accounts. The lower the number, the higher the sort order</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=pm.priority)</onclick>
                    </item>
            <!-- All Debrid -->
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>All Debrid</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.ad.token),empty_setting)</visible>
                        <label>Authorize</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">...</property>
                        <property name="setting_description">Authorize your All Debrid account and use it within Fen Light</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=alldebrid.authenticate)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.ad.token),empty_setting)</visible>
                        <label>Enable</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.ad.enabled)]</property>
                        <property name="setting_description">Enable the use of your All Debrid account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=ad.enabled)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.ad.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.ad.enabled),true)</visible>
                        <label>Revoke Authorization</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.ad.account_id)]</property>
                        <property name="setting_description">Revoke authorization of your All Debrid account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=alldebrid.revoke_authentication)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.ad.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.ad.enabled),true)</visible>
                        <label>Add Resolved Debrid Cache to Cloud</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.store_resolved_to_cloud.alldebrid_name)]</property>
                        <property name="setting_description">Choose which resolved media is automatically added to your All Debrid Cloud. All media or only show packs</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=store_resolved_to_cloud.alldebrid)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.ad.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.ad.enabled),true)</visible>
                        <label>Search Cloud Storage</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.provider.ad_cloud)]</property>
                        <property name="setting_description">Enable this and Fen Light will search your All Debrid Cloud for media</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=provider.ad_cloud)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.ad.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.ad.enabled),true)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.ad_cloud),true)</visible>
                        <label>    - Filter Results by Name</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.ad_cloud.title_filter)]</property>
                        <property name="setting_description">Enable this and Fen Light will perform extra name matching functions on your All Debrid Cloud results. Will help to limit incorrect results, but may also filter some relevant results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=ad_cloud.title_filter)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.ad.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.ad.enabled),true)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.ad_cloud),true)</visible>
                        <label>    - Check Before Full Search</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.check.ad_cloud)]</property>
                        <property name="setting_description">Enable this and Fen Light will search for results in your All Debrid Cloud before checking other enabled scrapers</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=check.ad_cloud)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.ad.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.ad.enabled),true)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.ad_cloud),true)</visible>
                        <label>    - Show Results at Top</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.sort_adcloud_first)]</property>
                        <property name="setting_description">Enable this and Fen Light will sort the results from your All Debrid Cloud to the top of all results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=results.sort_adcloud_first)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>!String.IsEqual(Window(10000).Property(fenlight.ad.token),empty_setting)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.ad.enabled),true)</visible>
                        <label>Priority (Lower Number Equals Higher Priority)</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.ad.priority)]</property>
                        <property name="setting_description">Choose the order in which Real Debrid results appear in relation to any other active accounts. The lower the number, the higher the sort order</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=ad.priority)</onclick>
                    </item>
            <!-- Easynews -->
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>Easynews</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>Enable</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.provider.easynews)]</property>
                        <property name="setting_description">Enable the use of your Easynews account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=provider.easynews)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.easynews),true)</visible>
                        <label>Login</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.easynews_user)]</property>
                        <property name="setting_description">Enter the Login of your Easynews account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_string&amp;setting_id=easynews_user)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.easynews),true)</visible>
                        <label>Password</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.easynews_password)]</property>
                        <property name="setting_description">Enter the Password of your Easynews account</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_string&amp;setting_id=easynews_password)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.easynews),true)</visible>
                        <visible>![String.IsEmpty(Window(10000).Property(fenlight.easynews_user)) + String.IsEmpty(Window(10000).Property(fenlight.easynews_password))]</visible>
                        <label>Filter Results by Name</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.easynews.title_filter)]</property>
                        <property name="setting_description">Enable this and Fen Light will perform extra name matching functions on your Easynews results. Will help to limit incorrect results, but may also filter some relevant results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=easynews.title_filter)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.easynews),true)</visible>
                        <visible>![String.IsEmpty(Window(10000).Property(fenlight.easynews_user)) + String.IsEmpty(Window(10000).Property(fenlight.easynews_password))]</visible>
                        <label>Filter Languages</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.easynews.filter_lang)]</property>
                        <property name="setting_description">Enable this and Fen Light will perform extra language filtering on your Easynews results. Will help to limit incorrect results, but may also filter some relevant results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=easynews.filter_lang)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.easynews),true)</visible>
                        <visible>![String.IsEmpty(Window(10000).Property(fenlight.easynews_user)) + String.IsEmpty(Window(10000).Property(fenlight.easynews_password))]</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.easynews.filter_lang),true)</visible>
                        <label>    - Choose Languages To Include</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.easynews.lang_filters)]</property>
                        <property name="setting_description">Choose which languages you wish to include in Easynews results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=set_language_filter_choice&amp;filter_setting_id=easynews.lang_filters&amp;multi_choice=true)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.easynews),true)</visible>
                        <visible>![String.IsEmpty(Window(10000).Property(fenlight.easynews_user)) + String.IsEmpty(Window(10000).Property(fenlight.easynews_password))]</visible>
                        <label>Check Before Full Search</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.check.easynews)]</property>
                        <property name="setting_description">Enable this and Fen Light will search for results from your Easynews service before checking other enabled scrapers</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=check.easynews)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.easynews),true)</visible>
                        <visible>![String.IsEmpty(Window(10000).Property(fenlight.easynews_user)) + String.IsEmpty(Window(10000).Property(fenlight.easynews_password))]</visible>
                        <label>Priority (Lower Number Equals Higher Priority)</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.en.priority)]</property>
                        <property name="setting_description">Choose the order in which Real Debrid results appear in relation to any other active accounts. The lower the number, the higher the sort order</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=en.priority)</onclick>
                    </item>
            <!-- Local Media Folders -->
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>Local Media Folders</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <label>Enable</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.provider.folders)]</property>
                        <property name="setting_description">Enable the use of any local media folder locations i.e. NAS drives, HDD's etc.</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=provider.folders)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.folders),true)</visible>
                        <label>Set Folder Scrapers</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">empty_setting</property>
                        <property name="setting_description">Choose this to activate a settings window allowing you to set the location of up to 5 devices containing local media</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=sources_folders_choice)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.folders),true)</visible>
                        <label>Filter Results by Name</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.folders.title_filter)]</property>
                        <property name="setting_description">Enable this and Fen Light will perform extra name matching functions on your local media folders results. Will help to limit incorrect results, but may also filter some relevant results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=folders.title_filter)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.folders),true)</visible>
                        <label>Check Before Full Search</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.check.folders)]</property>
                        <property name="setting_description">Enable this and Fen Light will search for results from your local media folders before checking other enabled scrapers</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=check.folders)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.folders),true)</visible>
                        <label>Show Results at Top</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.sort_folders_first)]</property>
                        <property name="setting_description">Enable this and Fen Light will sort the results from your local media folders to the top of all results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=results.sort_folders_first)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(40)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.provider.folders),true)</visible>
                        <label>Ignore Quality and Size Filters</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.folders_ignore_filters)]</property>
                        <property name="setting_description">Enable this and Fen Light will ignore any Quality or Size filters when processing local media folders results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=results.folders_ignore_filters)</onclick>
                    </item>
    <!-- RESULTS 50 -->
            <!-- Display -->
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Display</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Scraper Timeout</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.timeout)]</property>
                        <property name="setting_description">Choose the amount of time Fen Light will allow all scrapers to search for results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=results.timeout)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Results Display Format</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.list_format)]</property>
                        <property name="setting_description">Choose the format in which Fen Light will display the results of a source search. Lists, Rows and WideList are provided</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=results_format_choice)</onclick>
                    </item>
            <!-- General -->
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>General</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Retry With All Scrapers When No Results</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.auto_rescrape_with_all_name)]</property>
                        <property name="setting_description">Choose the action performed when there are no results after an initial scrape for sources</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=results.auto_rescrape_with_all)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Ignore All Filters When No Results</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.ignore_filter_name)]</property>
                        <property name="setting_description">Choose the action performed when there are no results after an initial scrape for sources</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=results.ignore_filter)</onclick>
                    </item>
            <!-- Sorting and Filtering -->
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Sorting and Filtering</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Results Sorting</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.sort_order_display)]</property>
                        <property name="setting_description">Choose the priority ordering performed by Fen Light before displaying source results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=results_sorting_choice)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Filter Results by Size</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.filter_size)]</property>
                        <property name="setting_description">Enable this and Fen Light will filter source results based on your internet speed. The higher your internet speed, the larger the results that will be allowed.</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=results.filter_size)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.results.filter_size),true)</visible>
                        <label>    - Internet Speed (Mbit/s)</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.line_speed)]</property>
                        <property name="setting_description">Enter here your internet line speed. It is a good idea to choose a value slightly below your true internet speed, although Fen Light will still reduce this value by 10% before filtering results by size</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=results.line_speed)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.results.filter_size),true)</visible>
                        <label>    - Include Results With Unknown Size</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results.include.unknown.size)]</property>
                        <property name="setting_description">Enable this and Fen Light will include any source results with an unknown size. Be aware this may allow very large files through the filter</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=results.include.unknown.size)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Include Pre-Release Results (CAM/SCR/TELE)</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.include_prerelease_results)]</property>
                        <property name="setting_description">Enable this and Fen Light will include CAMS, SCR and TELE results through the filter</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=include_prerelease_results)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Include 3D Results</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.include_3d_results)]</property>
                        <property name="setting_description">Enable this and Fen Light will include 3D results through the filter</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=include_3d_results)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>HEVC Files Filter</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.filter_hevc_name)]</property>
                        <property name="setting_description">Choose how to handle HEVC source results. They can be INCLUDED, EXCLUDED, or PREFERRED when using autoplay</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=filter_hevc)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.filter_hevc),0) | String.IsEqual(Window(10000).Property(fenlight.filter_hevc),2)</visible>
                        <label>    - Max. HEVC Quality</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.filter_hevc.max_quality_name)]</property>
                        <property name="setting_description">Choose the maximum quality allowed for HEVC files when allowing source select</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=filter_hevc.max_quality)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.filter_hevc),0) | String.IsEqual(Window(10000).Property(fenlight.filter_hevc),2)</visible>
                        <label>    - Max. Autoplay HEVC Quality</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.filter_hevc.max_autoplay_quality_name)]</property>
                        <property name="setting_description">Choose the maximum quality allowed for HEVC files being autoplayed</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=filter_hevc.max_autoplay_quality)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>HDR Files Filter</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.filter_hdr_name)]</property>
                        <property name="setting_description">Choose how to handle HDR source results. They can be INCLUDED, EXCLUDED, or PREFERRED when using autoplay</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=filter_hdr)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Dolby Vision Files Filter</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.filter_dv_name)]</property>
                        <property name="setting_description">Choose how to handle DOLBY VISION source results. They can be INCLUDED, EXCLUDED, or PREFERRED when using autoplay</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=filter_dv)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>AV1 Files Filter</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.filter_av1_name)]</property>
                        <property name="setting_description">Choose how to handle AV1 source results. They can be INCLUDED, EXCLUDED, or PREFERRED when using autoplay</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=filter_av1)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Choose Audio Properties to Exclude</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.filter_audio)]</property>
                        <property name="setting_description">Choose audio properties that will be filtered out of source results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=audio_filters_choice)</onclick>
                    </item>
            <!-- Results Color Highlights -->
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Results Color Highlights</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <label>Highlight Results Based On</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.highlight.type_name)]</property>
                        <property name="setting_description">Choose the method used to provide highlight colors to source results. The options are PROVIDER, QUALITY, or the use of a SINGLE COLOR</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=highlight.type)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),0)</visible>
                        <label>    - Real Debrid Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.provider.rd_highlight)]]$INFO[Window(10000).Property(fenlight.provider.rd_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose Real Debrid color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=provider.rd_highlight)</onclick>
                    </item>
                    <item id="732">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),0)</visible>
                        <label>    - Premiumize Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.provider.pm_highlight)]]$INFO[Window(10000).Property(fenlight.provider.pm_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose Premiumize color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=provider.pm_highlight)</onclick>
                    </item>
                    <item id="733">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),0)</visible>
                        <label>    - All Debrid Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.provider.ad_highlight)]]$INFO[Window(10000).Property(fenlight.provider.ad_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose All Debrid color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=provider.ad_highlight)</onclick>
                    </item>
                    <item id="735">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),0)</visible>
                        <label>    - Easynews Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.provider.easynews_highlight)]]$INFO[Window(10000).Property(fenlight.provider.easynews_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose Easynews color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=provider.easynews_highlight)</onclick>
                    </item>
                    <item id="736">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),0)</visible>
                        <label>    - Debrid Cloud Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.provider.debrid_cloud_highlight)]]$INFO[Window(10000).Property(fenlight.provider.debrid_cloud_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose Debrid Cloud color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=provider.debrid_cloud_highlight)</onclick>
                    </item>
                    <item id="737">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),0)</visible>
                        <label>    - Local Media Folders Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.provider.folders_highlight)]]$INFO[Window(10000).Property(fenlight.provider.folders_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose Local Media Folders color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=provider.folders_highlight)</onclick>
                    </item>
                    <item id="738">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),1)</visible>
                        <label>    - 4K Results Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.scraper_4k_highlight)]]$INFO[Window(10000).Property(fenlight.scraper_4k_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose 4K Quality color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=scraper_4k_highlight)</onclick>
                    </item>
                    <item id="739">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),1)</visible>
                        <label>    - 1080P Results Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.scraper_1080p_highlight)]]$INFO[Window(10000).Property(fenlight.scraper_1080p_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose 1080P Quality color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=scraper_1080p_highlight)</onclick>
                    </item>
                    <item id="740">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),1)</visible>
                        <label>    - 720P Results Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.scraper_720p_highlight)]]$INFO[Window(10000).Property(fenlight.scraper_720p_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose 720P Quality color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=scraper_720p_highlight)</onclick>
                    </item>
                    <item id="741">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),1)</visible>
                        <label>    - SD Results Color</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.scraper_SD_highlight)]]$INFO[Window(10000).Property(fenlight.scraper_SD_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose SD Quality color</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=scraper_SD_highlight)</onclick>
                    </item>
                    <item id="742">
                        <visible>Container(2000).HasFocus(50)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.highlight.type),2)</visible>
                        <label>    - Single Color For All</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">[COLOR $INFO[Window(10000).Property(fenlight.scraper_single_highlight)]]$INFO[Window(10000).Property(fenlight.scraper_single_highlight)][/COLOR]</property>
                        <property name="setting_description">Choose Single color for all results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=scraper_color_choice&amp;setting_id=scraper_single_highlight)</onclick>
                    </item>
    <!-- PLAYBACK 60 -->
            <!-- Playback Movies -->
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <label>Movies</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <label>Auto Play</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.auto_play_movie)]</property>
                        <property name="setting_description">Enable this for Movies to play automatically when selected</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=auto_play_movie)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_movie),false)</visible>
                        <label>Limit Quality</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results_quality_movie)]</property>
                        <property name="setting_description">Choose the Quality properties allowed for source select results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=set_quality_choice&amp;setting_id=results_quality_movie)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_movie),true)</visible>
                        <label>Limit Auto Play Quality</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.autoplay_quality_movie)]</property>
                        <property name="setting_description">Choose the Quality properties allowed for autoplay results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=set_quality_choice&amp;setting_id=autoplay_quality_movie)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <label>Automatically Resume Playback</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.auto_resume_movie_name)]</property>
                        <property name="setting_description">Choose when Fen Light will automatically resume playback of an in-progress Movie</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=auto_resume_movie)</onclick>
                    </item>
            <!-- Playback Episodes -->
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <label>Episodes</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <label>Auto Play</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.auto_play_episode)]</property>
                        <property name="setting_description">Enable this for Episodes to play automatically when selected</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=auto_play_episode)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_episode),false)</visible>
                        <label>Limit Quality</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.results_quality_episode)]</property>
                        <property name="setting_description">Choose the Quality properties allowed for source select results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=set_quality_choice&amp;setting_id=results_quality_episode)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_episode),true)</visible>
                        <label>Limit Auto Play Quality</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.autoplay_quality_episode)]</property>
                        <property name="setting_description">Choose the Quality properties allowed for autoplay results</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=set_quality_choice&amp;setting_id=autoplay_quality_episode)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_episode),true)</visible>
                        <label>Autoplay Next Episode</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.autoplay_next_episode)]</property>
                        <property name="setting_description">Enable this and Fen Light will automatically search for sources for the next episode of a TV Show towards the end of the episode currently being watched</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=autoplay_next_episode)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_episode),true) + String.IsEqual(Window(10000).Property(fenlight.autoplay_next_episode),true)</visible>
                        <label>    - When No Interaction with Window</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.autoplay_default_action_name)]</property>
                        <property name="setting_description">Choose the action performed when you fail to interact with the Next Episode alert</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=autoplay_default_action)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_episode),true) + String.IsEqual(Window(10000).Property(fenlight.autoplay_next_episode),true)</visible>
                        <label>    - Show Alert After (%) Playback</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.autoplay_next_window_percentage)]</property>
                        <property name="setting_description">Choose when Fen Light will show the Next Episode Alert</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=autoplay_next_window_percentage)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_episode),true) + String.IsEqual(Window(10000).Property(fenlight.autoplay_next_episode),true)</visible>
                        <label>    - Use Chapter Info For Alert When Available</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.autoplay_use_chapters)]</property>
                        <property name="setting_description">Enable this and Fen Light will attempt to use video file Chapter information to ascertain when to show the Next Episode alert. If unsuccessful, then the percentage of playback value will be used instead</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=autoplay_use_chapters)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_episode),false)</visible>
                        <label>Auto Scrape Next Episode</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.autoscrape_next_episode)]</property>
                        <property name="setting_description">Enable this and Fen Light will provide an opportunity for you to confirm you want the next episode sources scraped whilst still watching the current episode. As soon as playback ends, the source results from the scrape will be shown</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=autoscrape_next_episode)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_episode),false) + String.IsEqual(Window(10000).Property(fenlight.autoscrape_next_episode),true)</visible>
                        <label>    - Show Alert After (%) Playback</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.autoscrape_next_window_percentage)]</property>
                        <property name="setting_description">Choose when Fen Light will show the Next Episode Scrape Alert</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=autoscrape_next_window_percentage)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.auto_play_episode),false) + String.IsEqual(Window(10000).Property(fenlight.autoscrape_next_episode),true)</visible>
                        <label>    - Use Chapter Info For Alert When Available</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.autoscrape_use_chapters)]</property>
                        <property name="setting_description">Enable this and Fen Light will attempt to use video file Chapter information to ascertain when to show the Next Episode Scrape alert. If unsuccessful, then the percentage of playback value will be used instead</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=autoscrape_use_chapters)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <label>Automatically Resume Playback</label>
                        <property name="setting_type">action</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.auto_resume_episode_name)]</property>
                        <property name="setting_description">Choose when Fen Light will automatically resume playback of an in-progress Episode</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_from_list&amp;setting_id=auto_resume_episode)</onclick>
                    </item>
            <!-- Playback Utilities -->
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <label>Playback Utilities</label>
                        <property name="setting_type">separator</property>
                        <onclick>noop</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <label>Limit Resolve Attempts to Selected Result</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.playback.limit_resolve)]</property>
                        <property name="setting_description">Enable this and Fen Light will limit the playback attempts to only the source result chosen. If disabled, Fen Light will potentially try 15 results of similar properties to your chosen source result until it is able to successfully resolve and playback</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=playback.limit_resolve)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <label>Check Volume Before Start of Playback</label>
                        <property name="setting_type">boolean</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.playback.volumecheck_enabled)]</property>
                        <property name="setting_description">Enable this and Fen Light will attempt to check the current level of volume within Kodi, and adjust it downwards if it is exceeding a set level</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_boolean&amp;setting_id=playback.volumecheck_enabled)</onclick>
                    </item>
                    <item>
                        <visible>Container(2000).HasFocus(60)</visible>
                        <visible>String.IsEqual(Window(10000).Property(fenlight.playback.volumecheck_enabled),true)</visible>
                        <label>    - Set Max. Percent Starting Volume (0-100)</label>
                        <property name="setting_type">numeric</property>
                        <property name="setting_value">$INFO[Window(10000).Property(fenlight.playback.volumecheck_percent)]</property>
                        <property name="setting_description">Choose the maximum allowed volume level</property>
                        <onclick>RunPlugin(plugin://plugin.video.fenlight/?mode=settings_manager.set_numeric&amp;setting_id=playback.volumecheck_percent)</onclick>
                    </item>
                </content>
            </control>
            <control type="group">
                <top>930</top>
                <left>15</left>
                <control type="image">
                    <left>-2</left>
                    <top>-2</top>
                    <width>1689</width>
                    <height>84</height>
                    <texture colordiffuse="FFCCCCCC" border="30">fenlight_common/circle.png</texture>
                </control>
                <control type="image">
                    <width>1685</width>
                    <height>80</height>
                    <texture colordiffuse="FF1F2020" border="30">fenlight_common/circle.png</texture>
                </control>
                <control type="label">
                    <top>30</top>
                    <left>30</left>
                    <width>200</width>
                    <height>20</height>
                    <font>font12</font> <!-- FENLIGHT_26 -->
                    <textcolor>FFCCCCCC</textcolor>
                    <label>[UPPERCASE][B]INFO: [/B][/UPPERCASE]</label>
                    <align>left</align>
                    <aligny>center</aligny>
                </control>
                <control type="group">
                    <top>4</top>
                    <left>115</left>
                    <width>1530</width>
                    <height>70</height>
                    <control type="textbox">
                        <font>font12</font> <!-- FENLIGHT_26 -->
                        <align>left</align>
                        <aligny>center</aligny>
                        <textcolor>FFCCCCCC</textcolor>
                        <label>$INFO[Container(2100).ListItem.Property(setting_description)]</label>
                        <autoscroll time="7000" delay="15000" repeat="7000">true</autoscroll>
                        <visible>Control.HasFocus(2100)</visible>
                    </control>
=                    <control type="textbox">
                        <font>font12</font> <!-- FENLIGHT_26 -->
                        <align>left</align>
                        <aligny>center</aligny>
                        <textcolor>FFCCCCCC</textcolor>
                        <label>$INFO[Container(2000).ListItem.Label,All settings related to [UPPERCASE][B],[/B][/UPPERCASE] settings]</label>
                        <autoscroll time="7000" delay="15000" repeat="7000">true</autoscroll>
                        <visible>Control.HasFocus(2000)</visible>
                    </control>
                </control>
            </control>
            <control type="scrollbar" id="10025">
                <top>100</top>
                <left>1700</left>
                <width>10</width>
                <height>760</height>
                <texturesliderbackground colordiffuse="FF302F2F">fenlight_common/white.png</texturesliderbackground>
                <texturesliderbar colordiffuse="FF555556">fenlight_common/white.png</texturesliderbar>
                <texturesliderbarfocus colordiffuse="FFCCCCCC">fenlight_common/white.png</texturesliderbarfocus>
                <onleft>2100</onleft>
                <onright>2000</onright>
                <showonepage>false</showonepage>
                <orientation>vertical</orientation>
            </control>
        </control>
    </controls>
</window>
