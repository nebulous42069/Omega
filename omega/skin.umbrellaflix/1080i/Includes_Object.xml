<?xml version="1.0" encoding="utf-8"?>
<includes>
  <include name="Object_Info">
    <param name="hdsd_flag" default="false" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="Skin.HasSetting(Ratings.IMDBVotes)" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="genre" default="true" />
    <param name="top250" default="true" />
    <param name="titleright" default="0" />
    <param name="studioid_flags" default="90703" />
    <param name="studioid_ratings" default="90704" />
    <definition>
      <control type="grouplist">
        <top>-10</top>
        <visible>Container.Content(movies) | Container.Content(sets) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(videos) | Container.Content(seaons) | Window.IsVisible(script-script.extendedinfo-VideoList.xml) | $EXP[Exp_IsPluginAdvancedLauncher]</visible>
        <visible>!Container($PARAM[id]).ListItem.IsParentFolder</visible>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
       <control type="label">
	 <left>0</left>
         <height>30</height>
         <font>font_small</font>
         <textcolor>dimgrey</textcolor>
         <label>$VAR[Label_Genre_showcase]</label>
         <scroll>false</scroll>
	 <visible>!Skin.HasSetting(DisableNetflixView)</visible>
       </control>
        <control type="label">
          <left>0</left>
          <right>$PARAM[titleright]</right>
          <label>$VAR[video_heading]</label>
          <height>80</height>
          <aligny>top</aligny>
          <textcolor>main_fg_100</textcolor>
          <font>font_xlarge_bold</font>
        </control>
        <control type="grouplist">
          <height>40</height>
          <orientation>horizontal</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <left>0</left>
          <right>0</right>
	  <visible>Skin.HasSetting(DisableNetflixView)</visible>
          <control type="image">
            <left>0</left>
            <top>10</top>
            <width>37</width>
            <height>24</height>
            <texture colordiffuse="main_fg_100">$VAR[Image_HDSD]</texture>
            <visible>Container.Content(movies) | Container.Content(episodes)</visible>
            <visible>$PARAM[hdsd_flag]</visible>
            <visible>![Skin.HasSetting(DisableInfoRatings) + !Window.IsVisible(DialogVideoInfo.xml)]</visible>
          </control>
          <control type="label">
            <label>|</label>
            <width>auto</width>
            <height>40</height>
            <aligny>top</aligny>
            <textcolor>$VAR[ColorHighlight]</textcolor>
            <font>font_small</font>
            <visible>Container.Content(movies) | Container.Content(episodes)</visible>
            <visible>$PARAM[hdsd_flag]</visible>
            <visible>![Skin.HasSetting(DisableInfoRatings) + !Window.IsVisible(DialogVideoInfo.xml)]</visible>
          </control>
          <control type="label">
            <width>auto</width>
            <label>$VAR[Label_ShowCase_InfoLine]</label>
            <height>40</height>
            <aligny>top</aligny>
            <textcolor>$VAR[ColorHighlight]</textcolor>
            <font>font_small</font>
          </control>
          <control type="label">
            <width>auto</width>
            <label>$VAR[Label_Info_NextAired_Status, | [COLOR=main_fg_100],[/COLOR]]$VAR[Label_Info_NextAired_Date, [COLOR=main_fg_100],[/COLOR]]</label>
            <height>40</height>
            <aligny>top</aligny>
            <textcolor>$VAR[ColorHighlight]</textcolor>
            <font>font_small</font>
            <visible>Container.Content(tvshows)</visible>
            <visible>!Control.IsVisible(500)</visible>
          </control>
        </control>

        <control type="group">
	     <height>40</height>
	     <top>-20</top>
             <include>netflix_infoline</include>
             <visible>!Skin.HasSetting(DisableNetflixView)</visible>
        </control>

        <control type="group">
          <param name="studioid_flags" value="$PARAM[studioid_flags]" />
          <param name="studioid_ratings" value="$PARAM[studioid_ratings]" />
          <height>80</height>
          <left>0</left>
          <right>0</right>
          <control type="group">
            <visible>[Skin.HasSetting(DisableInfoRatings) + !Window.IsVisible(DialogVideoInfo.xml)] + [Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows)]</visible>
            <include content="Object_Flags">
              <param name="container" value="" />
              <param name="directory" value="color" />
              <param name="align" value="left" />
              <param name="ratings" value="true" />
              <param name="studioid" value="$PARAM[studioid_flags]" />
            </include>
          </control>
          <control type="group">
            <visible>![Skin.HasSetting(DisableInfoRatings) + !Window.IsVisible(DialogVideoInfo.xml)] | [!Container.Content(movies) + !Container.Content(episodes) + !Container.Content(tvshows)]</visible>
            <control type="group">
              <top>-17</top>
              <left>-16</left>
              <include>Object_StarRating</include>
              <visible>String.IsEmpty(ListItem.UserRating)</visible>
              <visible>!Skin.HasSetting(DisableStarRating)</visible>
            </control>
            <control type="group">
              <top>-17</top>
              <left>-16</left>
              <include content="Object_StarRating">
                <param name="rating_prop" value="ListItem.UserRating" />
              </include>
              <visible>!String.IsEmpty(ListItem.UserRating)</visible>
              <visible>!Skin.HasSetting(DisableStarRating)</visible>
            </control>
            <control type="group">
              <top>14</top>
              <left>256</left>
              <width>$PARAM[width]</width>
              <animation effect="slide" end="-256" condition="Skin.HasSetting(DisableStarRating)">Conditional</animation>
	      <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        <include content="Object_Ratings">
          <param name="directory" value="color" />
          <param name="align" value="right" />
          <param name="width" value="1400" />
          <param name="rottentomatoes" value="true" />
          <param name="imdbvotes" value="true" />
          <param name="usermeter" value="false" />
          <param name="imdb" value="true" />
          <param name="tmdb" value="true" />
          <param name="tvdb" value="true" />
          <param name="metacritic" value="true" />
          <param name="oscars" value="true" />
          <param name="top250" value="false" />
          <param name="plot" value="false" />
          <param name="studio" value="true" />
          <param name="studioid" value="1$PARAM[studioid_ratings]" />
        </include>
            </control>
            <control type="group">
              <top>25</top>
              <left>0</left>
              <width>$PARAM[width]</width>
	      <visible>Window.IsVisible(DialogVideoInfo.xml)</visible>
              <animation effect="slide" end="-256" condition="Skin.HasSetting(DisableStarRating)">Conditional</animation>
        <include content="Object_Ratings" condition="Window.IsVisible(DialogVideoInfo.xml)">
          <param name="directory" value="color" />
          <param name="align" value="left" />
          <param name="width" value="1400" />
          <param name="rottentomatoes" value="true" />
          <param name="imdbvotes" value="true" />
          <param name="usermeter" value="false" />
          <param name="imdb" value="true" />
          <param name="tmdb" value="true" />
          <param name="tvdb" value="true" />
          <param name="metacritic" value="true" />
          <param name="oscars" value="true" />
          <param name="top250" value="false" />
          <param name="plot" value="false" />
          <param name="studio" value="true" />
          <param name="studioid" value="2$PARAM[studioid_ratings]" />
        </include>
            </control>
          </control>
        </control>
        <control type="label">
          <left>0</left>
          <right>0</right>
          <label>[CAPITALIZE]$VAR[Label_Genre][/CAPITALIZE]</label>
          <height>60</height>
          <aligny>top</aligny>
          <textcolor>main_fg_100</textcolor>
          <font>font_small</font>
          <visible>Skin.HasSetting(DisableNetflixView) + $PARAM[genre]</visible>
        </control>
        <control type="textbox">
          <label fallback="19055">$VAR[Label_Plot]</label>
          <height>$PARAM[plot_height]</height>
          <aligny>top</aligny>
          <textcolor>main_fg_70</textcolor>
          <font>font_plotbox</font>
        </control>
      </control>
      <control type="grouplist">
        <visible>![Container.Content(movies) | Container.Content(sets) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(videos) | Container.Content(seaons) | Window.IsVisible(script-script.extendedinfo-VideoList.xml) | $EXP[Exp_IsPluginAdvancedLauncher]]</visible>
        <visible>!Container($PARAM[id]).ListItem.IsParentFolder</visible>
        <bottom>$PARAM[bottom]</bottom>
        <top>-10</top>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <control type="label">
          <left>0</left>
          <right>0</right>
          <label>$VAR[Label_MainTitle]</label>
          <height>80</height>
          <aligny>top</aligny>
          <textcolor>main_fg_100</textcolor>
          <font>font_showcase_title</font>
        </control>
        <control type="label">
          <left>0</left>
          <right>0</right>
          <label>$VAR[Label_SubTitle]</label>
          <height>40</height>
          <aligny>top</aligny>
          <textcolor>$VAR[ColorHighlight]</textcolor>
          <font>font_small</font>
        </control>
        <control type="group">
          <height>80</height>
          <visible>!Skin.HasSetting(DisableStarRating)</visible>
          <control type="group">
            <top>-17</top>
            <left>-16</left>
            <include content="Object_StarRating_Music">
              <param name="align" value="left" />
              <param name="visible" value="String.IsEmpty(ListItem.Rating)" />
            </include>
            <include content="Object_StarRating">
              <param name="align" value="left" />
              <param name="visible" value="!String.IsEmpty(ListItem.Rating)" />
              <param name="rating_prop" value="ListItem.Rating" />
            </include>
          </control>
        </control>
        <control type="textbox">
          <label fallback="19055">$VAR[Label_Plot]</label>
          <height>$PARAM[plot_height]</height>
          <textcolor>main_fg_70</textcolor>
          <font>font_plotbox</font>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Seasons_Info">
    <control type="group">
      <control type="label">
        <visible>String.IsEmpty(Control.GetLabel(56751))</visible>
        <top>25</top>
        <left>40</left>
        <label>$VAR[video_heading]</label>
        <textcolor>grey</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>netflix_heading_small</font>
        <width min="200" max="300">auto</width>
        <height min="50" max="150">auto</height>
        <align>left</align>
        <wrapmultiline>true</wrapmultiline>
      </control>
      <control type="image" id="56751">
        <left>40</left>
        <top>-20</top>
        <height>200.8</height>
        <width>416</width>
        <aligny>top</aligny>
        <align>left</align>
        <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
      </control>
      <control type="group">
        <top>180</top>
        <left>50</left>
        <include>netflix_infoline</include>
      </control>
    </control>
  </include>
  <include name="Object_Episodes_Info">
    <control type="group">
      <control type="textbox">
        <visible>String.IsEmpty(Control.GetLabel(5675))</visible>
        <top>25</top>
        <left>40</left>
        <label>[B]$VAR[video_heading][/B]</label>
        <textcolor>grey</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>font_heading</font>
        <width min="200" max="500">auto</width>
        <height min="30" max="115">auto</height>
        <align>left</align>
        <wrapmultiline>true</wrapmultiline>
        <scroll>true</scroll>
      </control>
      <control type="image" id="5675">
        <left>40</left>
        <top>-20</top>
        <height>200.8</height>
        <width>416</width>
        <aligny>top</aligny>
        <align>left</align>
        <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
      </control>
      <control type="group">
        <top>190</top>
        <left>50</left>
        <include>netflix_infoline</include>
      </control>
      <control type="button">
        <top>260</top>
        <left>50</left>
        <texturefocus colordiffuse="dimgrey">diffuse/landscape.png</texturefocus>
        <texturenofocus colordiffuse="dimgrey">diffuse/landscape.png</texturenofocus>
        <width>350</width>
        <height>70</height>
        <textoffsetx>15</textoffsetx>
        <align>left</align>
        <label>$LOCALIZE[31750] $INFO[ListItem.Season]</label> <!-- Season -->
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>font_tiny_bold</font>
        <visible>!Control.IsVisible(504)</visible>
      </control>
    </control>
  </include>
  <include name="Object_Home_Netflix_Mixed">
    <control type="group">
      <!-- Start alt layout -->
      <visible>![String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season)]</visible>
      <visible>Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222) | ControlGroup(330).HasFocus</visible>
      <include>Object_Home_Netflix_Alt</include>
    </control>
    <!--end alt layout-->
    <control type="group">
      <!-- start layout 2 -->
      <visible>String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season)</visible>
      <visible>Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222) | ControlGroup(330).HasFocus</visible>
      <include>Object_Home_Netflix</include>
    </control>
    <!-- End layout 2-->
  </include>
  <include name="Spotlight_Movies_Info">
    <control type="group">
      <width>1920</width>
      <height>1080</height>
      <visible>Control.IsVisible(1506)</visible>
      <control type="group">
        <animation effect="slide" end="0,100" time="0" condition="!Skin.HasSetting(DisableAuraHomeLayout) + Skin.HasSetting(DisableMenuHor)">Conditional</animation>
        <animation effect="slide" end="-40,50" time="10" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
        <animation effect="slide" end="-20,10" time="10" condition=" !Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableMenuVertIcon)">Conditional</animation>
        <control type="image" id="59445">
          <top>40</top>
          <left>150</left>
          <height min="60" max="218">auto</height>
          <width>510</width>
          <aligny>top</aligny>
          <align>left</align>
          <aspectratio align="left" aligny="center">keep</aspectratio>
          <texture background="true">$VAR[Widget_ClearLogo_1506]</texture>
        </control>
        <control type="textbox">
          <visible>String.IsEmpty(Container(1506).ListItem.Art(clearlogo))</visible>
          <top>130</top>
          <left>140</left>
          <label>[B]$VAR[video_heading_1506][/B]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>font_heading</font>
          <width min="200" max="500">auto</width>
          <height min="30" max="115">auto</height>
          <align>center</align>
          <wrapmultiline>true</wrapmultiline>
          <scroll>true</scroll>
        </control>
        <!-- Episode Label  -->
        <control type="group">
          <top>260</top>
          <control type="label">
            <left>160</left>
            <height min="55" max="90">auto</height>
            <visible>String.IsEqual(Container(1506).ListItem.DBType,episode)</visible>
            <label fallback="19055">$VAR[home_simple_episode_1506]</label>
            <width>750</width>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <wrapmultiline>true</wrapmultiline>
            <font>font_medium_bold</font>
          </control>
          <!-- Aired -->
          <control type="label">
            <top>100</top>
            <left>160</left>
            <visible>String.IsEqual(Container(1506).ListItem.DBType,episode)</visible>
            <label fallback="19055">[I]Aired $INFO[Container(1506).ListItem.Premiered(DDD MMM yyyy)] on $INFO[Container(1506).ListItem.Studio][/I]</label>
            <height>30</height>
            <width>750</width>
            <textcolor>main_fg_100</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>font_small</font>
          </control>
        </control>
        <control type="textbox">
          <left>150</left>
          <top>260</top>
          <height min="50" max="95">auto</height>
          <label>$INFO[Container(1506).ListItem.Plot]</label>
          <align>left</align>
          <width>500</width>
          <textcolor>dimgrey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>widget_trakt_title</font>
          <autoscroll delay="10000" time="1500" repeat="10000">true</autoscroll>
          <visible>!String.IsEqual(Container(1506).ListItem.DBType,episode)</visible>
        </control>
        <control type="label">
          <height>5</height>
        </control>
      </control>
    </control>
  </include>
  <include name="Spotlight_Tvshows_Info">
    <control type="group">
      <width>1920</width>
      <height>1080</height>
      <visible>Control.IsVisible(1505)</visible>
      <control type="group">
        <animation effect="slide" end="0,100" time="0" condition="!Skin.HasSetting(DisableAuraHomeLayout) + Skin.HasSetting(DisableMenuHor)">Conditional</animation>
        <animation effect="slide" end="-40,50" time="10" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
        <animation effect="slide" end="-20,10" time="10" condition=" !Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableMenuVertIcon)">Conditional</animation>
        <control type="image" id="59445">
          <top>40</top>
          <left>150</left>
          <height min="60" max="218">auto</height>
          <width>510</width>
          <aligny>top</aligny>
          <align>left</align>
          <aspectratio align="left" aligny="center">keep</aspectratio>
          <texture background="true">$VAR[Widget_ClearLogo_1505]</texture>
        </control>
        <control type="textbox">
          <visible>String.IsEmpty(Container(1505).ListItem.Art(clearlogo))</visible>
          <top>130</top>
          <left>140</left>
          <label>[B]$VAR[video_heading_1505][/B]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>font_heading</font>
          <width min="200" max="500">auto</width>
          <height min="30" max="115">auto</height>
          <align>center</align>
          <wrapmultiline>true</wrapmultiline>
          <scroll>true</scroll>
        </control>
        <!-- Episode Label  -->
        <control type="group">
          <top>260</top>
          <control type="label">
            <left>160</left>
            <height min="55" max="90">auto</height>
            <visible>String.IsEqual(Container(1505).ListItem.DBType,episode)</visible>
            <label fallback="19055">$VAR[home_simple_episode_1505]</label>
            <width>750</width>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <wrapmultiline>true</wrapmultiline>
            <font>font_medium_bold</font>
          </control>
          <!-- Aired -->
          <control type="label">
            <top>100</top>
            <left>160</left>
            <visible>String.IsEqual(Container(1505).ListItem.DBType,episode)</visible>
            <label fallback="19055">[I]Aired $INFO[Container(1505).ListItem.Premiered(DDD MMM yyyy)] on $INFO[Container(1505).ListItem.Studio][/I]</label>
            <height>30</height>
            <width>750</width>
            <textcolor>main_fg_100</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>font_small</font>
          </control>
        </control>
        <control type="textbox">
          <left>150</left>
          <top>260</top>
          <height min="50" max="95">auto</height>
          <label>$INFO[Container(1505).ListItem.Plot]</label>
          <align>left</align>
          <width>500</width>
          <textcolor>dimgrey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>widget_trakt_title</font>
          <autoscroll delay="10000" time="1500" repeat="10000">true</autoscroll>
          <visible>!String.IsEqual(Container(1505).ListItem.DBType,episode)</visible>
        </control>
        <control type="label">
          <height>5</height>
        </control>
      </control>
    </control>
  </include>
  <include name="Spotlight_MultiWidget_TVShows_cast">
    <control type="group">
      <animation effect="slide" end="0,50" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <animation effect="slide" end="40,0" time="200" condition="!Skin.HasSetting(DisableMenuHor) + !Skin.HasSetting(DisableMenuVertLabelOnly) + !Skin.HasSetting(DisableMenuVertLabel) + [Control.HasFocus(300) | !Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="fade" start="0" end="100" time="400" condition="String.IsEqual(Window(Home).Property(SpotFocus),true) + Control.HasFocus(300)">Visible</animation>
      <visible>!String.IsEmpty(Container(1505).ListItem.Label) + Control.IsVisible(1505) + [String.IsEqual(Container(330).CurrentItem,1) | Control.HasFocus(1505) | Control.HasFocus(300) | Control.HasFocus(400) | Control.HasFocus(30222)]</visible>
      <animation effect="slide" start="0,0" end="0,80" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditonal</animation>
      <animation effect="fade" start="0" end="100" time="0">Hidden</animation>
      <animation effect="fade" start="100" end="0" time="0" condition="Container(7712).IsUpdating">Conditional</animation>
      <animation effect="fade" start="0" end="100" delay="700" time="400" tween="quadratic" reversible="false" condition="!String.IsEqual(Window(Home).Property(SpotFocus),true) + String.IsEqual(Container(330).CurrentItem,1)">Conditional</animation>
      <width>800</width>
      <control type="wraplist" id="7712">
        <focusposition>0</focusposition>
        <top>-280</top>
        <left>465</left>
        <width>800</width>
        <height>250</height>
        <onup>9001</onup>
        <ondown>SetFocus(800)</ondown>
        <orientation>horizontal</orientation>
        <autoscroll repeat="10000" time="5000" delay="5000">Control.HasFocus(30222) | String.IsEqual(Container(330).CurrentItem,1) | Control.HasFocus(1505)</autoscroll>
        <scrolltime easing="inout" tween="sine">300</scrolltime>
        <animation type="Conditional" condition="Control.HasFocus(1505)" reversible="false">
          <effect type="zoom" end="105" time="75" tween="sine" easing="out" center="auto" />
          <effect type="zoom" end="95.2380952" time="225" tween="sine" delay="100" easing="out" center="auto" />
        </animation>
        <itemlayout height="184.8" width="128.8">
          <control type="group">
            <left>30</left>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>113.28</width>
              <height>168.78</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Icon]</texture>
              <bordertexture colordiffuse="border_alpha">colors/black.png</bordertexture>
              <bordersize>4</bordersize>
            </control>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>109.76</width>
              <height>166.32</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png" colordiffuse="79000000">common/white.png</texture>
            </control>
          </control>
        </itemlayout>
        <focusedlayout height="214.8" width="128.8">
          <control type="group">
            <left>30</left>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>109.76</width>
              <height>166.32</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Icon]</texture>
              <bordertexture colordiffuse="border_alpha">colors/black.png</bordertexture>
              <bordersize>4</bordersize>
              <visible>!Control.HasFocus(7712)</visible>
            </control>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>109.76</width>
              <height>166.32</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png" colordiffuse="3000000">common/white.png</texture>
              <bordertexture colordiffuse="border_alpha">colors/black.png</bordertexture>
              <bordersize>4</bordersize>
              <visible>!Control.HasFocus(7712)</visible>
            </control>
            <control type="image">
              <left>-2</left>
              <top>3</top>
              <width>113.28</width>
              <height>168.78</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Icon]</texture>
              <bordertexture colordiffuse="$VAR[ColorHighlight]">common/white.png</bordertexture>
              <bordersize>6</bordersize>
              <visible>Control.HasFocus(7712)</visible>
            </control>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>109.76</width>
              <height>166.32</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png" colordiffuse="79000000">common/white.png</texture>
            </control>
            <control type="label">
              <left>0</left>
              <width>600</width>
              <height>20</height>
              <bottom>10</bottom>
              <font>font_small</font>
              <textcolor>dimgrey</textcolor>
              <label>[I][COLOR=grey]$INFO[ListItem.Label][/COLOR][/I]</label>
            </control>
          </control>
        </focusedlayout>
        <content limit="6" target="video">$VAR[Cast_Widget_Content_1505]</content>
      </control>
    </control>
    <control type="group">
      <animation effect="slide" start="0,0" end="0,110" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditonal</animation>
      <include content="Object_Studio_Logo_Multi_Widget" condition="!Skin.HasSetting(MonochromeFlags)">
        <param name="studiodirectory" value="coloured" />
      </include>
      <include content="Object_Studio_Logo_Multi_Widget" condition="Skin.HasSetting(MonochromeFlags)">
        <param name="studiodirectory" value="white" />
      </include>
    </control>
  </include>
  <include name="Spotlight_MultiWidget_Movies_cast">
    <control type="group">
      <animation effect="slide" end="0,50" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <animation effect="slide" end="40,0" time="200" condition="!Skin.HasSetting(DisableMenuHor) + !Skin.HasSetting(DisableMenuVertLabelOnly) + !Skin.HasSetting(DisableMenuVertLabel) + [Control.HasFocus(300) | !Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="fade" start="0" end="100" time="400" condition="!String.IsEqual(Window(Home).Property(SpotFocus),true) + Control.HasFocus(300)">Visible</animation>
      <animation type="Conditonal" condition="Control.HasFocus(1506)" reversible="false">
        <effect type="zoom" end="105" time="75" tween="sine" easing="out" center="auto" />
        <effect type="zoom" end="95.2380952" time="225" tween="sine" delay="100" easing="out" center="auto" />
      </animation>
      <visible>!String.IsEmpty(Container(1506).ListItem.Label) + Control.IsVisible(1506) + [Control.HasFocus(1506) | Control.HasFocus(300) | Control.HasFocus(401) | String.IsEqual(Container(330).CurrentItem,1) | Control.HasFocus(30222)]</visible>
      <animation effect="slide" start="0,0" end="0,80" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditonal</animation>
      <animation effect="fade" start="100" end="0" time="0" reversible="false" condition="Container(7711).IsUpdating">Conditional</animation>
      <animation effect="fade" start="0" end="100" delay="700" time="400" tween="quadratic" reversible="false" condition="!String.IsEqual(Window(Home).Property(SpotFocus),true) + String.IsEqual(Container(330).CurrentItem,1)">Conditional</animation>
      <control type="wraplist" id="7711">
        <focusposition>0</focusposition>
        <top>-280</top>
        <left>465</left>
        <width>800</width>
        <height>250</height>
        <onup>9001</onup>
        <ondown>SetFocus(800)</ondown>
        <orientation>horizontal</orientation>
        <autoscroll repeat="10000" time="5000" delay="5000">Control.HasFocus(30222) | Control.HasFocus(1506) | String.IsEqual(Container(330).CurrentItem,1)</autoscroll>
        <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=person&amp;query=$INFO[Container(7711).ListItem.Label],call_auto=1190,prevent_del,delay=0.35)</onclick>
        <itemlayout height="184.8" width="128.8">
          <control type="group">
            <left>30</left>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>113.28</width>
              <height>168.78</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Icon]</texture>
              <bordertexture colordiffuse="border_alpha">colors/black.png</bordertexture>
              <bordersize>4</bordersize>
            </control>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>109.76</width>
              <height>166.32</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png" colordiffuse="79000000">common/white.png</texture>
            </control>
          </control>
        </itemlayout>
        <focusedlayout height="214.8" width="128.8">
          <control type="group">
            <left>30</left>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>109.76</width>
              <height>166.32</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Icon]</texture>
              <bordertexture colordiffuse="border_alpha">colors/black.png</bordertexture>
              <bordersize>4</bordersize>
              <visible>!Control.HasFocus(7711)</visible>
            </control>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>109.76</width>
              <height>166.32</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png" colordiffuse="3000000">common/white.png</texture>
              <bordertexture colordiffuse="border_alpha">colors/black.png</bordertexture>
              <bordersize>4</bordersize>
              <visible>!Control.HasFocus(7711)</visible>
            </control>
            <control type="image">
              <left>-2</left>
              <top>3</top>
              <width>113.28</width>
              <height>168.78</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Icon]</texture>
              <bordertexture colordiffuse="$VAR[ColorHighlight]">common/white.png</bordertexture>
              <bordersize>6</bordersize>
              <visible>Control.HasFocus(7711)</visible>
            </control>
            <control type="image">
              <left>0</left>
              <top>5</top>
              <width>109.76</width>
              <height>166.32</height>
              <aspectratio align="center" aligny="center">scale</aspectratio>
              <texture background="true" fallback="DefaultActorSolid.png" colordiffuse="79000000">common/white.png</texture>
            </control>
            <control type="label">
              <left>0</left>
              <width>500</width>
              <height>20</height>
              <bottom>10</bottom>
              <font>font_small</font>
              <textcolor>dimgrey</textcolor>
              <label>[I][B]$INFO[ListItem.Label][/B][/I]</label>
            </control>
          </control>
        </focusedlayout>
        <content limit="6" target="video">$VAR[Cast_Widget_Content_1506]</content>
      </control>
    </control>
    <control type="group">
      <animation effect="slide" start="0,0" end="0,110" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditonal</animation>
      <include content="Object_Studio_Logo_Multi_Widget" condition="!Skin.HasSetting(MonochromeFlags)">
        <param name="studiodirectory" value="coloured" />
      </include>
      <include content="Object_Studio_Logo_Multi_Widget" condition="Skin.HasSetting(MonochromeFlags)">
        <param name="studiodirectory" value="white" />
      </include>
    </control>
  </include>
  <include name="Spotlight_MultiWidget">
    <param name="id" default="" />
    <param name="content" default="" />
    <param name="type" default="" />
    <param name="visible" default="" />
    <definition>
      <control type="group" id="2$PARAM[id]">
        <animation effect="slide" end="0,20" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
        <animation effect="slide" end="40,0" time="200" condition="!Skin.HasSetting(DisableMenuHor) + !Skin.HasSetting(DisableMenuVertLabelOnly) + !Skin.HasSetting(DisableMenuVertLabel) + [Control.HasFocus(300) | !Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
        <visible>String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),$PARAM[type])</visible>
        <visible>Container($PARAM[id]).IsUpdating + !Integer.IsGreater(Container($PARAM[id]).NumItems,0)</visible>
        <control type="group">
          <top>-660</top>
          <left>10</left>
          <control type="image">
            <width>1810</width>
            <height>620</height>
            <bordersize>1</bordersize>
            <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
          </control>
        </control>
        <control type="group">
          <height>40</height>
          <top>-400</top>
          <left>-400</left>
          <include content="Defs_BusySpinner">
            <param name="label" value="$LOCALIZE[31138]..." />
          </include>
        </control>
      </control>

      <control type="wraplist" id="$PARAM[id]">
        <onfocus>SetProperty(SpotFocus,true,Home)</onfocus>
        <animation effect="slide" end="0,20" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
        <animation effect="slide" end="40,0" time="200" condition="!Skin.HasSetting(DisableMenuHor) + !Skin.HasSetting(DisableMenuVertLabelOnly) + !Skin.HasSetting(DisableMenuVertLabel) + [Control.HasFocus(300) | !Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
        <visible>$PARAM[visible]</visible>
        <orientation>horizontal</orientation>
        <onclick condition="[String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie) | Container.Content(movies) | Container.Content(tvshows)]">Action(Info)</onclick>
        <top>-660</top>
        <width>1900</width>
        <height>620</height>
        <preloaditems>2</preloaditems>
        <autoscroll time="43000">Control.IsVisible($PARAM[id]) + Control.HasFocus(300) | Control.HasFocus(401) | Control.HasFocus(400) | Control.HasFocus(30222) | ControlGroup(505).HasFocus</autoscroll>
        <scrolltime>500</scrolltime>
        <onup>300</onup>
        <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget) + !$EXP[noSubMenu]">30222</ondown>
        <ondown condition="!Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">30222</ondown>
        <ondown condition="Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">330</ondown>
        <movement>1</movement>
        <include content="Widget_Common">
          <param name="top" value="$PARAM[top]" />
          <param name="height" value="$PARAM[height]" />
          <param name="id" value="$PARAM[id]" />
          <param name="aspect" value="$PARAM[aspect]" />
          <param name="widgetAspect" value="$PARAM[widgetAspect]" />
          <param name="submenu" value="$PARAM[submenu]" />
        </include>
        <itemlayout width="385" height="620">
          <control type="group">
            <left>-25</left>
            <right>10</right>
            <top>0</top>
            <bottom>-0</bottom>
            <include>Defs_PosterBack</include>
            <control type="group">
              <top>10</top>
              <right>10</right>
              <bottom>10</bottom>
              <left>10</left>
              <control type="image">
                <texture background="true" diffuse="diffuse/widgetposter.png" fallback="DefaultFanartFallback.jpg">$VAR[Image_Poster]</texture>
                <aspectratio scalediffuse="false">scale</aspectratio>
              </control>
            </control>
            <include>View_WatchedOverlay</include>
            <control type="image">
              <bordersize>10</bordersize>
              <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
            </control>
          </control>
        </itemlayout>
        <focusedlayout width="1450" height="620">
          <control type="group">
            <scrolltime tween="linear">400</scrolltime>
            <left>-15</left>
            <right>20</right>
            <top>0</top>
            <bottom>-0</bottom>
            <include>Defs_PosterBack</include>
            <control type="group">
              <top>10</top>
              <right>10</right>
              <bottom>10</bottom>
              <left>10</left>
              <control type="group">
                <control type="image">
                  <width>100%</width>
                  <height>100%</height>
                  <texture colordiffuse="20000000" border="10" flipy="true">diffuse/landscape.png</texture>
                </control>

                <control type="image">
                  <width>100%</width>
                  <height>100%</height>
                  <texture colordiffuse="10FFFFFF" border="10" flipy="true">diffuse/landscape.png</texture>
	          <visible>Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixSubmenuBG)</visible>
                </control>

                <control type="group">
                  <height min="60" max="251">auto</height>
                  <animation effect="fade" time="0">VisibleChange</animation>
                  <control type="image">
                    <height>600</height>
                    <width>385</width>
                    <aligny>top</aligny>
                    <texture background="true">$VAR[Image_Poster]</texture>
                  </control>
                </control>
                <control type="group">
                  <height min="100" max="595">auto</height>
                  <left>40</left>
                  <control type="group">
                    <top>250</top>
                    <left>400</left>
                    <control type="group">
                      <top>-230</top>
                      <control type="label">
                        <width>700</width>
                        <height>30</height>
                        <font>font_small</font>
                        <textcolor>dimgrey</textcolor>
                        <label>$VAR[Label_Genre]</label>
                        <scroll>false</scroll>
                      </control>
                      <control type="label">
                        <top>30</top>
                        <height>60</height>
                        <width>935</width>
                        <font>font_xlarge_bold</font>
                        <textcolor>grey</textcolor>
                        <label>$VAR[video_heading]</label>
                        <scroll>true</scroll>
                      </control>
                    </control>
                    <control type="group">
                      <width>200</width>
                      <left>-5</left>
                      <top>-150</top>
                      <include content="Object_StarRating">
                        <param name="height" value="50" />
                        <param name="width" value="50" />
                        <param name="rating_prop" value="Container(1505).ListItem.Rating" />
                      </include>
                      <visible>Control.IsVisible(1505)</visible>
                    </control>
                    <control type="group">
                      <width>200</width>
                      <left>-5</left>
                      <top>-150</top>
                      <include content="Object_StarRating">
                        <param name="height" value="50" />
                        <param name="width" value="50" />
                        <param name="rating_prop" value="Container(1506).ListItem.Rating" />
                      </include>
                      <visible>Control.IsVisible(1506)</visible>
                    </control>
                    <control type="label">
                      <top>-550</top>
                      <left>200</left>
                      <width>60</width>
                      <label>$INFO[Container($PARAM[id]).ListItem.Year]</label>
                      <textcolor>white</textcolor>
                      <font>font_tiny_bold</font>
                    </control>
                    <control type="image">
                      <top>-115</top>
                      <left>270</left>
                      <width>120</width>
                      <height>30</height>
                      <texture colordiffuse="dimgrey">flags/flag_box_rating_classic.png</texture>
                      <visible>!String.IsEmpty(Container(1505).ListItem.MPAA) | !String.IsEmpty(Container(1506).ListItem.MPAA)</visible>
                    </control>
                    <control type="label">
                      <top>-550</top>
                      <left>310</left>
                      <width>90</width>
                      <label>$INFO[Container($PARAM[id]).ListItem.MPAA]</label>
                      <textcolor>white</textcolor>
                      <font>font_tiny_bold</font>
                    </control>
                    <control type="group">
                      <visible>!String.IsEmpty(ListItem.Plot)</visible>
                      <top>-60</top>
                      <height min="20" max="170">auto</height>
                      <control type="textbox">
                        <label fallback="19055">$VAR[Label_Plot]</label>
                        <width>950</width>
                        <textcolor>dimgrey</textcolor>
                        <font>font_plotbox</font>
                        <autoscroll delay="10000" time="1500" repeat="10000">true</autoscroll>
                      </control>
                    </control>
                    <!-- end  -->
                  </control>
                </control>
              </control>
            </control>
            <control type="group">
              <visible>Control.HasFocus($PARAM[id])</visible>
              <control type="image">
                <texture colordiffuse="dimgrey" border="20">common/outline.png</texture>
                <top>4</top>
                <height>98%</height>
                <width>98%</width>
                <left>16</left>
              </control>
            </control>
          </control>
        </focusedlayout>
        <content target="videos" sortby="$VAR[spotlight_sortby]" sortorder="descending" limit="5">$PARAM[content]</content>
      </control>
      <control type="group">
        <animation effect="slide" start="0,0" end="0,20" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditonal</animation>
        <visible>Control.HasFocus(30222) | Control.HasFocus($PARAM[id]) | Control.HasFocus(300) | Control.HasFocus(400) | Control.HasFocus(401) | String.IsEqual(Container(330).CurrentItem,1)</visible>
        <include content="spotlight_buttons">
          <param name="id" value="$PARAM[id]" />
          <param name="visible" value="$PARAM[visible]" />
        </include>
      </control>
    </definition>
  </include>
  <include name="Spotlight_Tvshows_Widget">
    <control type="group">
      <control type="list" id="1505">
        <onfocus>SetProperty(SpotFocus,true,Home)</onfocus>
        <animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus(300)">Hidden</animation>
        <animation effect="fade" start="0" end="100" delay="200" time="600" condition="!Control.HasFocus(300)">Visible</animation>
        <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],Home)</onfocus>
        <autoscroll time="43000">Control.HasFocus(300) | Control.HasFocus(400) | Control.HasFocus(401) | Control.HasFocus(30222) | ControlGroup(505).HasFocus</autoscroll>
        <visible>[String.IsEqual(Container(330).CurrentItem,1) | Control.HasFocus(400) | Control.HasFocus(300) | Control.HasFocus(3022) | Control.HasFocus(30221) | Control.HasFocus(30222) | Control.HasFocus(1505) | ControlGroup(505).HasFocus] + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)</visible>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</visible>
        <defaultcontrol>4000</defaultcontrol>
        <orientation>horizontal</orientation>
        <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget) + !$EXP[noSubMenu]">30222</ondown>
        <ondown condition="!Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">30222</ondown>
        <ondown condition="Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">330</ondown>
        <onleft>300</onleft>
        <onup condition="">505</onup>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">Action(Info)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">ClearProperty(ShowSpotlightInfo,Home)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(SpotlightPlay))">Action(Select)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(SpotlightPlay))">ClearProperty(SpotlightPlay,Home)</onfocus>
        <onfocus condition="!Skin.HasSetting(DisableSpotlightAutoplay) + !Player.HasVideo">AlarmClock(trailer_delay,PlayMedia($INFO[Container(1505).ListItem.Trailer],false,1),00:04,silent)</onfocus>
        <onfocus condition="!Player.HasVideo + String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">SetProperty(trailer_trailerwillplaying,true,home)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo)) + !String.IsEqual(ListItem.DBTYPE,movie) + String.IsEmpty(Container.ListItem.DBID)">ActivateWindow(Videos,$ESCINFO[Container.ListItem.FileNameAndPath],return)</onfocus>
        <!--show buttons-->
        <onfocus>SetFocus(505)</onfocus>
        <itemlayout width="1980" height="1080"></itemlayout>
        <focusedlayout width="1980" height="1080"></focusedlayout>
        <content target="videos" sortby="$VAR[spotlight_sortby]" sortorder="descending" limit="5">$VAR[tvshowfullspotlightpath]</content>
      </control>
    </control>
  </include>
  <!-- Spotlight buttons @cartmandos -->
  <include name="Spotlight_Tvshows_buttons">
    <control type="grouplist" id="505">
      <animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus(300)">Hidden</animation>
      <animation effect="fade" start="0" end="100" delay="200" time="600" condition="!Control.HasFocus(300)">Visible</animation>
      <defaultcontrol>4000</defaultcontrol>
      <orientation>horizontal</orientation>
      <ondown condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</ondown>
      <ondown condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</ondown>
      <ondown condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</ondown>
      <ondown condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</ondown>
      <onright condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</onright>
      <onright condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</onright>
      <onright condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onright>
      <onright condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onright>
      <onleft condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</onleft>
      <onleft condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</onleft>
      <onleft condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onleft>
      <onleft condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onleft>
      <onback>300</onback>
      <onback condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</onback>
      <onback condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</onback>
      <onback condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onback>
      <onback condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onback>
      <onup condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</onup>
      <onup condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</onup>
      <onup condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onup>
      <onup condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onup>
      <onup condition="Skin.HasSetting(DisableMenuHor)">300</onup>
      <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget) + !$EXP[noSubMenu]">30222</ondown>
      <ondown condition="!Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">30222</ondown>
      <ondown condition="Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">330</ondown>
      <onright>Control.Move(1505,1)</onright>
      <onleft>300</onleft>
      <width>600</width>
      <height>80</height>
      <itemgap>0</itemgap>
      <visible>[Control.HasFocus(400) | Control.HasFocus(401) | Control.HasFocus(3022) | Control.HasFocus(300) | Control.HasFocus(30221) | Control.HasFocus(30222) | Control.HasFocus(1505) | ControlGroup(505).HasFocus | ControlGroup(330).HasFocus] + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetspotlighttype),TVShows) + Integer.IsGreater(Container(1505).NumItems,0)</visible>
      <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</visible>
      <animation effect="slide" end="-40,50" time="10" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <control type="radiobutton" id="5051">
        <!-- play -->
        <visible>Integer.IsGreater(Container(1505).NumItems,0)</visible>
        <description>Play</description>
        <width>250</width>
        <height>80</height>
        <label>[CAPITALIZE][B]$LOCALIZE[31714][/B][/CAPITALIZE]</label> <!-- Play -->
        <align>center</align>
        <textcolor>grey</textcolor>
        <focusedcolor>black</focusedcolor>
        <texturefocus colordiffuse="d9ffffff" border="5">common/rounded-shadow8.png</texturefocus>
        <texturenofocus colordiffuse="darkgrey" border="5">common/rounded-shadow8.png</texturenofocus>
        <textureradioonfocus colordiffuse="black">netflix/play.png</textureradioonfocus>
        <textureradioofffocus colordiffuse="black">netflix/play.png</textureradioofffocus>
        <textureradioonnofocus colordiffuse="white">netflix/play.png</textureradioonnofocus>
        <textureradiooffnofocus colordiffuse="white">netflix/play.png</textureradiooffnofocus>
        <radioposx>45</radioposx>
        <radiowidth>25</radiowidth>
        <radioheight>35</radioheight>
        <font>Reg28</font>
        <!--                    <onclick>PlayMedia($ESCINFO[Container(1505).ListItem.FileNameAndPath])</onclick> -->
        <onclick>SetProperty(SpotlightPlay,1,Home)</onclick>
        <onclick>SetFocus(1505)</onclick>
      </control>
      <control type="button" id="5052">
        <!-- more info -->
        <visible>Integer.IsGreater(Container(1505).NumItems,0)</visible>
        <description>Info</description>
        <width>280</width>
        <height>80</height>
        <align>center</align>
        <label>[B]$LOCALIZE[31715][/B]</label> <!-- More Info -->
        <textcolor>white</textcolor>
        <focusedcolor>black</focusedcolor>
        <texturefocus colordiffuse="d9ffffff" border="5">common/rounded-shadow8.png</texturefocus>
        <texturenofocus colordiffuse="darkgrey" border="5">common/rounded-shadow8.png</texturenofocus>
        <font>Reg28</font>
        <onclick>SetProperty(ShowSpotlightInfo,1,Home)</onclick>
        <onclick>close</onclick>
        <onclick>SetFocus(1505)</onclick>
      </control>
    </control>
  </include>
  <include name="Spotlight_Movies_Widget">
    <control type="group">
      <control type="list" id="1506">
        <onfocus>SetProperty(SpotFocus,true,Home)</onfocus>
        <animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus(300)">Hidden</animation>
        <animation effect="fade" start="0" end="100" delay="200" time="600" condition="!Control.HasFocus(300)">Visible</animation>
        <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],Home)</onfocus>
        <autoscroll time="43000">Control.HasFocus(300) | Control.HasFocus(400) | Control.HasFocus(401) | Control.HasFocus(30222) | ControlGroup(505).HasFocus</autoscroll>
        <visible>[String.IsEqual(Container(330).CurrentItem,1) | Control.HasFocus(401) | Control.HasFocus(300) | Control.HasFocus(3022) | Control.HasFocus(30221) | Control.HasFocus(30222) | Control.HasFocus(1506) | ControlGroup(506).HasFocus] + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)</visible>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</visible>
        <defaultcontrol>4000</defaultcontrol>
        <orientation>horizontal</orientation>
        <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget) + !$EXP[noSubMenu]">30222</ondown>
        <ondown condition="!Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">30222</ondown>
        <ondown condition="Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">330</ondown>
        <onleft>300</onleft>
        <onup>505</onup>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">Action(Info)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">ClearProperty(ShowSpotlightInfo,Home)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(SpotlightPlay))">Action(Select)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(SpotlightPlay))">ClearProperty(SpotlightPlay,Home)</onfocus>
        <onfocus condition="!Skin.HasSetting(DisableSpotlightAutoplay) + !Player.HasVideo">AlarmClock(trailer_delay,PlayMedia($INFO[Container(1506).ListItem.Trailer],false,1),00:04,silent)</onfocus>
        <onfocus condition="!Player.HasVideo + String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">SetProperty(trailer_trailerwillplaying,true,home)</onfocus>
        <!--        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo)) + !String.IsEqual(ListItem.DBTYPE,movie) + String.IsEmpty(Container.ListItem.DBID)">ActivateWindow(Videos,$ESCINFO[Container.ListItem.FileNameAndPath],return)</onfocus> -->
        <!--show buttons-->
        <onfocus>SetFocus(506)</onfocus>
        <itemlayout width="1980" height="1080"></itemlayout>
        <focusedlayout width="1980" height="1080"></focusedlayout>
        <content target="videos" sortby="$VAR[spotlight_sortby]" sortorder="descending" limit="5">$VAR[moviefullspotlightpath]</content>
      </control>
    </control>
  </include>
  <!-- TV Next Aired Spotlight -->
  <include name="Spotlight_TVNextAired_AuraWidget">
    <control type="group">
      <visible>$EXP[NextUpTVSpotlight]</visible>
      <animation effect="slide" end="40,0" time="200" condition="!Skin.HasSetting(DisableMenuHor) + !Skin.HasSetting(DisableMenuVertLabelOnly) + !Skin.HasSetting(DisableMenuVertLabel) + [Control.HasFocus(300) | !Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <control type="label">
        <left>70</left>
        <top>-50</top>
        <label>[B]$LOCALIZE[31716][/B]</label> <!-- My TV Calendar -->
        <height>40</height>
        <width>350</width>
        <align>left</align>
        <aligny>top</aligny>
        <textcolor>white</textcolor>
        <font>font_heading_top</font>
        <visible>!Skin.HasSetting(DisableMenuHor)</visible>
      </control>
      <top>-330</top>
      <width>1920</width>
      <height>190</height>
      <onup>300</onup>
      <onup condition="Window.IsVisible(Custom_Hub_Media.xml)">54</onup>
      <ondown condition="Window.IsVisible(Custom_Hub_Media.xml)">5412</ondown>
      <control type="button" id="41507">
        <onfocus condition="String.Contains(System.Date,Monday)">SetFocus(10)</onfocus>
        <onfocus condition="String.Contains(System.Date,Tuesday)">SetFocus(11)</onfocus>
        <onfocus condition="String.Contains(System.Date,Wednesday)">SetFocus(12)</onfocus>
        <onfocus condition="String.Contains(System.Date,Thursday)">SetFocus(13)</onfocus>
        <onfocus condition="String.Contains(System.Date,Friday)">SetFocus(14)</onfocus>
        <onfocus condition="String.Contains(System.Date,Saturday)">SetFocus(15)</onfocus>
        <onfocus condition="String.Contains(System.Date,Sunday)">SetFocus(16)</onfocus>
      </control>
      <control type="group" id="31507">
        <control type="image">
          <left>60</left>
          <width>1820</width>
          <height>370</height>
          <texture background="true" border="7">windows/home/tile.png</texture>
        </control>
      </control>
      <control type="grouplist" id="1507">
        <onfocus>SetProperty(SpotFocus,true,Home)</onfocus>
        <scrolltime>500</scrolltime>
        <orientation>horizontal</orientation>
        <width>1780</width>
        <height>350</height>
        <left>60</left>
        <itemgap>20</itemgap>
        <onup>300</onup>
        <onup condition="Window.IsVisible(Custom_Hub_Media.xml)">54</onup>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="10" />
          <param name="day" value="Monday" />
          <param name="dayshort" value="Mon" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="11" />
          <param name="day" value="Tuesday" />
          <param name="dayshort" value="Tue" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="12" />
          <param name="day" value="Wednesday" />
          <param name="dayshort" value="Wed" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="13" />
          <param name="day" value="Thursday" />
          <param name="dayshort" value="Thu" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="14" />
          <param name="day" value="Friday" />
          <param name="dayshort" value="Fri" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="15" />
          <param name="day" value="Saturday" />
          <param name="dayshort" value="Sat" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="16" />
          <param name="day" value="Sunday" />
          <param name="dayshort" value="Sun" />
        </include>
      </control>
    </control>
  </include>

  <include name="Spotlight_AuraWidget_info">
    <param name="id" default="" />
    <param name="content" default="" />
    <param name="type" default="" />
    <param name="visible" default="" />
    <param name="label" default="" />
    <param name="detailsid" default="" />
    <definition>
     <control type="group">
        <animation effect="slide" end="40,0" time="200" condition="!Skin.HasSetting(DisableMenuHor) + !Skin.HasSetting(DisableMenuVertLabelOnly) + !Skin.HasSetting(DisableMenuVertLabel) + [Control.HasFocus(300) | !Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
       <animation effect="slide" end="0,100" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <top>-600</top>
      <left>30</left>
      <include content="addon_view_infospotlight">
        <param name="id" value="$PARAM[id]" />
        <param name="detailsid" value="$PARAM[detailsid]" />
      </include>
    <control type="image">
      <width>120</width>
      <height>120</height>
      <top>170</top>
      <left>-110</left>
      <texture background="true" colordiffuse="white">netflix/left-arrow.png</texture>
      <visible>Container($PARAM[id]).HasPrevious + Control.HasFocus($PARAM[id])</visible>
    </control>
    <control type="image">
      <width>120</width>
      <height>120</height>
      <top>170</top>
      <left>1760</left>
      <texture flipx="true" background="true" colordiffuse="white">netflix/left-arrow.png</texture>
      <visible>Control.HasFocus($PARAM[id])</visible>
    </control>
	<visible>Control.IsVisible($PARAM[id])</visible>
     </control>
    </definition>
  </include>

  <include name="Spotlight_AuraWidget">
    <param name="id" default="" />
    <param name="content" default="" />
    <param name="type" default="" />
    <param name="visible" default="" />
    <param name="label" default="" />
    <definition>
      <control type="group" id="2$PARAM[id]">
        <animation effect="slide" end="40,0" time="200" condition="!Skin.HasSetting(DisableMenuHor) + !Skin.HasSetting(DisableMenuVertLabelOnly) + !Skin.HasSetting(DisableMenuVertLabel) + [Control.HasFocus(300) | !Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,100" time="0" tween="quadratic" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
        <visible>String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),$PARAM[type])</visible>
        <visible>Container($PARAM[id]).IsUpdating + !Integer.IsGreater(Container($PARAM[id]).NumItems,0)</visible>
        <control type="group">
          <top>-660</top>
          <left>10</left>
          <control type="image">
            <width>1810</width>
            <height>620</height>
            <bordersize>1</bordersize>
            <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
          </control>
        </control>
        <control type="group">
          <height>40</height>
          <top>-400</top>
          <left>-400</left>
          <include content="Defs_BusySpinner">
            <param name="label" value="$LOCALIZE[31138]..." />
          </include>
        </control>
      </control>
      <control type="list" id="$PARAM[id]">
        <onfocus>SetProperty(SpotFocus,true,Home)</onfocus>
        <animation effect="slide" end="40,0" time="200" condition="!Skin.HasSetting(DisableMenuHor) + !Skin.HasSetting(DisableMenuVertLabelOnly) + !Skin.HasSetting(DisableMenuVertLabel) + [Control.HasFocus(300) | !Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,100" time="0" tween="quadratic" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
        <animation effect="fade" start="0" end="100" time="300" condition="!Control.HasFocus(300)">Visible</animation>
        <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],Home)</onfocus>
        <scrolltime tween="sine" easing="out">0</scrolltime>
        <autoscroll time="15000">Control.IsVisible($PARAM[id]) + Control.HasFocus(300) | Control.HasFocus(401) | Control.HasFocus(400) | Control.HasFocus(30222) | ControlGroup(505).HasFocus</autoscroll>
        <visible>String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),$PARAM[type])</visible>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</visible>
        <defaultcontrol>4000</defaultcontrol>
        <orientation>horizontal</orientation>
        <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget) + !$EXP[noSubMenu]">30222</ondown>
        <ondown condition="!Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">30222</ondown>
        <ondown condition="Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">330</ondown>
        <onup>300</onup>
	<onback>300</onback>
        <onleft>300</onleft>
        <height>620</height>
        <top>-660</top>
        <left>10</left>
        <onclick condition="!Skin.HasSetting(EnableShowInfo) + [[String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(ShowInfo.Episodes)] | [String.IsEqual(ListItem.DBType,tvshow) + !Skin.HasSetting(ShowInfo.TV)] | [String.IsEqual(ListItem.DBType,movie) + !Skin.HasSetting(ShowInfo.Movies)]]">Action(Info)</onclick>
        <itemlayout width="1750" height="620"></itemlayout>
        <focusedlayout width="1810" height="620">
          <control type="group">
            <control type="image">
              <width>100%</width>
              <height>100%</height>
              <texture background="true" colordiffuse="60000000">diffuse/landscape.png</texture>
            </control>
            <control type="image">
              <width>100%</width>
              <height>100%</height>
              <texture colordiffuse="10FFFFFF" border="10" flipy="true">diffuse/landscape.png</texture>
              <visible>Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixSubmenuBG)</visible>
            </control>
            <control type="image">
              <top>-1</top>
              <right>0</right>
              <width>1013.33</width>
              <height>618</height>
              <fadetime>1000</fadetime>
              <texture fallback="special://skin/extras/backgrounds/tv-shows-mainmenu-bg.jpg" background="true">$VAR[Spotlight_Fanart]</texture>
              <aspectratio>scale</aspectratio>
            </control>
            <control type="image">
              <top>-1</top>
              <right>0</right>
              <width>1013.33</width>
              <height>618</height>
              <texture background="true" colordiffuse="79000000">common/white.png</texture>
            </control>
         </control>
        </focusedlayout>
        <content target="videos" sortby="$VAR[spotlight_sortby]" limit="5">$PARAM[content]</content>
      </control>
      <control type="group">
        <top>5</top>
        <visible>Control.HasFocus(300) | Control.HasFocus(30222) | Control.HasFocus($PARAM[id]) | Control.HasFocus(400) | Control.HasFocus(401) | String.IsEqual(Container(330).CurrentItem,1)</visible>
        <animation effect="slide" end="0,100" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
        <include content="spotlight_buttons">
          <param name="id" value="$PARAM[id]" />
          <param name="visible" value="$PARAM[visible]" />
        </include>
      </control>
    </definition>
  </include>
  <!-- Spotlight buttons @cartmandos -->
  <include name="Spotlight_Movies_buttons">
    <control type="grouplist" id="506">
      <animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus(300)">Hidden</animation>
      <animation effect="fade" start="0" end="100" delay="200" time="600" condition="!Control.HasFocus(300)">Visible</animation>
      <defaultcontrol>4000</defaultcontrol>
      <orientation>horizontal</orientation>
      <ondown condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</ondown>
      <ondown condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</ondown>
      <ondown condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</ondown>
      <ondown condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</ondown>
      <onright condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</onright>
      <onright condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</onright>
      <onright condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onright>
      <onright condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onright>
      <onleft condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</onleft>
      <onleft condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</onleft>
      <onleft condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onleft>
      <onleft condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onleft>
      <onback>300</onback>
      <onback condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</onback>
      <onback condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</onback>
      <onback condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onback>
      <onback condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onback>
      <onup condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">PlayerControl(Stop)</onup>
      <onup condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo">ClearProperty(TrailerPlaying)</onup>
      <onup condition="!Skin.HasSetting(DisableSpotlightAutoplay) + Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onup>
      <onup condition="!Skin.HasSetting(DisableSpotlightAutoplay) + System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onup>
      <onup condition="Skin.HasSetting(DisableMenuHor)">300</onup>
      <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget) + !$EXP[noSubMenu]">30222</ondown>
      <ondown condition="!Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">30222</ondown>
      <ondown condition="Skin.HasSetting(HideSubmenuWidget) + [Skin.HasSetting(DisableNetflixCatWidget) | $EXP[noSubMenu]]">330</ondown>
      <onright>Control.Move(1506,1)</onright>
      <onleft>300</onleft>
      <width>600</width>
      <height>80</height>
      <itemgap>0</itemgap>
      <visible>[String.IsEqual(Container(330).CurrentItem,1) | Control.HasFocus(3022) | Control.HasFocus(30221) | Control.HasFocus(300) | Control.HasFocus(30222) | Control.HasFocus(1506) | ControlGroup(506).HasFocus] + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies) + Integer.IsGreater(Container(1506).NumItems,0)</visible>
      <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</visible>
      <animation effect="slide" end="-40,50" time="10" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <control type="radiobutton" id="5061">
        <!-- play -->
        <visible>Integer.IsGreater(Container(1506).NumItems,0)</visible>
        <description>Play</description>
        <width>250</width>
        <height>80</height>
        <label>[CAPITALIZE][B]$LOCALIZE[31714][/B][/CAPITALIZE]</label> <!-- Play -->
        <align>center</align>
        <textcolor>grey</textcolor>
        <focusedcolor>black</focusedcolor>
        <texturefocus colordiffuse="d9ffffff" border="5">common/rounded-shadow8.png</texturefocus>
        <texturenofocus colordiffuse="darkgrey" border="5">common/rounded-shadow8.png</texturenofocus>
        <textureradioonfocus colordiffuse="black">netflix/play.png</textureradioonfocus>
        <textureradioofffocus colordiffuse="black">netflix/play.png</textureradioofffocus>
        <textureradioonnofocus colordiffuse="white">netflix/play.png</textureradioonnofocus>
        <textureradiooffnofocus colordiffuse="white">netflix/play.png</textureradiooffnofocus>
        <radioposx>45</radioposx>
        <radiowidth>25</radiowidth>
        <radioheight>35</radioheight>
        <font>Reg28</font>
        <!--                    <onclick condition="!String.IsEmpty(ListItem.DBID)">PlayMedia($ESCINFO[Container(1506).ListItem.FileNameAndPath])</onclick> -->
        <onclick>SetProperty(SpotlightPlay,1,Home)</onclick>
        <onclick>SetFocus(1506)</onclick>
      </control>
      <control type="button" id="5062">
        <!-- more info -->
        <visible>Integer.IsGreater(Container(1506).NumItems,0)</visible>
        <description>Info</description>
        <width>280</width>
        <height>80</height>
        <align>center</align>
        <label>[B]$LOCALIZE[31715][/B]</label> <!-- More Info -->
        <textcolor>white</textcolor>
        <focusedcolor>black</focusedcolor>
        <texturefocus colordiffuse="d9ffffff" border="5">common/rounded-shadow8.png</texturefocus>
        <texturenofocus colordiffuse="darkgrey" border="5">common/rounded-shadow8.png</texturenofocus>
        <font>Reg28</font>
        <onclick condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onclick>
        <onclick>SetProperty(ShowSpotlightInfo,1,Home)</onclick>
        <onclick>SetFocus(1506)</onclick>
      </control>
    </control>
  </include>
  <include name="Object_Home_Netflix_Alt">
    <visible>Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222) | ControlGroup(330).HasFocus</visible>
    <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</visible>
    <control type="group">
      <control type="group">
        <visible>Skin.HasSetting(DisableNetflixHomeAlt) | Skin.HasSetting(DisableNetflixHomeMixed)</visible>
        <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        <control type="group">
          <left>10</left>
          <right>0</right>
          <fadetime>2000</fadetime>
        </control>
      </control>
    </control>
    <control type="group">
      <animation effect="slide" end="-90,0" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + !Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="-90,0" condition="Skin.HasSetting(DisableNetflixSmallWidget) + !Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="-90,100" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="-90,50" condition="Skin.HasSetting(DisableNetflixSmallWidget) + Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="0,100" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + !Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="0,50" condition="Skin.HasSetting(DisableNetflixSmallWidget) + Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + !Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <top>30</top>
      <left>160</left>
      <!-- Clearlogo -->
      <control type="group">
        <control type="image" id="55445">
          <height min="60" max="251">auto</height>
          <width>520</width>
          <align>left</align>
          <aspectratio align="left" aligny="center">keep</aspectratio>
          <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(30222)</visible>
        </control>
        <!-- Fall back Title -->
        <control type="label">
          <top>180</top>
          <visible>[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)]</visible>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + Skin.HasSetting(DisableNetflixLowSpotlight) + String.IsEmpty(Control.GetLabel(55445))</visible>
          <label>[B]$VAR[video_heading][/B]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>font_heading</font>
          <width min="200" max="1200">auto</width>
          <height>30</height>
          <align>left</align>
          <align>center</align>
          <scroll>true</scroll>
        </control>
        <control type="label">
          <top>160</top>
          <visible>[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)]</visible>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Skin.HasSetting(DisableNetflixLowSpotlight) + String.IsEmpty(Control.GetLabel(55445))</visible>
          <label>[B]$VAR[video_heading][/B]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>font_heading</font>
          <width>550</width>
          <height>30</height>
          <align>left</align>
          <autoscroll>true</autoscroll>
          <scroll>true</scroll>
        </control>
        <control type="textbox">
          <top>190</top>
          <visible>![String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)]</visible>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + String.IsEmpty(Control.GetLabel(55445))</visible>
          <label>[B]$VAR[video_heading][/B]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>font_heading</font>
          <width min="200" max="1200">auto</width>
          <height min="30" max="110">auto</height>
          <align>left</align>
          <wrapmultiline>true</wrapmultiline>
          <autoscroll>true</autoscroll>
          <scroll>true</scroll>
        </control>
      </control>
      <!-- Addon Infoline -->
      <control type="image">
        <top>230</top>
        <width>100</width>
        <height>10</height>
        <texture background="true" colordiffuse="red">diffuse/landscape.png</texture>
        <visible>ControlGroup(330).HasFocus + String.IsEmpty(Control.GetLabel(55445)) + [String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie)]</visible>
      </control>
      <control type="label">
        <top>350</top>
        <height>30</height>
        <font>font_medium</font>
        <textcolor>red</textcolor>
        <label>$INFO[ListItem.Artist]</label>
        <visible>String.Contains(ListItem.FileNameAndPath,plugin.video.youtube)</visible>
      </control>
      <!-- Tagline, Plot, Infoline -->
      <control type="grouplist">
        <top>271</top>
        <height>550</height>
        <orientation>vertical</orientation>
        <!-- Episode Label  -->
        <control type="label">
          <left>40</left>
          <height>40</height>
          <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)</visible>
          <label>[B]$LOCALIZE[31717][/B]</label> <!-- Continue Watching -->
          <width>750</width>
          <textcolor>white</textcolor>
          <shadowcolor>black</shadowcolor>
          <wrapmultiline>true</wrapmultiline>
          <font>font_heading_small</font>
        </control>
        <control type="label">
          <left>40</left>
          <height>60</height>
          <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)</visible>
          <label fallback="19055">$VAR[home_simple_episode]</label>
          <width>750</width>
          <textcolor>white</textcolor>
          <shadowcolor>black</shadowcolor>
          <wrapmultiline>true</wrapmultiline>
          <font>font_medium_bold</font>
        </control>
        <!-- Aired -->
        <control type="group">
          <left>60</left>
          <height>50</height>
          <width>750</width>
          <visible>Integer.IsEqual(ListItem.PercentPlayed,0) + String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)</visible>
          <control type="label">
            <width>450</width>
            <label>$LOCALIZE[31789] $INFO[ListItem.Premiered(DDD MMM yyyy)] $LOCALIZE[31282]</label> <!-- Aired DAY on -->
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>font_small</font>
          </control>
          <control type="image" id="7878">
            <left>265</left>
            <top>0</top>
            <texture background="true" colordiffuse="grey">$INFO[ListItem.Studio,resource://resource.images.studios.white/,.png]</texture>
            <aspectratio>stretch</aspectratio>
            <height>54</height>
            <width>74</width>
          </control>
          <control type="label">
            <left>265</left>
            <label>$INFO[ListItem.Studio]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>font_small</font>
            <visible>String.IsEmpty(Control.GetLabel(7878))</visible>
          </control>
        </control>
        <control type="label">
          <height>20</height>
          <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo) + !Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
        </control>
        <control type="group">
          <visible>!Skin.HasSetting(EnableFullEpInfo) + String.IsEqual(ListItem.DBType,episode) + [Integer.IsGreater(ListItem.PercentPlayed,1) | Integer.IsGreater(Window(Home).Property(ListItem.PercentPlayed),1)]</visible>
          <top>10</top>
          <width>650</width>
          <height>30</height>
          <aligny>center</aligny>
          <control type="progress">
            <width>185</width>
            <height>11</height>
            <texturebg colordiffuse="cc515151" border="0">colors/color_white.png</texturebg>
            <lefttexture />
            <midtexture colordiffuse="red" border="4">colors/color_white.png</midtexture>
            <righttexture />
            <info>ListItem.PercentPlayed</info>
          </control>
          <control type="label">
            <top>-12</top>
            <left>200</left>
            <height>25</height>
            <width>450</width>
            <font>Netflix_Info_main</font>
            <textcolor>grey</textcolor>
            <label>$VAR[ListItemPercentRemained,,% $LOCALIZE[31783]]</label> <!-- remaining -->
          </control>
        </control>
        <!-- Plot Low spotlight -->
        <control type="textbox">
          <height min="50" max="122">auto</height>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001) + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | [String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(EnableFullEpInfo)]]</visible>
          <visible>Skin.HasSetting(DisableNetflixLowSpotlight)</visible>
          <label fallback="19055">$VAR[Label_OverlayPlot]</label>
          <width>1000</width>
          <textcolor>dimgrey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>widget_trakt_title</font>
          <autoscroll delay="5000" time="1500" repeat="5000">true</autoscroll>
        </control>
        <!-- Plot  -->
        <control type="textbox">
          <height min="50" max="122">auto</height>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001) + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | [String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(EnableFullEpInfo)]]</visible>
          <visible>!Skin.HasSetting(DisableNetflixLowSpotlight)</visible>
          <label fallback="19055">$VAR[Label_OverlayPlot]</label>
          <align>left</align>
          <width>500</width>
          <textcolor>dimgrey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>widget_trakt_title</font>
          <autoscroll delay="5000" time="1500" repeat="5000">true</autoscroll>
        </control>
        <control type="label">
          <height>5</height>
        </control>
        <!-- Info Spinner  -->
        <control type="group">
          <visible>!Skin.HasSetting(DisableNetflixLowSpotlight) + [[String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(EnableFullEpInfo)] | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)] + [!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)]</visible>
          <height>30</height>
          <control type="image">
            <width>70</width>
            <left>-10</left>
            <aspectratio>keep</aspectratio>
            <texture colordiffuse="FFFF0000">netflix/fact.png</texture>
          </control>
          <control type="label">
            <width>400</width>
            <left>70</left>
            <right>0</right>
            <label>$VAR[NetflixDetailsSpin]</label>
            <textcolor>dimgrey</textcolor>
            <font>font_tiny</font>
            <scroll>true</scroll>
          </control>
        </control>
        <!-- Info Spinner  Low Spotlight -->
        <control type="group">
          <visible>Skin.HasSetting(DisableNetflixLowSpotlight) + [[String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(EnableFullEpInfo)] | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)] + [!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)]</visible>
          <height>30</height>
          <control type="image">
            <width>70</width>
            <left>-10</left>
            <aspectratio>keep</aspectratio>
            <texture colordiffuse="FFFF0000">netflix/fact.png</texture>
          </control>
          <control type="label">
            <width>700</width>
            <left>70</left>
            <right>0</right>
            <label>$VAR[NetflixDetailsSpin]</label>
            <textcolor>dimgrey</textcolor>
            <font>font_tiny</font>
            <scroll>true</scroll>
          </control>
        </control>
      </control>
    </control>
  </include>
  <include name="Object_Home_Netflix">
    <visible>Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222) | ControlGroup(330).HasFocus | Window.IsActive(4010) | Window.IsActive(4020) | Window.IsActive(2111) | Window.IsActive(2112) | Window.IsActive(2113)| Window.IsActive(2114) | Window.IsActive(2115)| Window.IsActive(2116) | Window.IsActive(2117) | Window.IsActive(2118) | Window.IsVisible(MyVideoNav.xml)</visible>
    <control type="group">
    <animation type="WindowOpen" reversible="false">
      <effect type="fade" start="0" end="100" time="700" tween="linear" reversible="false" />
    </animation>
      <animation effect="slide" end="60,0" condition="!Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
      <animation effect="slide" end="60,0" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
      <animation effect="slide" end="-40,0" condition="Window.IsVisible(3810) | Window.IsVisible(3820)">Conditional</animation>
      <visible>![Skin.HasSetting(DisableNetflixSubmenuBG) + [Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222)]]</visible>
      <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</visible>
      <control type="group">
        <left>-60</left>
        <visible>Skin.HasSetting(DisableNetflixSubmenuBG) + [Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222)]</visible>
      </control>
      <control type="group">
        <control type="image">
          <left>-100</left>
          <width>100%</width>
          <height>100%</height>
          <texture background="true" colordiffuse="FF000000">common/white.png</texture>
          <visible>!Window.IsVisible(MyVideoNav.xml) + ![Skin.HasSetting(DisableNetflixSubmenuBG) + [Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222)]]</visible>
        </control>
        <control type="multiimage">
          <animation effect="slide" end="50,-10" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
          <animation effect="slide" end="20,0" condition="Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
          <visible>!Player.HasVideo + $EXP[DBTvideosImage]</visible>
          <width>1400</width>
          <height>700</height>
	  <left>500</left>
          <top>0</top>
          <aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
          <imagepath background="true" diffuse="Right Corner.png">$VAR[fanart_multi_fadelabel]</imagepath>
          <timeperimage>2000</timeperimage>
          <fadetime>2000</fadetime>
          <pauseatend>10000</pauseatend>
          <randomize>false</randomize>
          <loop>no</loop>
          <include>animation_image_zoom</include>
        </control>
<!--
    <control type="image">
      <animation effect="fade" start="100" end="0" time="400">Hidden</animation>
      <right>0</right>
      <width>100%</width>
      <height>100%</height>
      <texture background="true" flipx="true" colordiffuse="ff000000" border="15">overlay/gradient_overlay_info.png</texture>
      <visible>!Player.HasVideo + $EXP[DBTvideosImage]</visible>
    </control>
-->

        <control type="image">
          <animation effect="slide" end="50,-10" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
          <animation effect="slide" end="20,0" condition="Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
          <visible>[Window.IsVisible(Custom_Hub_TVNetflix.xml) | Window.IsVisible(Custom_Hub_MovieNetflix.xml)] + [Container($PARAM[id]).IsUpdating + !Integer.IsGreater(Container($PARAM[id]).NumItems,0)]</visible>
          <fadetime>500</fadetime>
          <width>1400</width>
          <height>600</height>
          <left>500</left>
          <top>0</top>
          <texture background="true" diffuse="Right Corner.png">$VAR[Image_MainMenu_fanart]</texture>
          <aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
        </control>
        <control type="image">
          <animation effect="slide" end="50,-10" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
          <visible>!Player.HasVideo + [$EXP[DBTother] | !String.IsEmpty(ListItem.ChannelName)] + [Window.IsVisible(Home) + [!Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(300) + !Control.HasFocus(3001)] | [Window.IsVisible(MyVideoNav.xml)]]</visible>
          <fadetime>100</fadetime>
          <width>1400</width>
          <height>800</height>
          <left>500</left>
          <top>0</top>
          <bottom>5</bottom>
          <texture background="true" diffuse="Right Corner.png">$VAR[Spotlight_Fanart]</texture>
          <aspectratio scalediffuse="false" aligny="top">keep</aspectratio>
        </control>
        <control type="image">
          <animation effect="slide" end="50,-10" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
          <visible>!Player.HasVideo + !String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + !Window.IsActive(4010) + !Window.IsActive(4020) + !Skin.HasSetting(DisableNetflixSubmenuBG) + [Control.HasFocus(300) | Control.HasFocus(3001) | Control.HasFocus(302) | Control.HasFocus(30222)]</visible>
          <fadetime>100</fadetime>
          <width>1400</width>
          <height>787</height>
          <left>500</left>
          <top>0</top>
          <bottom>5</bottom>
          <texture background="true" diffuse="Right Corner.png">$VAR[Image_MainMenu_fanart]</texture>
          <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
        </control>
      </control>
      <control type="group">
        <visible>[Window.IsVisible(Home) + [!Control.HasFocus(660) + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)]] | !Window.IsVisible(Home)</visible>
        <animation effect="slide" end="0,-30" condition="Skin.HasSetting(DisableNetflixSmallWidget)">Conditional</animation>
        <animation effect="slide" end="400,-10" time="500" condition="Window.IsActive(4010)">Conditional</animation>
        <animation effect="slide" end="400,-10" time="500" condition="Window.IsActive(4020)">Conditional</animation>
        <animation effect="slide" end="440,0" time="500" condition="Window.IsActive(3810) | Window.IsActive(3820)">Conditional</animation>
        <animation effect="slide" end="400,0" time="500" condition="Window.IsVisible(MyVideoNav.xml) | Window.IsActive(2111) | Window.IsActive(2112) | Window.IsActive(2113)| Window.IsActive(2114) | Window.IsActive(2115)| Window.IsActive(2116) | Window.IsActive(2117) | Window.IsActive(2118)">Conditional</animation>
        <top>590</top>
        <height>184</height>
        <right>480</right>
        <include content="Object_Ratings">
          <param name="directory" value="color" />
          <param name="align" value="right" />
          <param name="width" value="1400" />
          <param name="rottentomatoes" value="true" />
          <param name="imdbvotes" value="true" />
          <param name="usermeter" value="true" />
          <param name="imdb" value="true" />
          <param name="tmdb" value="true" />
          <param name="tvdb" value="true" />
          <param name="metacritic" value="true" />
          <param name="oscars" value="true" />
          <param name="top250" value="false" />
          <param name="plot" value="false" />
          <param name="studio" value="true" />
          <param name="studioid" value="90675" />
        </include>
      </control>
      <control type="group">
        <visible>!Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + !Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
        <!-- Start Video Window -->
        <control type="group">
          <!-- trailer window -->
          <animation effect="slide" start="0,0" end="-300,-90" time="0" condition="Window.IsVisible(Home)">Conditional</animation>
          <include content="Netflix_Trailer">
            <param name="top" value="0" />
            <param name="right" value="0" />
            <param name="height" value="730" />
            <param name="width" value="1400" />
            <param name="visible" value="Player.HasVideo" />
          </include>
<!--
          <animation effect="slide" start="0" end="100,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)" reversible="true">Conditional</animation>
          <animation effect="slide" start="0" end="0,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,2.20)">Conditional</animation>
          <animation effect="slide" start="0" end="200,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,1.33)">Conditional</animation>
          <animation effect="slide" start="0" end="95,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,1.78)">Conditional</animation>
          <animation effect="slide" start="0" end="285,0" time="0" condition="Integer.IsLessOrEqual(VideoPlayer.VideoAspect,0.00)">Conditional</animation>
          <visible>Player.HasVideo</visible>
          <left>250</left>
          <width>1600</width>
          <height>640</height>
          <top>10</top>
          <bottom>5</bottom>
          <control type="videowindow">
            <width>100%</width>
            <height>100%</height>
          </control>
          <control type="image">
            <animation effect="slide" start="0" end="100,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,1.78)">Conditional</animation>
            <animation effect="slide" start="0" end="225,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,0.00)">Conditional</animation>
            <animation effect="slide" start="0" end="-30,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,2.20)">Conditional</animation>
            <animation effect="slide" start="0" end="-70,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,1.85)">Conditional</animation>
            <animation effect="slide" start="0" end="-30,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,2.00)">Conditional</animation>
            <animation effect="slide" start="0" end="-120,0" time="0" condition="Player.HasVideo + Integer.IsLessOrEqual(VideoPlayer.VideoAspect,0)">Conditional</animation>
            <animation effect="slide" start="0" end="30,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)">Conditional</animation>
            <texture colordiffuse="ff000000" border="40">netflix/netflix_corner.png</texture>
          </control>
-->
        </control>
        <!-- End  Video Window -->
        <control type="grouplist" id="9000">
          <animation effect="slide" end="-50,0" condition="!Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
          <pagecontrol>9560</pagecontrol>
          <itemgap>0</itemgap>
          <left>view_pad</left>
          <right>view_pad</right>
          <orientation>vertical</orientation>
          <top>10</top>
          <!-- Add Clearlogo / Label -->
          <control type="image" id="55446">
            <left>0</left>
            <right>$PARAM[titleright]</right>
            <height>218</height>
            <width>563</width>
            <aligny>top</aligny>
            <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
            <animation effect="fade" start="0" end="100" time="500" condition="!String.IsEmpty(Control.GetLabel(55446))">Conditional</animation>
            <visible>[Window.IsVisible(Home) + [!Control.HasFocus(660) + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)]] | !Window.IsVisible(Home)</visible>
            <visible>!String.IsEmpty(Control.GetLabel(55446))</visible>
          </control>
<!--
          <control type="label">
            <height>30</height>
            <visible>String.IsEmpty(Control.GetLabel(55446))</visible>
          </control>
-->
          <control type="textbox">
            <visible>String.IsEmpty(Control.GetLabel(55446)) + [[Window.IsVisible(Home) + [!Control.HasFocus(660) + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)]] | !Window.IsVisible(Home)]</visible>
            <visible>$EXP[DBTvideos]</visible>
            <label>$VAR[video_heading]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>font_xlarge_bold</font>
            <width>730</width>
            <height min="218" max="218">auto</height>
            <align>left</align>
            <aligny>center</aligny>
            <wrapmultiline>true</wrapmultiline>
            <scroll>true</scroll>
          </control>
          <control type="label">
            <visible>String.IsEmpty(Control.GetLabel(55446)) + [[Window.IsVisible(Home) + [!Control.HasFocus(660) + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)]] | !Window.IsVisible(Home)]</visible>
            <visible>!$EXP[DBTvideos]</visible>
            <label>$VAR[video_heading]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>spotlight_heading_small</font>
            <width min="200" max="600">auto</width>
            <height>200</height>
            <align>left</align>
            <wrapmultiline>true</wrapmultiline>
          </control>
          <control type="label">
            <visible>!Window.IsVisible(Home) + Control.HasFocus(660)</visible>
            <font>font_heading</font>
            <label>$VAR[video_heading]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <width min="200" max="600">auto</width>
            <height>200</height>
            <align>left</align>
            <wrapmultiline>true</wrapmultiline>
          </control>
<!--
          <control type="label">
            <height>20</height>
            <visible>String.IsEmpty(Control.GetLabel(55446))</visible>
          </control>
-->
          <!-- Add Star Rating + Video info to spotlight -->
          <include>netflix_infoline</include>
          <!-- Episode Label  -->
          <control type="label">
            <height>40</height>
            <visible>[String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)]</visible>
          </control>
          <control type="label">
            <visible>[String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)]</visible>
            <left>00</left>
            <height>30</height>
            <label>[B]$LOCALIZE[31717][/B]</label> <!-- Continue Watching -->
            <width>750</width>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <wrapmultiline>true</wrapmultiline>
            <font>font_heading_small</font>
          </control>
          <control type="label">
            <left>0</left>
            <height>80</height>
            <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)</visible>
            <label fallback="19055">$VAR[home_simple_episode]</label>
            <width>750</width>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <wrapmultiline>true</wrapmultiline>
            <font>font_medium_bold</font>
          </control>
          <!-- Aired -->
          <control type="label">
            <left>0</left>
            <height>60</height>
            <visible>!Integer.IsGreater(ListItem.PercentPlayed,1) + String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)</visible>
            <label fallback="19055">[I]$LOCALIZE[31789] $INFO[ListItem.Premiered(DDD MMM yyyy)] $LOCALIZE[31282] $INFO[ListItem.Studio][/I]</label> <!-- Aired DATE on STUDIO -->
            <width>750</width>
            <textcolor>main_fg_100</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>font_small</font>
          </control>
          <control type="label">
            <height>20</height>
          </control>
          <control type="textbox">
            <visible>[Window.IsVisible(Home) + [!Control.HasFocus(660) + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)]] | !Window.IsVisible(Home)</visible>
            <visible>$EXP[DBTvideos] + !Skin.HasSetting(DisableNetflixView) + ![String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)]</visible>
            <height min="20" max="180">auto</height>
            <label fallback="19055">$VAR[Label_OverlayPlot]</label>
            <width>640</width>
            <aligny>top</aligny>
            <textcolor>dimgrey</textcolor>
            <font>widget_trakt_title</font>
            <autoscroll delay="5000" time="1500" repeat="5000">true</autoscroll>
          </control>
          <control type="label">
            <height>30</height>
          </control>
          <control type="group">
            <height>62</height>
            <control type="group">
              <visible>$EXP[DBTvideos]</visible>
              <visible>!Integer.IsGreater(ListItem.PercentPlayed,1) + !Skin.HasSetting(DisableNetflixView) + ![String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)]</visible>
              <width>600</width>
              <left>10</left>
              <right>0</right>
              <include>Details_Spinner</include>
              <textcolor>dimgrey</textcolor>
              <font>font_tiny</font>
            </control>
            <control type="label">
              <height>40</height>
              <visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
            </control>
            <control type="group">
              <visible>[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) ] + [Integer.IsGreater(ListItem.PercentPlayed,1) | Integer.IsGreater(Window(Home).Property(ListItem.PercentPlayed),1)]</visible>
              <top>10</top>
              <width>650</width>
              <height>30</height>
              <aligny>center</aligny>
              <control type="progress">
                <width>185</width>
                <height>11</height>
                <texturebg colordiffuse="cc515151" border="0">colors/color_white.png</texturebg>
                <lefttexture />
                <midtexture colordiffuse="red" border="4">colors/color_white.png</midtexture>
                <righttexture />
                <info>ListItem.PercentPlayed</info>
              </control>
              <control type="label">
                <top>-12</top>
                <left>200</left>
                <height>25</height>
                <width>450</width>
                <font>Netflix_Info_main</font>
                <textcolor>grey</textcolor>
                <label>$VAR[ListItemPercentRemained,,% $LOCALIZE[31783]]</label> <!-- remaining -->
              </control>
            </control>
          </control>
        </control>
      </control>
    </control>
  </include>

  <include name="addon_view_infospotlight">
    <param name="id" default="" />
    <param name="detailsid" default="" />
    <definition>
      <control type="group">
        <control type="group">
          <top>520</top>
          <right>100</right>
          <width>$PARAM[width]</width>
          <height>184</height>
          <animation effect="slide" end="80,0" time="0" condition="[[String.IsEmpty(ListItem.Studio) + !String.Contains(ListItem.Studio,/)] | Control.IsVisible(1505)  | Control.IsVisible(1506)]">Conditional</animation>
          <animation effect="slide" end="-450,-20" time="0" condition="Control.IsVisible(1505)">Conditional</animation>
          <animation effect="slide" end="-450,-20" time="0" condition="Control.IsVisible(1506)">Conditional</animation>
          <include content="Object_Ratings_Container" condition="Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(Home.xml) | Window.IsVisible(script-globalsearch.xml)">
            <param name="id" value="$PARAM[detailsid]" />
            <param name="directory" value="color" />
            <param name="align" value="right" />
            <param name="width" value="1400" />
            <param name="rottentomatoes" value="true" />
            <param name="imdbvotes" value="true" />
            <param name="usermeter" value="$PARAM[usermeter]" />
            <param name="imdb" value="true" />
            <param name="tmdb" value="true" />
            <param name="tvdb" value="true" />
            <param name="metacritic" value="true" />
            <param name="oscars" value="true" />
            <param name="top250" value="true" />
            <param name="plot" value="false" />
            <param name="studio" value="true" />
            <param name="studioid" value="1$PARAM[id]" />
          </include>
        </control>
        <control type="grouplist">
          <left>10</left>
          <top>-40</top>
          <orientation>vertical</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <control type="image" id="3$PARAM[id]">
            <height>218</height>
            <width>563</width>
            <texture background="true">$VAR[addon_view_infospotlight_clearlogo]</texture>
          </control>
          <control type="textbox">
            <visible>[String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode) | String.IsEqual(Container($PARAM[id]).ListItem.DBType,movie) | String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) | String.IsEqual(Container($PARAM[id]).ListItem.DBType,season) | String.IsEmpty(Container($PARAM[id]).ListItem.DBType,set) | !String.IsEmpty(Container($PARAM[id]).ListItem.ChannelName)] + String.IsEmpty(Control.GetLabel(3$PARAM[id]))</visible>
            <top>-220</top>
            <label>$VAR[video_heading5055]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>font_xlarge_bold</font>
            <width>730</width>
            <height min="218" max="218">auto</height>
            <align>left</align>
            <aligny>center</aligny>
            <wrapmultiline>true</wrapmultiline>
            <scroll>true</scroll>
          </control>
          <control type="label">
            <visible>![String.IsEqual(Container($PARAM[id]).ListItem.DBType,movie) | String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode) | String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) | String.IsEqual(Container($PARAM[id]).ListItem.DBType,season) | String.IsEmpty(Container($PARAM[id]).ListItem.DBType,set) | !String.IsEmpty(Container($PARAM[id]).ListItem.ChannelName)] + String.IsEmpty(Container($PARAM[id]).ListItem.Art(clearlogo))</visible>
            <top>-220</top>
            <label>$VAR[video_heading5055]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>spotlight_heading_small</font>
            <width min="200" max="600">auto</width>
            <height min="50" max="150">auto</height>
            <align>left</align>
            <wrapmultiline>true</wrapmultiline>
            <autoscroll>true</autoscroll>
            <scroll>true</scroll>
          </control>

          <control type="grouplist">
            <height>60</height>
            <orientation>horizontal</orientation>
            <usecontrolcoords>true</usecontrolcoords>
            <itemgap>5</itemgap>
            <left>0</left>
            <right>$PARAM[titleright]</right>
            <control type="group">
              <width>200</width>
              <left>-5</left>
              <top>-20</top>
              <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Rating)</visible>
              <visible>!Skin.HasSetting(DisableStarRating)</visible>
              <include content="Object_StarRating">
                <param name="height" value="50" />
                <param name="width" value="50" />
                <param name="rating_prop" value="Container($PARAM[id]).ListItem.Rating" />
              </include>
            </control>
            <control type="label" id="4$PARAM[id]">
          	<left>-10</left>
          	<width>140</width>
          	<label>$VAR[liked_percent_container]</label>
          	<textcolor>green</textcolor>
          	<align>center</align>
          	<font>font_tiny_bold</font>
          	<visible>Skin.HasSetting(DisableLiked) + !String.IsEmpty(Control.GetLabel(4$PARAM[id]))</visible>
            </control>
            <control type="group">
              <width>500</width>
              <control type="grouplist">
                <orientation>horizontal</orientation>
                <itemgap>10</itemgap>
                <!-- Year -->
                <control type="label">
                  <width>60</width>
                  <label>$INFO[Container($PARAM[id]).ListItem.Year]</label>
                  <textcolor>white</textcolor>
                  <align>center</align>
                  <font>font_tiny_bold</font>
		  <visible>!String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode)</visible>
                </control>
                <!-- MPAA -->
                <control type="group">
                  <width>120</width>
                  <height>30</height>
                  <visible>!String.IsEmpty(Control.GetLabel(6$PARAM[id])) + !String.IsEmpty(Container($PARAM[id]).ListItem.Title)</visible>
                  <control type="image">
                    <bottom>-18</bottom>
                    <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                    <align>bottom</align>
                    <height>100%</height>
                    <width>100%</width>
                    <texture colordiffuse="dimgrey">flags/flag_box_mpaa.png</texture>
                  </control>
                  <control type="label" id="6$PARAM[id]">
                    <top>15</top>
                    <left>35</left>
                    <height>100%</height>
                    <width>90%</width>
                    <font>widget_trakt_title2</font>
                    <textcolor>grey</textcolor>
                    <scroll>false</scroll>
                    <label fallback=" N/A">$VAR[MPAA_container]</label>
                  </control>
                </control>
                <!-- Duration -->
                <control type="group">
                  <width>100</width>
                  <height>30</height>
                  <visible>!String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) + [!String.IsEmpty(ListItem.Duration) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Duration))]</visible>
              <control type="image">
                <bottom>-18</bottom>
                <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                <align>bottom</align>
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="dimgrey">flags/square-rounded.png</texture>
              </control>
                  <control type="label" id="6115">
                    <top>15</top>
                    <left>10</left>
                    <height>100%</height>
                    <width>90%</width>
                    <font>widget_trakt_title2</font>
                    <textcolor>grey</textcolor>
                    <scroll>false</scroll>
                    <label>$VAR[infoview_duration_container]</label>
                  </control>
                </control>
                <!-- Season Count -->
		<control type="group">
                    <width>140</width>
		    <height>30</height>
                    <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(TotalSeasons))</visible>
                  <control type="image">
                    <bottom>-17</bottom>
		    <height>30</height>
                    <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                    <align>bottom</align>
                    <width>130</width>
                    <texture colordiffuse="dimgrey">common/white.png</texture>
                  </control>
                <control type="label">
                  <width>130</width>
                  <textcolor>white</textcolor>
                  <align>center</align>
                  <font>widget_trakt_title2</font>
                  <textcolor>grey</textcolor>
                  <top>28</top>
                  <label>$VAR[total_seasons_view505]</label>
                </control>
               </control>
                <!-- Aired -->
                <control type="label">
                  <width>195</width>
                  <label>$LOCALIZE[31789]: $INFO[Container($PARAM[id]).ListItem.Premiered(dd MMM yyyy)]</label> <!-- Aired -->
                  <textcolor>$VAR[ColorHighlight2]</textcolor>
                  <font>font_tiny_bold</font>
                  <visible>String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode)</visible>
                </control>
              </control>
            </control>
          </control>
	  <control type="label">
	    <height>10</height>
	  </control>
          <control type="label">
            <width>680</width>
            <height>35</height>
            <font>font_small</font>
            <textcolor>grey</textcolor>
            <label>$INFO[Container($PARAM[id]).ListItem.Season,S,: ]$INFO[Container($PARAM[id]).ListItem.Episode,E, ] - $INFO[Container($PARAM[id]).ListItem.Title]</label>
            <visible>String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode)</visible>
          </control>
          <control type="textbox">
            <label>$INFO[Container($PARAM[id]).ListItem.Plot]</label>
            <width>620</width>
            <height min="20" max="175">auto</height>
            <aligny>top</aligny>
            <autoscroll>0</autoscroll>
            <textcolor>dimgrey</textcolor>
            <font>font_small</font>
            <visible>![Control.IsVisible(1505) | Control.IsVisible(1506)] + !String.Contains(ListItem.Path,plugin.video.youtube)</visible>
          </control>
          <control type="textbox">
            <label>$INFO[Container($PARAM[id]).ListItem.Plot]</label>
            <width>720</width>
            <height min="20" max="178">auto</height>
            <aligny>top</aligny>
            <autoscroll delay="10000" time="1500" repeat="10000">true</autoscroll>
            <textcolor>dimgrey</textcolor>
            <font>font_small</font>
            <visible>[Control.IsVisible(1505) | Control.IsVisible(1506)] + !String.Contains(ListItem.Path,plugin.video.youtube)</visible>
          </control>
          <control type="textbox">
            <label>[B]$LOCALIZE[31718]:[/B] $INFO[Container($PARAM[id]).ListItem.Plot]</label> <!-- Channel -->
            <width>620</width>
            <height min="20" max="175">auto</height>
            <aligny>top</aligny>
            <autoscroll>0</autoscroll>
            <textcolor>dimgrey</textcolor>
            <font>font_small</font>
            <visible>String.Contains(ListItem.Path,plugin.video.youtube)</visible>
          </control>
          <control type="grouplist">
            <top>30</top>
            <height>62</height>
            <width>800</width>
            <itemgap>25</itemgap>
            <orientation>horizontal</orientation>
            <usecontrolcoords>true</usecontrolcoords>
            <control type="group">
              <top>5</top>
              <height>46</height>
              <width>46</width>
              <control type="image">
                <align>left</align>
                <aligny>center</aligny>
                <texture>$VAR[DetailsSpinImage_container,netflix/spinner/,.png]</texture>
                <colordiffuse>red</colordiffuse>
              </control>
            </control>
            <control type="textbox" id="841">
	      <top>-5</top>
              <height>75</height>
              <width>550</width>
              <label>$VAR[NetflixDetailsSpin_container]</label>
              <textcolor>dimgrey</textcolor>
              <align>left</align>
              <aligny>center</aligny>
              <font>font_tiny</font>
              <autoscroll>false</autoscroll>
            </control>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Info_Netflix">
    <param name="hdsd_flag" default="false" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="genre" default="true" />
    <param name="top250" default="true" />
    <param name="titleright" default="0" />
    <param name="studioid" default="90705" />
    <definition>
      <control type="group">
          <!-- trailer window -->
          <include content="Netflix_Trailer">
            <param name="top" value="-115" />	
            <param name="right" value="-40" />	
            <param name="height" value="720" />	
            <param name="width" value="1400" />	
            <param name="visible" value="Player.HasVideo" />	
          </include>
      </control>
      <control type="group">
        <param name="studioid" value="$PARAM[studioid]" />
          <!-- Add Netflix view Fanart with corner diffuse -->
          <include content="Netflix_Fanart">
            <param name="top" value="-45" />
            <param name="bottom" value="5" />
            <param name="right" value="0" />
            <param name="height" value="650" />
            <param name="width" value="1440" />
            <param name="visible" value="!Skin.HasSetting(DisableNetflixView) + !Skin.HasSetting(DisableNetflixShowcaseOverlay) + !Player.HasVideo + [Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(509) | Window.IsVisible(DialogVideoInfo.xml)]" />
          </include>

        <!-- Add Ratings below Fanart -->
        <control type="group">
          <visible>!Skin.HasSetting(DisableNetflixView) + !Window.IsVisible(DialogVideoInfo.xml) + !String.IsEqual(ListItem.Label,Next)</visible>
          <top>550</top>
          <right>20</right>
          <width>$PARAM[width]</width>
          <height>184</height>
          <include content="Object_Ratings" condition="Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(Home.xml) | Window.IsVisible(script-globalsearch.xml)">
            <param name="directory" value="color" />
            <param name="align" value="right" />
            <param name="width" value="1400" />
            <param name="rottentomatoes" value="true" />
            <param name="imdbvotes" value="true" />
            <param name="usermeter" value="true" />
            <param name="imdb" value="true" />
            <param name="tmdb" value="true" />
            <param name="tvdb" value="true" />
            <param name="metacritic" value="true" />
            <param name="oscars" value="true" />
            <param name="top250" value="true" />
            <param name="plot" value="false" />
            <param name="studio" value="true" />
            <param name="studioid" value="$PARAM[studioid]" />
          </include>
        </control>
      </control>

      <!-- Left Info Showcase -->
      <control type="grouplist">
        <top>-45</top>
        <posx>10</posx>
        <visible>Container.Content(movies) | Container.Content(sets) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(videos) | Container.Content(seasons) | Window.IsVisible(script-script.extendedinfo-VideoList.xml) | $EXP[Exp_IsPluginAdvancedLauncher] | Window.IsVisible(DialogVideoInfo.xml)</visible>
        <visible>!Container($PARAM[id]).ListItem.IsParentFolder</visible>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <height>650</height>

          <!-- Clearlogo -->
          <include content="Netflix_Clearlogo">
            <param name="id" value="5150" />
            <param name="top" value="10" />
            <param name="bottom" value="10" />
            <param name="right" value="" />
            <param name="left" value="0" />
            <param name="height" value="251" />
            <param name="width" value="520" />
            <param name="align" value="left" />
            <param name="texture" value="$VAR[NetflixHome_ClearLogo]" />
            <param name="visible" value="!Skin.HasSetting(DisableNetflixView) + [Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(509) | Window.IsVisible(DialogVideoInfo.xml)]" />
          </include>
        <!-- Fallback Label-->
        <control type="textbox">
          <visible>$EXP[DBTvideos] + String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.ClearLogo)) + String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(ListItem.Art(tvshow.clearlogo))</visible>
          <top>-200</top>
          <label>$VAR[video_heading]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>font_xlarge_bold</font>
	  <height>200</height>
          <width>730</width>
          <align>left</align>
          <aligny>center</aligny>
          <wrapmultiline>true</wrapmultiline>
          <scroll>true</scroll>
        </control>
        <control type="label">
          <visible>!$EXP[DBTvideos]</visible>
          <top>-200</top>
          <label>$VAR[video_heading]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>spotlight_heading_small</font>
          <width min="200" max="600">auto</width>
          <height min="50" max="150">auto</height>
          <align>left</align>
          <wrapmultiline>true</wrapmultiline>
          <autoscroll>true</autoscroll>
          <scroll>true</scroll>
        </control>

        <control type="grouplist">
          <top>0</top>
          <height>60</height>
          <orientation>horizontal</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <left>0</left>
          <right>$PARAM[titleright]</right>
          <include>netflix_infoline</include>
        </control>
        <control type="label">
          <height>10</height>
        </control>
        <control type="textbox">
          <visible>$EXP[DBTvideos] + !Skin.HasSetting(DisableNetflixView) + !Skin.HasSetting(DisableNetflixShowcaseOverlay)</visible>
          <label fallback="19055">$VAR[Label_OverlayPlot]</label>
          <width>630</width>
          <height min="20" max="175">auto</height>
          <aligny>top</aligny>
          <textcolor>dimgrey</textcolor>
          <font>font_small</font>
          <autoscroll delay="5000" time="1500" repeat="5000">true</autoscroll>
        </control>

        <control type="textbox">
          <visible>$EXP[DBTvideos] + Skin.HasSetting(DisableNetflixShowcaseOverlay)</visible>
          <label fallback="19055">$VAR[Label_OverlayPlot]</label>
          <width>1330</width>
          <height min="20" max="175">auto</height>
          <aligny>top</aligny>
          <textcolor>dimgrey</textcolor>
          <font>font_small</font>
          <autoscroll delay="5000" time="1500" repeat="5000">true</autoscroll>
        </control>
        <control type="grouplist">
          <top>30</top>
          <height>62</height>
          <width>800</width>
          <itemgap>25</itemgap>
          <orientation>horizontal</orientation>
          <usecontrolcoords>true</usecontrolcoords>
	  <visible>!String.IsEqual(ListItem.Label,Next)</visible>
          <control type="group">
            <top>10</top>
            <height>46</height>
            <width>46</width>
            <control type="image">
              <animation effect="fade" time="150">Visible</animation>
              <animation effect="fade" time="0" end="60" condition="true">Conditional</animation>
              <align>left</align>
              <aligny>center</aligny>
              <texture>$VAR[DetailsSpinImage,netflix/spinner/,.png]</texture>
              <colordiffuse>red</colordiffuse>
            </control>
          </control>
          <control type="textbox" id="841">
	    <top>-10</top>
            <animation effect="fade" time="150">Visible</animation>
            <height>85</height>
            <width>550</width>
            <label>$VAR[NetflixDetailsSpin]</label>
            <textcolor>dimgrey</textcolor>
            <align>left</align>
            <aligny>center</aligny>
            <font>font_tiny</font>
            <autoscroll>false</autoscroll>
          </control>
        </control>
      </control>
      <control type="grouplist">
        <visible>![Container.Content(movies) | Container.Content(sets) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(videos) | Container.Content(seasons) | Window.IsVisible(script-script.extendedinfo-VideoList.xml) | $EXP[Exp_IsPluginAdvancedLauncher]]</visible>
        <visible>!Container($PARAM[id]).ListItem.IsParentFolder + !Control.HasFocus(505) + !Control.HasFocus($PARAM[id]) + !Control.HasFocus(55) + !Control.HasFocus(56) + !Control.HasFocus(509) + !Control.HasFocus(504)</visible>
        <bottom>$PARAM[bottom]</bottom>
        <top>-10</top>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <control type="label">
          <left>0</left>
          <right>0</right>
          <label>$VAR[Label_MainTitle]</label>
          <height>80</height>
          <aligny>top</aligny>
          <textcolor>main_fg_100</textcolor>
          <font>font_showcase_title</font>
        </control>
        <control type="label">
          <left>0</left>
          <right>0</right>
          <label>$VAR[Label_SubTitle]</label>
          <height>40</height>
          <aligny>top</aligny>
          <textcolor>$VAR[ColorHighlight]</textcolor>
          <font>font_small</font>
        </control>
        <control type="group">
          <height>80</height>
          <visible>!Skin.HasSetting(DisableStarRating)</visible>
          <control type="group">
            <top>-17</top>
            <left>-16</left>
            <include content="Object_StarRating_Music">
              <param name="align" value="left" />
              <param name="visible" value="String.IsEmpty(ListItem.Rating)" />
            </include>
            <include content="Object_StarRating">
              <param name="align" value="left" />
              <param name="visible" value="!String.IsEmpty(ListItem.Rating)" />
              <param name="rating_prop" value="ListItem.Rating" />
            </include>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_VideoInfo_InfoSection">
    <param name="haspath" default="false" />
    <param name="label3" default="" />
    <definition>
      <control type="group">
        <height>32</height>
        <visible>!String.IsEmpty($PARAM[label2])</visible>
        <control type="label">
          <width>150</width>
          <align>left</align>
          <font>font_tiny</font>
          <textcolor>main_fg_30</textcolor>
          <label>$PARAM[label]</label>
          <scroll>true</scroll>
        </control>
        <control type="label">
          <left>150</left>
          <align>left</align>
          <font>font_tiny</font>
          <textcolor>main_fg_70</textcolor>
          <label>$INFO[$PARAM[label2],, ]$PARAM[label3]</label>
          <haspath>$PARAM[haspath]</haspath>
          <scroll>true</scroll>
        </control>
      </control>
    </definition>
  </include>
  <include name="submenu_widget_fixed">
    <control type="list" id="30222">
      <left>80</left>
      <top>660</top>
      <orientation>horizontal</orientation>
      <animation effect="fade" start="0" end="100" time="350" delay="300" tween="sine">Focus</animation>
      <animation effect="fade" start="100" end="0" time="150" delay="0" tween="sine">Hidden</animation>
      <animation effect="slide" end="0,40" time="350" delay="100" tween="sine" condition="Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixLargeWidget)">Conditonal</animation>
      <animation effect="slide" end="-40,30" time="10" condition="Skin.HasSetting(DisableNetflixSmallWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="-30,-10" time="10" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1505).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)">SetFocus(1505)</onup>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1506).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)">SetFocus(1506)</onup>
      <onup condition="!String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)">300</onup>
      <ondown>330</ondown>
      <onleft>300</onleft>
      <onback>300</onback>
      <visible allowhiddenfocus="true">Control.HasFocus(30222) + Skin.HasSetting(DisableAuraHomeLayout)</visible>
      <!--      <visible>Window.IsVisible(Home)</visible> -->
      <include>Home_Widget_SubMenu_Items</include>
      <include>Home_Widget_SubMenu_Layout_icon_fixed</include>
    </control>
  </include>
  <include name="submenu_widget_thumb">
    <control type="list" id="30222">
      <left>80</left>
      <top>660</top>
      <visible allowhiddenfocus="true">Control.HasFocus(30222) + Skin.HasSetting(DisableAuraHomeLayout)</visible>
      <orientation>horizontal</orientation>
      <animation effect="fade" start="0" end="100" time="350" delay="100" tween="sine">Focus</animation>
      <animation effect="fade" start="100" end="0" time="150" delay="0" tween="sine">Hidden</animation>
      <animation effect="slide" start="0,100" end="0,40" time="350" delay="100" tween="sine" condition="!Skin.HasSetting(DisableNetflixLargeWidget)">Focus</animation>
      <animation effect="slide" end="-30,-40" time="10" condition="Skin.HasSetting(DisableNetflixSmallWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="-30,-10" time="10" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <visible>Window.IsVisible(Home)</visible>
      <ondown>330</ondown>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1505).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)">SetFocus(1505)</onup>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1506).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)">SetFocus(1506)</onup>
      <onup condition="!String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)">300</onup>
      <onup>300</onup>
      <onleft>300</onleft>
      <onback>300</onback>
      <include>Home_Widget_SubMenu_Layout_thumb_fixed</include>
    </control>
  </include>
  <include name="Home_Widget_HubMenu_TVItems">
    <content>
      <include>skinshortcuts-group-x1103</include>
    </content>
  </include>
  <include name="Home_Widget_HubMenu_MovieItems">
    <content>
      <include>skinshortcuts-group-x1101</include>
    </content>
  </include>
  <include name="Home_Widget_SubMenu_Items">
    <content>
      <include>skinshortcuts-submenu</include>
    </content>
  </include>
  <include name="Home_Widget_HubMenu_Layout_icon_fixed">
    <param name="id" default="$PARAM[id]" />
    <definition>
      <top>630</top>
      <height>500</height>
      <width>1950</width>
      <left>0</left>
      <orientation>horizontal</orientation>
      <itemgap>15</itemgap>
      <focusposition>0</focusposition>
      <itemlayout width="182" height="130" condition="!Skin.HasSetting(SubmenuLabel)">
        <include>Widget_Submenu_ItemLayout</include>
      </itemlayout>
      <focusedlayout width="182" height="130" condition="!Skin.HasSetting(SubmenuLabel)">
        <include content="Widget_Submenu_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
        </include>
      </focusedlayout>
      <itemlayout width="373.33" height="200" condition="Skin.HasSetting(SubmenuLabel)">
        <include content="Widget_Hub_ItemLayout">
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <focusedlayout width="373.33" height="200" condition="Skin.HasSetting(SubmenuLabel)">
        <include content="Widget_Hub_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
    </definition>
  </include>
  <include name="Widget_Hub_ItemLayout">
    <control type="group">
      <top>0</top>
      <bottom>-0</bottom>
      <control type="group">
        <include>Defs_PosterBack</include>
        <control type="image">
          <bordersize>10</bordersize>
          <texture background="true" diffuse="diffuse/landscape.png">$INFO[ListItem.Property(background)]</texture>
          <visible>!String.IsEmpty(ListItem.Property(background))</visible>
        </control>
<!--
        <control type="image">
          <bordersize>10</bordersize>
          <texture colordiffuse="69000000" background="true">diffuse/landscape.png</texture>
          <visible>!String.IsEmpty(ListItem.Property(background))</visible>
        </control>
-->
        <control type="image">
          <bordersize>10</bordersize>
          <texture colordiffuse="79000000" background="true">diffuse/landscape.png</texture>
          <visible>!String.IsEmpty(ListItem.Property(background))</visible>
        </control>
        <control type="label">
          <bottom>20</bottom>
          <height>30</height>
          <align>center</align>
          <font>font_tiny</font>
          <textcolor>PosterFront_70</textcolor>
          <right>30</right>
          <left>30</left>
          <label>$INFO[ListItem.Label]</label>
          <scroll>false</scroll>
          <visible>Skin.HasSetting(SubmenuLabel)</visible>
          <visible>!Skin.HasSetting(DisableBigCat)</visible>
          <visible>!String.Contains(ListItem.Icon,none.png)</visible>
        </control>
        <control type="label">
          <centertop>50%</centertop>
          <height>30</height>
          <align>center</align>
          <font>font_medium_bold</font>
          <textcolor>PosterFront</textcolor>
          <right>30</right>
          <left>30</left>
          <label>$INFO[ListItem.Label]</label>
          <visible>String.Contains(ListItem.Icon,none.png)</visible>
          <visible>Skin.HasSetting(SubmenuLabel)</visible>
        </control>
        <control type="image">
          <bordersize>10</bordersize>
          <aspectratio scalediffuse="false">keep</aspectratio>
          <texture background="true" diffuse="diffuse/submenu.png">$INFO[ListItem.Icon]</texture>
          <visible>!Skin.HasSetting(SubmenuLabel)</visible>
        </control>
        <control type="image">
          <animation effect="slide" end="0,20" time="0" condition="Skin.HasSetting(SubmenuLabel) + Skin.HasSetting(LargeSubmenuLabel)">Conditional</animation>
          <bordersize>10</bordersize>
          <height>125</height>
          <aspectratio scalediffuse="false">keep</aspectratio>
          <texture background="true" diffuse="diffuse/submenubig.png">$INFO[ListItem.Icon]</texture>
          <visible>Skin.HasSetting(SubmenuLabel)</visible>
          <visible>!Skin.HasSetting(DisableBigCat)</visible>
          <visible>!String.Contains(ListItem.Icon,none.png)</visible>
        </control>
        <control type="image">
          <bordersize>10</bordersize>
          <aspectratio scalediffuse="false">keep</aspectratio>
          <texture background="true" diffuse="diffuse/submenubig.png">$INFO[ListItem.Icon]</texture>
          <visible>Skin.HasSetting(SubmenuLabel)</visible>
          <visible>Skin.HasSetting(DisableBigCat)</visible>
          <visible>!String.Contains(ListItem.Icon,none.png)</visible>
        </control>
        <control type="image">
          <bordersize>10</bordersize>
          <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
        </control>
      </control>
    </control>
  </include>
  <include name="Widget_Hub_FocusedLayout">
    <control type="group">
      <top>0</top>
      <bottom>-0</bottom>
      <visible>Control.HasFocus($PARAM[id])</visible>
      <include>Animation_FocusBounce_Large</include>
      <control type="group">
        <include>Defs_PosterBack</include>
        <control type="image">
          <bordersize>10</bordersize>
          <texture background="true" diffuse="diffuse/landscape.png">$INFO[ListItem.Property(background)]</texture>
          <visible>!String.IsEmpty(ListItem.Property(background))</visible>
        </control>
<!--
        <control type="image">
          <bordersize>10</bordersize>
          <texture colordiffuse="69000000" background="true">diffuse/landscape.png</texture>
          <visible>!String.IsEmpty(ListItem.Property(background))</visible>
        </control>
-->
        <control type="image">
          <bordersize>10</bordersize>
          <texture colordiffuse="79000000" background="true">diffuse/landscape.png</texture>
          <visible>!String.IsEmpty(ListItem.Property(background))</visible>
        </control>
        <control type="label">
          <bottom>20</bottom>
          <height>30</height>
          <align>center</align>
          <font>font_tiny</font>
          <textcolor>PosterFront</textcolor>
          <right>30</right>
          <left>30</left>
          <label>$INFO[ListItem.Label]</label>
          <scroll>true</scroll>
          <visible>Skin.HasSetting(SubmenuLabel)</visible>
          <visible>!Skin.HasSetting(DisableBigCat)</visible>
          <visible>!String.Contains(ListItem.Icon,none.png)</visible>
        </control>
        <control type="label">
          <centertop>50%</centertop>
          <height>30</height>
          <align>center</align>
          <font>font_medium_bold</font>
          <textcolor>PosterFront</textcolor>
          <right>30</right>
          <left>30</left>
          <label>$INFO[ListItem.Label]</label>
          <visible>String.Contains(ListItem.Icon,none.png)</visible>
          <visible>Skin.HasSetting(SubmenuLabel)</visible>
        </control>
        <control type="image">
          <bordersize>10</bordersize>
          <aspectratio scalediffuse="false">keep</aspectratio>
          <texture background="true" diffuse="diffuse/submenu.png">$INFO[ListItem.Icon]</texture>
          <visible>!Skin.HasSetting(SubmenuLabel)</visible>
        </control>
        <control type="image">
          <animation effect="slide" end="0,20" time="0" condition="Skin.HasSetting(SubmenuLabel) + Skin.HasSetting(LargeSubmenuLabel)">Conditional</animation>
          <bordersize>10</bordersize>
          <height>125</height>
          <aspectratio scalediffuse="false">keep</aspectratio>
          <texture background="true" diffuse="diffuse/submenubig.png">$INFO[ListItem.Icon]</texture>
          <visible>Skin.HasSetting(SubmenuLabel)</visible>
          <visible>!Skin.HasSetting(DisableBigCat)</visible>
          <visible>!String.Contains(ListItem.Icon,none.png)</visible>
        </control>
        <control type="image">
          <bordersize>10</bordersize>
          <aspectratio scalediffuse="false">keep</aspectratio>
          <texture background="true" diffuse="diffuse/submenubig.png">$INFO[ListItem.Icon]</texture>
          <visible>Skin.HasSetting(SubmenuLabel)</visible>
          <visible>Skin.HasSetting(DisableBigCat)</visible>
          <visible>!String.Contains(ListItem.Icon,none.png)</visible>
        </control>
        <control type="image">
          <bordersize>10</bordersize>
          <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
        </control>
      </control>
      <control type="group">
        <include>View_Selectbox</include>
      </control>
    </control>
    <control type="group">
      <visible>!Control.HasFocus($PARAM[id])</visible>
      <include content="Widget_Hub_ItemLayout">
        <param name="genres" value="$PARAM[genres]" />
        <param name="studios" value="$PARAM[studios]" />
        <param name="text" value="$PARAM[text]" />
        <param name="square" value="$PARAM[square]" />
        <param name="poster" value="$PARAM[poster]" />
        <param name="landscape" value="$PARAM[landscape]" />
        <param name="landscapewide" value="$PARAM[landscapwide]" />
        <param name="landscapewideposter" value="$PARAM[landscapewideposter]" />
        <param name="posterdetails" value="$PARAM[posterdetails]" />
        <param name="widgetlive" value="$PARAM[widgetlive]" />
        <param name="landscapenetflix" value="$PARAM[landscapenetflix]" />
      </include>
    </control>
  </include>
  <include name="Home_Widget_SubMenu_Layout_thumb_fixed">
    <orientation>horizontal</orientation>
    <scrolltime tween="sine" easing="out">500</scrolltime>
    <movement>2</movement>
    <left>90</left>
    <top>600</top>
    <orientation>horizontal</orientation>
    <include>Home_Widget_SubMenu_Items</include>
    <include content="Home_Widget_HubMenu_Layout_icon_fixed">
      <param name="id" value="30222" />
    </include>
  </include>
  <include name="Home_Widget_SubMenu_Layout_icon_fixed">
    <top>630</top>
    <height>500</height>
    <width>1950</width>
    <left>0</left>
    <orientation>horizontal</orientation>
    <itemgap>15</itemgap>
    <focusposition>1</focusposition>
    <itemlayout width="182" height="130" condition="!Skin.HasSetting(SubmenuLabel)">
      <include>Widget_Hub_ItemLayout</include>
    </itemlayout>
    <focusedlayout width="182" height="130" condition="!Skin.HasSetting(SubmenuLabel)">
      <include content="Widget_Hub_FocusedLayout">
        <param name="id" value="30222" />
      </include>
    </focusedlayout>
    <itemlayout width="284.44" height="160" condition="Skin.HasSetting(SubmenuLabel)">
      <include>Widget_Hub_ItemLayout</include>
    </itemlayout>
    <focusedlayout width="284.44" height="160" condition="Skin.HasSetting(SubmenuLabel)">
      <include content="Widget_Hub_FocusedLayout">
        <param name="id" value="30222" />
      </include>
    </focusedlayout>
  </include>
  <include name="Object_VideoInfo_CastList">
    <param name="height" default="455" />
    <param name="include_content" default="true" />
    <param name="include_content_nextup" default="false" />
    <param name="label2" default="$INFO[ListItem.Label2]" />
    <param name="itemwidth" default="widget_poster_width" />
    <param name="itemheight" default="widget_poster_height" />
    <param name="content2" default="" />
    <param name="content3" default="" />
    <param name="textonly" default="false" />
    <param name="include_onclick" default="false" />
    <param name="onclick" default="Close" />
    <param name="onclick2" default="" />
    <param name="onclick3" default="" />
    <param name="busyspinner" default="true" />
    <param name="pad" default="view_pad" />
    <param name="top" default="0" />
    <param name="episodelayout" default="false" />
    <param name="aspect" default="scale" />
    <param name="fallbackimage" default="DefaultAddonImages.png" />
    <param name="showfocuslabel" default="true" />
    <param name="visible" default="true" />
    <param name="left" default="$PARAM[pad]" />
    <param name="circlewidget" default="false" />
    <definition>
      <control type="group">
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
        <left>$PARAM[left]</left>
        <right>$PARAM[pad]</right>
        <height>$PARAM[height]</height>
        <top>$PARAM[top]</top>
        <visible>!Container.Content(musicvideos)</visible>
        <visible>$PARAM[visible]</visible>
        <control type="grouplist">
          <top>0</top>
          <height>25</height>
          <left>20</left>
          <align>left</align>
          <itemgap>12</itemgap>
          <usecontrolcoords>true</usecontrolcoords>
          <orientation>horizontal</orientation>
          <control type="label">
            <textcolor>main_fg_100</textcolor>
            <aligny>center</aligny>
            <width>auto</width>
            <height>100%</height>
            <label>$PARAM[label]</label>
          </control>
          <control type="label">
            <textcolor>$VAR[ColorHighlight]</textcolor>
            <aligny>center</aligny>
            <width>auto</width>
            <height>100%</height>
            <label>|</label>
            <visible>Control.HasFocus($PARAM[id])</visible>
            <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Label)</visible>
            <visible>$PARAM[showfocuslabel]</visible>
          </control>
          <control type="label">
            <textcolor>main_fg_100</textcolor>
            <aligny>center</aligny>
            <width>auto</width>
            <height>100%</height>
            <label>$INFO[Container($PARAM[id]).ListItem.Label]$PARAM[focuslabel]</label>
            <visible>Control.HasFocus($PARAM[id])</visible>
            <visible>$PARAM[showfocuslabel]</visible>
          </control>
        </control>
        <!-- Similar Movies -->
        <control type="list" id="$PARAM[id]">
          <orientation>horizontal</orientation>
          <left>10</left>
          <include content="Object_VideoInfo_CastList_OnClick" condition="$PARAM[include_onclick]">
            <param name="onclick" value="$PARAM[onclick]" />
            <param name="onclick2" value="$PARAM[onclick2]" />
            <param name="onclick3" value="$PARAM[onclick3]" />
          </include>
          <onback>$PARAM[onback]</onback>
          <onup>$PARAM[onup]</onup>
          <ondown>$PARAM[ondown]</ondown>
          <include>Animation_FadeInOut</include>
          <animation effect="fade" start="100" end="0" time="0" condition="Container($PARAM[id]).IsUpdating">Conditional</animation>
	  <include condition="$PARAM[circlewidget]">Object_CircleWidget</include>
          <include content="View_Actor_Layout" condition="!$PARAM[circlewidget]">
            <param name="id" value="$PARAM[id]" />
            <param name="infolabel" value="$PARAM[infolabel]" />
            <param name="label2" value="$PARAM[label2]" />
            <param name="itemwidth" value="$PARAM[itemwidth]" />
            <param name="itemheight" value="$PARAM[itemheight]" />
            <param name="textonly" value="$PARAM[textonly]" />
            <param name="episodelayout" value="$PARAM[episodelayout]" />
            <param name="aspect" value="$PARAM[aspect]" />
            <param name="fallbackimage" value="$PARAM[fallbackimage]" />
          </include>
          <include condition="$PARAM[include_content_nextup]">Object_VideoInfo_CastList_Content_NextUp</include>
          <include content="Object_VideoInfo_CastList_Content" condition="$PARAM[include_content]">
            <param name="content" value="$PARAM[content]" />
          </include>
          <include content="Object_VideoInfo_CastList_Content" condition="$PARAM[include_content]">
            <param name="content" value="$PARAM[content2]" />
          </include>
          <include content="Object_VideoInfo_CastList_Content" condition="$PARAM[include_content]">
            <param name="content" value="$PARAM[content3]" />
          </include>
        </control>
        <include content="Dialog_VideoInfo_BusyIndicator" condition="$PARAM[busyspinner]">
          <param name="id" value="$PARAM[id]" />
        </include>
      </control>
    </definition>
  </include>
	

  <!-- cr to Titan Bingie mode-->
  <include name="Object_CircleWidget">
       <top>40</top>
       <height>350</height>
       <preloaditems>2</preloaditems>
       <orientation>horizontal</orientation>
       <scrolltime tween="quadratic">400</scrolltime>
        <itemlayout height="400" width="300">
                  <control type="group">
                          <height>250</height>
                          <width>250</width>
                          <include content="Circle_CastWidget">
                                  <param name="colordiffuse" value="white" />
                                  <param name="autoscroll" value="false" />
                                  <param name="bordersize_bg" value="1" />
                          </include>
                  </control>
          </itemlayout>
          <focusedlayout height="400" width="300">
                  <control type="group">
                          <height>250</height>
                          <width>250</width>
                          <include>Focus_Zoom_Animation</include>
		          <animation type="Focus" reversible="false">
			      <effect type="zoom" end="105" time="75" tween="sine" easing="out" center="auto" />
			      <effect type="zoom" end="95.2380952" time="225" tween="sine" delay="100" easing="out" center="auto" />
		          </animation>
                          <control type="group">
                                  <include content="Circle_CastWidget">
                                          <param name="colordiffuse" value="white" />
                                          <param name="autoscroll" value="true" />
                                          <param name="bordersize_bg" value="4" />
                                  </include>
                          </control>
                  </control>
          </focusedlayout>
   </include>

        <include name="Circle_CastWidget">
            <param name="colordiffuse" default="white" />
            <param name="autoscroll" default="true" />
            <param name="bordersize_bg" default="4" />
	    <definition>
                <control type="image">
                        <description>Fallback aspect keep</description>
                        <bordertexture colordiffuse="$PARAM[colordiffuse]">diffuse/roundmask.png</bordertexture>
                        <texture background="true" diffuse="diffuse/roundmask.png" fallback="defaultactor.png">$VAR[Image_Poster]</texture>
			<aspectratio>stretch</aspectratio>
                        <bordersize>$PARAM[bordersize_bg]</bordersize>
                </control>

                <control type="group">
                        <control type="textbox">
                                <autoscroll delay="2000" time="1500" repeat="1500">$PARAM[autoscroll]</autoscroll>
                                <top>101%</top>
                                <left>10</left>
                                <right>10</right>
                                <wrapmultiline>true</wrapmultiline>
                                <height>80</height>
                                <font>Plot529</font>
                                <align>center</align>
                                <aligny>center</aligny>
                                <textcolor>grey</textcolor>
                                <selectedcolor>white</selectedcolor>
                                <label>$INFO[ListItem.Label,[B],[/B]][CR][COLOR=grey]$INFO[ListItem.Label2][/COLOR]</label>
                        </control>
                </control>
	    </definition>
        </include>



  <include name="Object_VideoInfo_CastList_Content_NextUp">
    <content limit="3" sortby="playcount" sortorder="ascending">videodb://inprogresstvshows/$INFO[ListItem.DBID]/-2/?tvshowid=$INFO[ListItem.DBID]</content>
  </include>
  <include name="Object_VideoInfo_CastList_Content">
    <content limit="15">$PARAM[content]</content>
  </include>
  <include name="Object_VideoInfo_CastList_OnClick">
    <onclick>$PARAM[onclick]</onclick>
    <onclick>$PARAM[onclick2]</onclick>
    <onclick>$PARAM[onclick3]</onclick>
  </include>
  <include name="Object_StarRating">
    <param name="align" default="left" />
    <param name="rating_prop" default="ListItem.Rating" />
    <param name="visible" default="true" />
    <param name="height" default="64" />
    <param name="width" default="64" />
    <definition>
      <control type="group">
        <height>$PARAM[height]</height>
        <visible>$PARAM[visible]</visible>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>$PARAM[height]</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
        </control>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>$PARAM[height]</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],0)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],2)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],4)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],6)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],8)">Conditional</animation>
          </control>
        </control>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>$PARAM[height]</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],1)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],3)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],5)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],7)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],9)">Conditional</animation>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_StarRating_Music">
    <param name="align" default="center" />
    <param name="rating_prop" default="ListItem.Rating" />
    <param name="visible" default="Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(musicplaylist) | Container.Content(musicvideos) | Window.IsVisible(script-globalsearch.xml)" />
    <definition>
      <control type="group">
        <height>64</height>
        <visible>$PARAM[visible]</visible>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>64</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
        </control>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>64</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],0)">Conditional</animation>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],1)">Conditional</animation>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],2)">Conditional</animation>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],3)">Conditional</animation>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],4)">Conditional</animation>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <variable name="Object_StarRating_ColorVar">
    <value condition="Skin.HasSetting(DisableNetflixView) + Skin.HasSetting(MonochromeFlags)">main_fg_100</value>
    <value condition="Skin.HasSetting(DisableNetflixView) + !Skin.HasSetting(MonochromeFlags)">Highlight2</value>
    <value condition="!Skin.HasSetting(DisableNetflixView) + Skin.HasSetting(MonochromeFlags)">main_fg_100</value>
    <value condition="!Skin.HasSetting(DisableNetflixView) + !Skin.HasSetting(MonochromeFlags)">red</value>
  </variable>
  <include name="Object_PVR_Info">
    <param name="artwork" default="Window(Home).Property(TMDBHelper.ListItem.Fanart)" />
    <param name="fallback" default="ListItem.Icon" />
    <definition>
      <control type="image">
        <width>1180</width>
        <height>510</height>
        <texture background="true" colordiffuse="FF000000">common/white.png</texture>
      </control>
      <control type="group">
        <visible>!Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + !Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
        <!-- Start Video Window -->
        <control type="group">
          <animation effect="slide" start="0" end="100,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)" reversible="true">Conditional</animation>
          <animation effect="slide" start="0" end="0,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,2.20)">Conditional</animation>
          <animation effect="slide" start="0" end="200,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,1.33)">Conditional</animation>
          <animation effect="slide" start="0" end="95,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,1.78)">Conditional</animation>
          <animation effect="slide" start="0" end="285,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,0.00)">Conditional</animation>
          <visible>Player.HasVideo</visible>
          <left>550</left>
          <width>1080</width>
          <height>530</height>
          <top>10</top>
          <bottom>5</bottom>
          <control type="videowindow">
            <width>100%</width>
            <height>100%</height>
          </control>
          <control type="image">
            <texture colordiffuse="ff000000" border="40">netflix/netflix_corner.png</texture>
          </control>
        </control>
        <control type="group">
          <visible>!Player.HasVideo</visible>
          <animation effect="fade" time="250">VisibleChange</animation>
          <control type="image">
            <top>50</top>
            <right>150</right>
            <width>600</width>
            <height>400</height>
            <aspectratio scalediffuse="false" aligny="center">keep</aspectratio>
            <texture background="true">$INFO[Container(10).ListItem.ActualIcon]</texture>
            <visible>String.IsEmpty(Control.GetLabel(33000))</visible>
          </control>
        </control>
        <control type="group">
          <visible>!Player.HasVideo</visible>
          <top>10</top>
          <right>-70</right>
          <width>1280</width>
          <height>720</height>
          <animation effect="fade" time="250">VisibleChange</animation>
          <control type="image" id="33000">
            <top>-35</top>
            <right>20</right>
            <width>1180</width>
            <height>720</height>
            <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
            <texture background="true" diffuse="Right Corner.png">$INFO[$PARAM[artwork]]</texture>
          </control>
        </control>
        <control type="grouplist">
          <visible>[[!String.IsEmpty($PARAM[fallback]) + [String.IsEmpty(Control.GetLabel(9123)) | String.StartsWith(Control.GetLabel(9123),Default)]] | [!String.IsEmpty(Control.GetLabel(9123)) + !String.StartsWith(Control.GetLabel(9123),Default)]]</visible>
          <height>550</height>
          <top>40</top>
          <left>40</left>
          <right>865</right>
          <orientation>vertical</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <include>Object_PVR_Info_Content</include>
        </control>
        <control type="grouplist">
          <visible>![[!String.IsEmpty($PARAM[fallback]) + [String.IsEmpty(Control.GetLabel(9123)) | String.StartsWith(Control.GetLabel(9123),Default)]] | [!String.IsEmpty(Control.GetLabel(9123)) + !String.StartsWith(Control.GetLabel(9123),Default)]]</visible>
          <height>550</height>
          <top>40</top>
          <left>40</left>
          <right>view_pad</right>
          <orientation>vertical</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <include>Object_PVR_Info_Content</include>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_PVR_Info_Content">
    <control type="group">
      <height>80</height>
      <control type="image" id="55444">
        <top>5</top>
        <bottom>40</bottom>
        <height>140</height>
        <width>450</width>
        <texture>$VAR[PVRInfoThumb]</texture>
      </control>
      <control type="label">
        <height>40</height>
        <visible>!String.IsEmpty(Control.GetLabel(55444))</visible>
      </control>
      <control type="textbox">
        <visible>!String.IsEmpty(ListItem.EpgEventTitle)</visible>
        <visible>String.IsEmpty(Control.GetLabel(55444))</visible>
        <label>$INFO[ListItem.EpgEventTitle]</label>
        <textcolor>grey</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>font_heading_medium</font>
        <width>730</width>
        <height min="30" max="100">auto</height>
        <align>left</align>
        <aligny>center</aligny>
        <wrapmultiline>true</wrapmultiline>
        <scroll>true</scroll>
      </control>
      <control type="textbox">
        <visible>String.IsEmpty(ListItem.EpgEventTitle) + String.IsEmpty(Control.GetLabel(55444))</visible>
        <label>$INFO[ListItem.Label]</label>
        <textcolor>grey</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>font_heading_medium</font>
        <width>730</width>
        <height min="30" max="100">auto</height>
        <align>left</align>
        <aligny>center</aligny>
        <wrapmultiline>true</wrapmultiline>
        <scroll>true</scroll>
      </control>
    </control>
    <control type="label">
      <top>80</top>
      <label>[B]$INFO[ListItem.ChannelName][/B] | [COLOR=$VAR[ColorHighlight2]]$LOCALIZE[19126]: [/COLOR]$INFO[ListItem.StartTime] | [COLOR=$VAR[ColorHighlight2]]$LOCALIZE[19127]: [/COLOR] $INFO[ListItem.EndTime]</label>
      <height>40</height>
      <aligny>top</aligny>
      <textcolor>main_fg_100</textcolor>
      <font>font_small</font>
      <visible>!String.IsEmpty(ListItem.Title) | !String.IsEmpty(ListItem.ChannelNumber)</visible>
    </control>
    <control type="textbox">
      <top>15</top>
      <width>900</width>
      <height min="100" max="220">auto</height>
      <label fallback="19055">$VAR[Label_Plot]</label>
      <aligny>bottom</aligny>
      <textcolor>main_fg_70</textcolor>
      <font>font_plotbox</font>
    </control>
    <control type="grouplist">
      <top>15</top>
      <height>40</height>
      <include content="Object_Ratings_Content">
        <param name="directory" value="color" />
        <param name="align" value="left" />
        <param name="width" value="1200" />
        <param name="rottentomatoes" value="true" />
        <param name="imdbvotes" value="false" />
        <param name="usermeter" value="false" />
        <param name="imdb" value="true" />
        <param name="tmdb" value="true" />
        <param name="tvdb" value="true" />
        <param name="metacritic" value="true" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
        <param name="plot" value="false" />
        <param name="studioid" value="90678" />
      </include>
    </control>
  </include>
  <include name="Object_UpDownInfoArrows">
    <param name="id" default="9000" />
    <param name="hasprevious" default="true" />
    <param name="hasnext" default="true" />
    <param name="top" default="0" />
    <param name="bottom" default="0" />
    <definition>
      <control type="grouplist">
        <top>$PARAM[top]</top>
        <left>20</left>
        <right>20</right>
        <height>view_pad</height>
        <align>center</align>
        <orientation>horizontal</orientation>
        <itemgap>10</itemgap>
        <visible>$PARAM[hasprevious]</visible>
        <visible>Container($PARAM[id]).HasPrevious</visible>
        <include>Animation_FadeIn</include>
        <include>Animation_FadeOut</include>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="group">
          <width>22</width>
          <bottom>10</bottom>
          <control type="image">
            <bottom>17</bottom>
            <width>16</width>
            <height>16</height>
            <texture colordiffuse="panel_fg_30" flipy="true">common/arrow-small.png</texture>
          </control>
          <control type="image">
            <bottom>7</bottom>
            <width>16</width>
            <height>16</height>
            <texture colordiffuse="panel_fg_30" flipy="true">common/arrow-small.png</texture>
          </control>
        </control>
      </control>
      <control type="grouplist">
        <left>20</left>
        <right>20</right>
        <bottom>$PARAM[bottom]</bottom>
        <height>view_pad</height>
        <align>center</align>
        <orientation>horizontal</orientation>
        <itemgap>10</itemgap>
        <visible>$PARAM[hasnext]</visible>
        <visible>Container($PARAM[id]).HasNext</visible>
        <include>Animation_FadeIn</include>
        <include>Animation_FadeOut</include>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="group">
          <width>22</width>
          <bottom>10</bottom>
          <control type="image">
            <bottom>17</bottom>
            <width>16</width>
            <height>16</height>
            <texture colordiffuse="panel_fg_30" flipy="false">common/arrow-small.png</texture>
          </control>
          <control type="image">
            <bottom>7</bottom>
            <width>16</width>
            <height>16</height>
            <texture colordiffuse="panel_fg_30" flipy="false">common/arrow-small.png</texture>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_DownArrows">
    <control type="group">
      <width>22</width>
      <control type="image">
        <bottom>17</bottom>
        <width>16</width>
        <height>16</height>
        <texture colordiffuse="$VAR[ColorHighlight]">common/arrow-small.png</texture>
      </control>
      <control type="image">
        <bottom>7</bottom>
        <width>16</width>
        <height>16</height>
        <texture colordiffuse="$VAR[ColorHighlight]">common/arrow-small.png</texture>
      </control>
    </control>
  </include>
  <include name="Object_BigPoster">
    <param name="container" default="" />
    <param name="visible" default="!Container.IsUpdating" />
    <param name="variable" default="$VAR[Image_Poster]" />
    <param name="height" default="poster_height" />
    <param name="width" default="poster_width" />
    <param name="discart" default="false" />
    <param name="aspect" default="keep" />
    <definition>
      <control type="group">
        <left>0</left>
        <top>0</top>
        <width>$PARAM[width]</width>
        <height>$PARAM[height]</height>
        <visible>$PARAM[visible]</visible>
        <control type="group">
          <visible>!Window.IsVisible(MyPics.xml)</visible>
          <control type="group">
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">scale</aspectratio>
              <texture background="true" fallback="DefaultAddonImages.png" diffuse="diffuse/bigposter.png">$PARAM[variable]</texture>
              <visible>[!$PARAM[container]ListItem.IsParentFolder + [!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(season.poster))]]</visible>
            </control>
            <control type="group">
              <visible>[[!$PARAM[container]ListItem.IsParentFolder + !String.StartsWith($PARAM[container]ListItem.Icon,DefaultIcon)] + ![!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(season.poster))]]</visible>
              <control type="image">
                <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
                <texture background="true" fallback="DefaultAddonImages.png" diffuse="diffuse/bigposter.png">$PARAM[variable]</texture>
              </control>
            </control>
          </control>
          <control type="group">
            <visible>$PARAM[container]ListItem.IsParentFolder | String.StartsWith($PARAM[container]ListItem.Icon,DefaultIcon)</visible>
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">center</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultAddonNone.png" diffuse="diffuse/bigposter.png">$VAR[serenicons]</texture>
              <visible>String.Contains(ListItem.Path,plugin://plugin.video.seren)</visible>
            </control>
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">center</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultAddonNone.png" diffuse="diffuse/bigposter.png">$INFO[$PARAM[container]ListItem.Icon]</texture>
              <visible>[!Container.Content(genres) + !Container.Content(studios) + !Container.Content(countries) + !Container.Content(years) + !Container.Content(directors)] | ListItem.IsParentFolder</visible>
              <visible>!String.Contains(ListItem.Path,plugin://plugin.video.seren)</visible>

            </control>
            <control type="image">
              <bordersize>80</bordersize>
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <animation effect="fade" condition="true" end="35">Conditional</animation>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultFolder.png" diffuse="diffuse/bigposter.png">$INFO[$PARAM[container]ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</texture>
              <visible>Container.Content(countries) + !ListItem.IsParentFolder</visible>
            </control>
            <control type="textbox">
              <left>30</left>
              <right>30</right>
              <top>30</top>
              <bottom>30</bottom>
              <align>center</align>
              <aligny>center</aligny>
              <label>$INFO[$PARAM[container]ListItem.Label]</label>
              <textcolor>PosterFront</textcolor>
              <font>font_bigposter_text</font>
              <visible>[Container.Content(years) | Container.Content(directors) | Container.Content(countries)] + !ListItem.IsParentFolder</visible>
            </control>
            <control type="image">
              <bordersize>80</bordersize>
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultFolder.png" diffuse="diffuse/bigposter.png">$VAR[Image_GenreIcons_Path]$INFO[$PARAM[container]ListItem.Label,,.png]</texture>
              <visible>Container.Content(genres) + !ListItem.IsParentFolder</visible>
            </control>
            <control type="image">
              <bordersize>80</bordersize>
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultFolder.png" diffuse="diffuse/bigposter.png">$INFO[$PARAM[container]ListItem.Label,resource://resource.images.studios.white/,.png]</texture>
              <visible>Container.Content(studios) + !ListItem.IsParentFolder</visible>
            </control>
          </control>
        </control>
        <control type="group">
          <visible>Window.IsVisible(MyPics.xml)</visible>
          <control type="group">
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <texture background="true" fallback="DefaultAddonImages.png" diffuse="diffuse/bigposter.png">$INFO[ListItem.FileNameAndPath]</texture>
            </control>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Flags">
    <param name="container" default="" />
    <param name="source" default="ListItem." />
    <param name="directory" default="color" />
    <param name="align" default="right" />
    <param name="colordiffuse" default="panel_fg_100" />
    <param name="ratings" default="false" />
    <param name="fps" default="false" />
    <param name="studioid" default="90706" />
    <definition>
      <include content="Object_Flags_Content" condition="Skin.HasSetting(MonochromeFlags)">
        <param name="container" value="$PARAM[container]" />
        <param name="source" value="$PARAM[source]" />
        <param name="directory" value="monochrome" />
        <param name="align" value="$PARAM[align]" />
        <param name="colordiffuse" value="main_fg_100" />
        <param name="ratings" value="$PARAM[ratings]" />
        <param name="fps" value="$PARAM[fps]" />
        <param name="studioid" value="$PARAM[studioid]" />
      </include>
      <include content="Object_Flags_Content" condition="!Skin.HasSetting(MonochromeFlags)">
        <param name="container" value="$PARAM[container]" />
        <param name="source" value="$PARAM[source]" />
        <param name="directory" value="color" />
        <param name="align" value="$PARAM[align]" />
        <param name="colordiffuse" value="panel_fg_100" />
        <param name="ratings" value="$PARAM[ratings]" />
        <param name="fps" value="$PARAM[fps]" />
        <param name="studioid" value="$PARAM[studioid]" />
      </include>
    </definition>
  </include>
  <include name="Object_Flags_Content">
    <param name="container" default="" />
    <param name="source" default="ListItem." />
    <param name="directory" default="color" />
    <param name="align" default="right" />
    <param name="colordiffuse" default="panel_fg_100" />
    <param name="ratings" default="false" />
    <param name="fps" default="false" />
    <param name="studioid" default="90707" />
    <definition>
      <control type="grouplist">
        <visible>!Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)</visible>
        <visible>!Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
        <visible>!$PARAM[container]ListItem.IsParentFolder</visible>
        <animation effect="fade" start="0" end="100" delay="30" time="1" reversible="false">Visible</animation>
        <right>30</right>
        <left>-30</left>
        <height>120</height>
        <orientation>horizontal</orientation>
        <align>$PARAM[align]</align>
        <itemgap>0</itemgap>
        <centertop>50%</centertop>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]VideoResolution,flags/$PARAM[directory]/resolution/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]VideoResolution) + !String.StartsWith($PARAM[container]$PARAM[source]Path,videodb://movies/sets)</visible>
        </control>
        <control type="group">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <visible>!String.IsEmpty(Player.Process(VideoFPS)) + Integer.IsGreater(Player.Process(VideoFPS),0)</visible>
          <visible>$PARAM[fps]</visible>
          <control type="image">
            <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/fps.png</texture>
            <aspectratio align="right">keep</aspectratio>
          </control>
          <control type="label">
            <left>21</left>
            <width>64</width>
            <height>24</height>
            <bottom>2</bottom>
            <textcolor>ff8f9799</textcolor>
            <font>font_fps</font>
            <label>$INFO[Player.Process(VideoFPS)]</label>
            <align>center</align>
            <aligny>center</aligny>
          </control>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]VideoCodec,flags/$PARAM[directory]/source/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]VideoCodec)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]VideoAspect,flags/$PARAM[directory]/aspectratio/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]VideoAspect)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]AudioCodec,flags/$PARAM[directory]/audio/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]AudioCodec)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]AudioChannels,flags/$PARAM[directory]/channels/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]AudioChannels)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]">$INFO[$PARAM[container]$PARAM[source]FileExtension,flags/$PARAM[directory]/audio/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>Container.Content(songs)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/4K.png</texture>
          <visible>[String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,2160p) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,UHD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,UltraHD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,Ultra-HD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,4K)]</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/HDR.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,HDR)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>48</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/audio/atmos.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,atmos)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>48</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/audio/dtsx.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dtsx) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dts-x) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dts:x)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/bluray.png</texture>
          <visible>[String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,blu-ray) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,bluray) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,bdrip) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,bd25) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,bd50)]</visible>
          <visible>![String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,2160p) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,UHD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,UltraHD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,Ultra-HD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,4K)]</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/dvd.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dvd)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/hdtv.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,hdtv) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,pdtv) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dsr)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/web-dl.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,web-dl) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,webdl) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,WEBRip)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/3D.png</texture>
          <visible>$PARAM[container]$PARAM[source]IsStereoscopic</visible>
        </control>
        <control type="group">
          <width>1000</width>
          <left>430</left>
          <height>32</height>
          <centertop>50%</centertop>
          <visible>$PARAM[ratings]</visible>
          <control type="group">
            <include content="Object_Ratings" condition="Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(Home.xml)">
              <param name="directory" value="color" />
              <param name="align" value="left" />
              <param name="width" value="1400" />
              <param name="rottentomatoes" value="true" />
              <param name="imdbvotes" value="true" />
              <param name="usermeter" value="false" />
              <param name="imdb" value="true" />
              <param name="tmdb" value="true" />
              <param name="tvdb" value="true" />
              <param name="metacritic" value="true" />
              <param name="oscars" value="true" />
              <param name="top250" value="false" />
              <param name="plot" value="false" />
              <param name="studio" value="true" />
              <param name="studioid" value="$PARAM[studioid]" />
            </include>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Ratings">
    <param name="directory" default="color" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="tvdb" default="false" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="false" />
    <param name="studio" default="false" />
    <param name="studioid" default="90708" />
    <param name="studiotop" default="-12" />
    <param name="studioheight" default="100" />
    <param name="studiowidth" default="100" />
    <definition>
      <include content="Object_Ratings_Content" condition="!Skin.HasSetting(MonochromeFlags)">
        <param name="directory" value="$PARAM[directory]" />
        <param name="colordiffuse" value="main_fg_100" />
        <param name="align" value="$PARAM[align]" />
        <param name="width" value="$PARAM[width]" />
        <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
        <param name="imdbvotes" value="$PARAM[imdbvotes]" />
        <param name="usermeter" value="$PARAM[usermeter]" />
        <param name="imdb" value="$PARAM[imdb]" />
        <param name="tmdb" value="$PARAM[tmdb]" />
        <param name="tvdb" value="$PARAM[tvdb]" />
        <param name="metacritic" value="$PARAM[metacritic]" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
        <param name="studio" value="$PARAM[studio]" />
        <param name="studioid" value="$PARAM[studioid]" />
        <param name="studiotop" value="$PARAM[studiotop]" />
        <param name="studioheight" value="$PARAM[studioheight]" />
        <param name="studiowidth" value="$PARAM[studiowidth]" />
      </include>
      <include content="Object_Ratings_Content" condition="Skin.HasSetting(MonochromeFlags)">
        <param name="directory" value="monochrome" />
        <param name="colordiffuse" value="panel_fg_100" />
        <param name="align" value="$PARAM[align]" />
        <param name="width" value="$PARAM[width]" />
        <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
        <param name="imdbvotes" value="$PARAM[imdbvotes]" />
        <param name="usermeter" value="$PARAM[usermeter]" />
        <param name="imdb" value="$PARAM[imdb]" />
        <param name="tmdb" value="$PARAM[tmdb]" />
        <param name="tvdb" value="$PARAM[tvdb]" />
        <param name="metacritic" value="$PARAM[metacritic]" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
        <param name="studio" value="$PARAM[studio]" />
        <param name="studioid" value="$PARAM[studioid]" />
        <param name="studiodirectory" value="white" />
        <param name="studiotop" value="$PARAM[studiotop]" />
        <param name="studioheight" value="$PARAM[studioheight]" />
        <param name="studiowidth" value="$PARAM[studiowidth]" />
      </include>
    </definition>
  </include>
  <include name="Object_Ratings_Content">
    <param name="directory" default="monochrome" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="tvdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="true" />
    <param name="plot" default="false" />
    <param name="studio" default="false" />
    <param name="studioid" default="90709" />
    <param name="trakt" default="true" />
    <param name="star" default="true" />
    <param name="studiodirectory" default="coloured" />
    <param name="studiotop" default="-12" />
    <param name="studioheight" default="100" />
    <param name="studiowidth" default="100" />
    <definition>
      <control type="grouplist">
        <width>$PARAM[width]</width>
        <right>0</right>
        <align>$PARAM[align]</align>
        <orientation>horizontal</orientation>
        <itemgap>8</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <height>184</height>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/oscar.png</texture>
          <visible>[$EXP[tmdbu] + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Oscar) + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Won)] </visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[Label_Oscars,, ]</label>
          <visible>[$EXP[tmdbu] + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Oscar) + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Won)] </visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/metacritic.png</texture>
          <visible>!String.IsEmpty(ListItem.Property(Metacritic_Rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.MetaCritic_Rating))] </visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[metacritic_rating]</label>
          <visible>!String.IsEmpty(ListItem.Property(Metacritic_Rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.MetaCritic_Rating))] </visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/popcorn.png</texture>
          <visible>[Integer.IsGreater(ListItem.Property(rottentomatoes_usermeter),59) | [$EXP[tmdbu] + Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_UserMeter),59)]] + [!String.IsEmpty(ListItem.Property(rottentomatoes_usermeter)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter))]</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>8</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/spilt.png</texture>
          <visible>[!String.IsEmpty(ListItem.Property(rottentomatoes_usermeter)) + !Integer.IsGreater(ListItem.Property(rottentomatoes_usermeter),59)] | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter)) + !Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_UserMeter),59)]</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[rating_usermeter]</label>
          <visible>!String.IsEmpty(ListItem.Property(rottentomatoes_usermeter)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter))]</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtrotten.png</texture>
          <visible>[Integer.IsGreater(ListItem.Property(rottentomatoes_rating),0) + !Integer.IsGreater(ListItem.Property(rottentomatoes_rating),59) ] | [$EXP[tmdbu] + Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),0) + !Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),59) ]</visible>
          <visible>!String.IsEmpty(ListItem.Property(rottentomatoes_rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <visible>[Integer.IsGreater(ListItem.Property(rottentomatoes_rating),59) + !Integer.IsGreater(ListItem.Property(rottentomatoes_rating),74)] | [$EXP[tmdbu] + Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),59) + !Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),74)]</visible>
          <visible>!String.IsEmpty(ListItem.Property(rottentomatoes_rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/certified.png</texture>
          <visible>!String.IsEmpty(ListItem.Property(rottentomatoes_rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))]</visible>
          <visible>Integer.IsGreater(ListItem.Property(rottentomatoes_rating),74) | Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[rating_rtmeter]</label>
          <visible>!String.IsEmpty(ListItem.Property(rottentomatoes_rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))]</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tmdb.png</texture>
          <visible>!String.IsEmpty(ListItem.Property(tmdb_rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.TMDb_Rating))]</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[rating_tmdb]</label>
          <visible>!String.IsEmpty(ListItem.Property(tmdb_rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.TMDb_Rating))]</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tvdb.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB))</visible>
          <visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
          <visible>$PARAM[tvdb]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Rating.TVDB), , ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB))</visible>
          <visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
          <visible>$PARAM[tvdb]</visible>
        </control>

        <control type="image">
          <top>0</top>
          <left>-10</left>
          <width>52</width>
          <height>52</height>
          <texture colordiffuse="$PARAM[colordiffuse]">special://skin/extras/icons/trakttv.png</texture>
          <visible>$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_rating)) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_votes))]</visible>
          <visible>!String.IsEqual(Window(Home).Property(TMDBHelper.ListItem.trakt_rating),0.0)</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + Skin.HasSetting(MonochromeFlags)</visible>
          <visible>$PARAM[trakt]</visible>
        </control>
        <control type="image">
          <top>0</top>
          <left>-10</left>
          <width>52</width>
          <height>52</height>
          <texture colordiffuse="red">special://skin/extras/icons/trakttv.png</texture>
          <visible>$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_rating)) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_votes))]</visible>
          <visible>!String.IsEqual(Window(Home).Property(TMDBHelper.ListItem.trakt_rating),0.0)</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + !Skin.HasSetting(MonochromeFlags)</visible>
          <visible>$PARAM[trakt]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <left>-10</left>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <visible>!String.IsEqual(Window(Home).Property(TMDBHelper.ListItem.trakt_rating),0.0)</visible>
          <label>$INFO[Window(Home).Property(TMDBHelper.ListItem.trakt_rating), , ]$INFO[Window(Home).Property(TMDbHelper.ListItem.trakt_votes), (, $LOCALIZE[205])]</label>
          <visible>$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_rating)) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_votes))]</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + !Skin.HasSetting(Ratings.TraktVotes)</visible>
          <visible>$PARAM[trakt]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <left>-10</left>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(TMDBHelper.ListItem.trakt_rating), , ]</label>
          <visible>!String.IsEqual(Window(Home).Property(TMDBHelper.ListItem.trakt_rating),0.0)</visible>
          <visible>$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_rating)) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_votes))]</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + Skin.HasSetting(Ratings.TraktVotes)</visible>
          <visible>$PARAM[trakt]</visible>
        </control>
        <control type="image">
          <top>-8</top>
          <left>-10</left>
          <width>64</width>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/star10.png</texture>
          <visible>$PARAM[star]</visible>
          <visible>!String.IsEmpty(ListItem.Rating) | [Control.IsVisible(1505) + !String.IsEmpty(Container(1505).ListItem.Rating) + ControlGroup(505).HasFocus] | [Control.IsVisible(1506) + !String.IsEmpty(Container(1506).ListItem.Rating) + ControlGroup(506).HasFocus]</visible>
          <visible>!Skin.HasSetting(Ratings.Star) + Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="image">
          <top>-8</top>
          <left>-10</left>
          <width>64</width>
          <height>64</height>
          <texture colordiffuse="red">flags/star10.png</texture>
          <visible>$PARAM[star]</visible>
          <visible>!String.IsEmpty(ListItem.Rating) | [Control.IsVisible(1505) + !String.IsEmpty(Container(1505).ListItem.Rating) + ControlGroup(505).HasFocus] | [Control.IsVisible(1506) + !String.IsEmpty(Container(1506).ListItem.Rating) + ControlGroup(506).HasFocus]</visible>
          <visible>!Skin.HasSetting(Ratings.Star) + !Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
	  <left>-10</left>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <font>font_tiny</font>
          <label>$VAR[star_ratings]</label>
          <visible>$PARAM[star]</visible>
          <visible>!String.IsEmpty(ListItem.Rating) | [Control.IsVisible(1505) + !String.IsEmpty(Container(1505).ListItem.Rating) + ControlGroup(505).HasFocus] | [Control.IsVisible(1506) + !String.IsEmpty(Container(1506).ListItem.Rating) + ControlGroup(506).HasFocus]</visible>
          <visible>!Skin.HasSetting(Ratings.Star)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>40</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/imdbicon.png</texture>
	  <visible>[$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Votes))]]</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[imdb_ratings] $VAR[imdb_votes]</label>
	  <visible>[$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Votes))]]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB) + Skin.HasSetting(Ratings.IMDBVotes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[imdb_ratings]</label>
	  <visible>[$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Rating))]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB) + !Skin.HasSetting(Ratings.IMDBVotes)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>72</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">imdbtop250.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Top250))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB250) + Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>72</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">imdb250_colored.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Top250))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB250) + !Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(TMDBHelper.ListItem.Top250),#,]</label>
          <visible>Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.Top250),0)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Top250))</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB250)</visible>
        </control>
        <control type="label">
          <left>5</left>
          <visible>Skin.HasSetting(DisableWidgetPlot)</visible>
          <textcolor>main_fg_70</textcolor>
          <height>20</height>
          <top>15</top>
          <align>left</align>
          <width min="100" max="1500">auto</width>
          <label>$INFO[ListItem.Plot]</label>
          <scroll>true</scroll>
        </control>
        <control type="image" id="1$PARAM[studioid]">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Network.1.Name))">Conditional</animation>
          <top>$PARAM[studiotop]</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[Window(Home).Property(TMDbHelper.ListItem.Network.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
          <aspectratio>keep</aspectratio>
          <height>$PARAM[studioheight]</height>
          <width>$PARAM[studiowidth]</width>
          <visible>$PARAM[studio]</visible>
          <visible>Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(Container(5055).ListItem.DBType,movie)</visible>
          <visible>![Control.HasFocus(300) | Control.HasFocus(30222)] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Network.1.Name)) + !String.IsEmpty(Control.GetLabel(1$PARAM[studioid]))</visible>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        </control>
        <control type="image" id="2$PARAM[studioid]">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Network.1.Name))">Conditional</animation>
          <top>$PARAM[studiotop]</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[Window(Home).Property(TMDbHelper.ListItem.Network.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
          <aspectratio>keep</aspectratio>
          <height>$PARAM[studioheight]</height>
          <width>$PARAM[studiowidth]</width>
          <visible>$PARAM[studio]</visible>
          <visible>Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>String.IsEqual(ListItem.DBType,episode) + !String.IsEqual(Container(5055).ListItem.DBType,movie)</visible>
          <visible>![Control.HasFocus(300) | Control.HasFocus(30222)] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Network.1.Name)) + !String.IsEmpty(Control.GetLabel(2$PARAM[studioid]))</visible>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        </control>
        <control type="image" id="3$PARAM[studioid]">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Studio.1.Name))">Conditional</animation>
          <top>$PARAM[studiotop]</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[Window(Home).Property(TMDbHelper.ListItem.Studio.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
          <aspectratio>keep</aspectratio>
          <height>$PARAM[studioheight]</height>
          <width>$PARAM[studiowidth]</width>
          <visible>$PARAM[studio]</visible>
          <visible>Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>String.IsEqual(ListItem.DBType,movie) + !String.IsEqual(Container(5055).ListItem.DBType,movie)</visible>
          <visible>![Control.HasFocus(300) | Control.HasFocus(30222)] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Studio.1.Name)) + !String.IsEmpty(Control.GetLabel(3$PARAM[studioid]))</visible>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Ratings_TMDB">
    <param name="directory" default="color" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="tvdb" default="false" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="false" />
    <param name="studio" default="false" />
    <param name="studioid" default="90708" />
    <param name="studiotop" default="-12" />
    <param name="studioheight" default="100" />
    <param name="studiowidth" default="100" />
    <definition>
      <include content="Object_Ratings_TMDB_Content" condition="!Skin.HasSetting(MonochromeFlags)">
        <param name="directory" value="$PARAM[directory]" />
        <param name="colordiffuse" value="main_fg_100" />
        <param name="align" value="$PARAM[align]" />
        <param name="width" value="$PARAM[width]" />
        <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
        <param name="imdbvotes" value="$PARAM[imdbvotes]" />
        <param name="usermeter" value="$PARAM[usermeter]" />
        <param name="imdb" value="$PARAM[imdb]" />
        <param name="tmdb" value="$PARAM[tmdb]" />
        <param name="tvdb" value="$PARAM[tvdb]" />
        <param name="metacritic" value="$PARAM[metacritic]" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
        <param name="studio" value="$PARAM[studio]" />
        <param name="studioid" value="$PARAM[studioid]" />
        <param name="studiotop" value="$PARAM[studiotop]" />
        <param name="studioheight" value="$PARAM[studioheight]" />
        <param name="studiowidth" value="$PARAM[studiowidth]" />
      </include>
      <include content="Object_Ratings_TMDB_Content" condition="Skin.HasSetting(MonochromeFlags)">
        <param name="directory" value="monochrome" />
        <param name="colordiffuse" value="panel_fg_100" />
        <param name="align" value="$PARAM[align]" />
        <param name="width" value="$PARAM[width]" />
        <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
        <param name="imdbvotes" value="$PARAM[imdbvotes]" />
        <param name="usermeter" value="$PARAM[usermeter]" />
        <param name="imdb" value="$PARAM[imdb]" />
        <param name="tmdb" value="$PARAM[tmdb]" />
        <param name="tvdb" value="$PARAM[tvdb]" />
        <param name="metacritic" value="$PARAM[metacritic]" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
        <param name="studio" value="$PARAM[studio]" />
        <param name="studioid" value="$PARAM[studioid]" />
        <param name="studiodirectory" value="white" />
        <param name="studiotop" value="$PARAM[studiotop]" />
        <param name="studioheight" value="$PARAM[studioheight]" />
        <param name="studiowidth" value="$PARAM[studiowidth]" />
      </include>
    </definition>
  </include>
  <include name="Object_Ratings_TMDB_Content">
    <param name="directory" default="monochrome" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="tvdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="true" />
    <param name="plot" default="false" />
    <param name="studio" default="false" />
    <param name="studioid" default="90709" />
    <param name="trakt" default="true" />
    <param name="star" default="true" />
    <param name="studiodirectory" default="coloured" />
    <param name="studiotop" default="-12" />
    <param name="studioheight" default="100" />
    <param name="studiowidth" default="100" />
    <definition>
      <control type="grouplist">
        <width>$PARAM[width]</width>
        <right>0</right>
        <align>$PARAM[align]</align>
        <orientation>horizontal</orientation>
        <itemgap>8</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <height>184</height>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/oscar.png</texture>
          <visible>[$EXP[tmdbu] + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Oscar) + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Won)] </visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[Label_Oscars,, ]</label>
          <visible>[$EXP[tmdbu] + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Oscar) + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Won)] </visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/metacritic.png</texture>
          <visible>!String.IsEmpty(Container.ListItem.Property(Metacritic_Rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.MetaCritic_Rating))] </visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[metacritic_rating_container]</label>
          <visible>!String.IsEmpty(Container.ListItem.Property(Metacritic_Rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.MetaCritic_Rating))] </visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/popcorn.png</texture>
          <visible>[Integer.IsGreater(Container.ListItem.Property(rottentomatoes_usermeter),59) | [$EXP[tmdbu] + Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_UserMeter),59)]] + [!String.IsEmpty(Container.ListItem.Property(rottentomatoes_usermeter)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter))]</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>8</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/spilt.png</texture>
          <visible>[!String.IsEmpty(Container.ListItem.Property(rottentomatoes_usermeter)) + !Integer.IsGreater(Container.ListItem.Property(rottentomatoes_usermeter),59)] | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter)) + !Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_UserMeter),59)]</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[rating_usermeter_container]</label>
          <visible>!String.IsEmpty(Container.ListItem.Property(rottentomatoes_usermeter)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter))]</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtrotten.png</texture>
          <visible>[Integer.IsGreater(Container.ListItem.Property(rottentomatoes_rating),0) + !Integer.IsGreater(Container.ListItem.Property(rottentomatoes_rating),59) ] | [$EXP[tmdbu] + Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),0) + !Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),59) ]</visible>
          <visible>!String.IsEmpty(Container.ListItem.Property(rottentomatoes_rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <visible>[Integer.IsGreater(Container.ListItem.Property(rottentomatoes_rating),59) + !Integer.IsGreater(Container.ListItem.Property(rottentomatoes_rating),74)] | [$EXP[tmdbu] + Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),59) + !Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),74)]</visible>
          <visible>!String.IsEmpty(Container.ListItem.Property(rottentomatoes_rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/certified.png</texture>
          <visible>!String.IsEmpty(Container.ListItem.Property(rottentomatoes_rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))]</visible>
          <visible>Integer.IsGreater(Container.ListItem.Property(rottentomatoes_rating),74) | Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.RottenTomatoes_Rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[rating_rtmeter_container]</label>
          <visible>!String.IsEmpty(Container.ListItem.Property(rottentomatoes_rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))]</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tmdb.png</texture>
          <visible>!String.IsEmpty(Container.ListItem.Property(tmdb_rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.TMDb_Rating))]</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[rating_tmdb_container]</label>
          <visible>!String.IsEmpty(Container.ListItem.Property(tmdb_rating)) | [$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.TMDb_Rating))]</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tvdb.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB))</visible>
          <visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
          <visible>$PARAM[tvdb]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Rating.TVDB), , ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB))</visible>
          <visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
          <visible>$PARAM[tvdb]</visible>
        </control>

        <control type="image">
          <top>0</top>
          <left>-10</left>
          <width>52</width>
          <height>52</height>
          <texture colordiffuse="$PARAM[colordiffuse]">special://skin/extras/icons/trakttv.png</texture>
          <visible>$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_rating)) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_votes))]</visible>
          <visible>!String.IsEqual(Window(Home).Property(TMDBHelper.ListItem.trakt_rating),0.0)</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + Skin.HasSetting(MonochromeFlags)</visible>
          <visible>$PARAM[trakt]</visible>
        </control>
        <control type="image">
          <top>0</top>
          <left>-10</left>
          <width>52</width>
          <height>52</height>
          <texture colordiffuse="red">special://skin/extras/icons/trakttv.png</texture>
          <visible>$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_rating)) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_votes))]</visible>
          <visible>!String.IsEqual(Window(Home).Property(TMDBHelper.ListItem.trakt_rating),0.0)</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + !Skin.HasSetting(MonochromeFlags)</visible>
          <visible>$PARAM[trakt]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <left>-10</left>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <visible>!String.IsEqual(Window(Home).Property(TMDBHelper.ListItem.trakt_rating),0.0)</visible>
          <label>$INFO[Window(Home).Property(TMDBHelper.ListItem.trakt_rating), , ]$INFO[Window(Home).Property(TMDbHelper.ListItem.trakt_votes), (, $LOCALIZE[205])]</label>
          <visible>$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_rating)) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_votes))]</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + !Skin.HasSetting(Ratings.TraktVotes)</visible>
          <visible>$PARAM[trakt]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <left>-10</left>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(TMDBHelper.ListItem.trakt_rating), , ]</label>
          <visible>!String.IsEqual(Window(Home).Property(TMDBHelper.ListItem.trakt_rating),0.0)</visible>
          <visible>$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_rating)) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.trakt_votes))]</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + Skin.HasSetting(Ratings.TraktVotes)</visible>
          <visible>$PARAM[trakt]</visible>
        </control>
        <control type="image">
          <top>-8</top>
          <left>-10</left>
          <width>64</width>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/star10.png</texture>
          <visible>$PARAM[star]</visible>
          <visible>!String.IsEmpty(ListItem.Rating) | [Control.IsVisible(1505) + !String.IsEmpty(Container(1505).ListItem.Rating) + ControlGroup(505).HasFocus] | [Control.IsVisible(1506) + !String.IsEmpty(Container(1506).ListItem.Rating) + ControlGroup(506).HasFocus]</visible>
          <visible>!Skin.HasSetting(Ratings.Star) + Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="image">
          <top>-8</top>
          <left>-10</left>
          <width>64</width>
          <height>64</height>
          <texture colordiffuse="red">flags/star10.png</texture>
          <visible>$PARAM[star]</visible>
          <visible>!String.IsEmpty(ListItem.Rating) | [Control.IsVisible(1505) + !String.IsEmpty(Container(1505).ListItem.Rating) + ControlGroup(505).HasFocus] | [Control.IsVisible(1506) + !String.IsEmpty(Container(1506).ListItem.Rating) + ControlGroup(506).HasFocus]</visible>
          <visible>!Skin.HasSetting(Ratings.Star) + !Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
	  <left>-10</left>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <font>font_tiny</font>
          <label>$VAR[star_ratings_container]</label>
          <visible>$PARAM[star]</visible>
          <visible>!String.IsEmpty(ListItem.Rating) | [Control.IsVisible(1505) + !String.IsEmpty(Container(1505).ListItem.Rating) + ControlGroup(505).HasFocus] | [Control.IsVisible(1506) + !String.IsEmpty(Container(1506).ListItem.Rating) + ControlGroup(506).HasFocus]</visible>
          <visible>!Skin.HasSetting(Ratings.Star)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>40</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/imdbicon.png</texture>
	  <visible>[$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Votes))]]</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[imdb_ratings] $VAR[imdb_votes]</label>
	  <visible>[$EXP[tmdbu] + [!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Votes))]]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB) + Skin.HasSetting(Ratings.IMDBVotes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[imdb_ratings]</label>
	  <visible>[$EXP[tmdbu] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.IMDb_Rating))]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB) + !Skin.HasSetting(Ratings.IMDBVotes)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>72</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">imdbtop250.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Top250))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB250) + Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>72</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">imdb250_colored.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Top250))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB250) + !Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(TMDBHelper.ListItem.Top250),#,]</label>
          <visible>Integer.IsGreater(Window(home).Property(TMDBHelper.ListItem.Top250),0)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Top250))</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB250)</visible>
        </control>
        <control type="label">
          <left>5</left>
          <visible>Skin.HasSetting(DisableWidgetPlot)</visible>
          <textcolor>main_fg_70</textcolor>
          <height>20</height>
          <top>15</top>
          <align>left</align>
          <width min="100" max="1500">auto</width>
          <label>$INFO[ListItem.Plot]</label>
          <scroll>true</scroll>
        </control>
        <control type="image" id="1$PARAM[studioid]">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Network.1.Name))">Conditional</animation>
          <top>$PARAM[studiotop]</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[Window(Home).Property(TMDbHelper.ListItem.Network.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
          <aspectratio>keep</aspectratio>
          <height>$PARAM[studioheight]</height>
          <width>$PARAM[studiowidth]</width>
          <visible>$PARAM[studio]</visible>
          <visible>Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(Container(5055).ListItem.DBType,movie)</visible>
          <visible>![Control.HasFocus(300) | Control.HasFocus(30222)] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Network.1.Name)) + !String.IsEmpty(Control.GetLabel(1$PARAM[studioid]))</visible>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        </control>
        <control type="image" id="2$PARAM[studioid]">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Network.1.Name))">Conditional</animation>
          <top>$PARAM[studiotop]</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[Window(Home).Property(TMDbHelper.ListItem.Network.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
          <aspectratio>keep</aspectratio>
          <height>$PARAM[studioheight]</height>
          <width>$PARAM[studiowidth]</width>
          <visible>$PARAM[studio]</visible>
          <visible>Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>String.IsEqual(ListItem.DBType,episode) + !String.IsEqual(Container(5055).ListItem.DBType,movie)</visible>
          <visible>![Control.HasFocus(300) | Control.HasFocus(30222)] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Network.1.Name)) + !String.IsEmpty(Control.GetLabel(2$PARAM[studioid]))</visible>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        </control>
        <control type="image" id="3$PARAM[studioid]">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Studio.1.Name))">Conditional</animation>
          <top>$PARAM[studiotop]</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[Window(Home).Property(TMDbHelper.ListItem.Studio.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
          <aspectratio>keep</aspectratio>
          <height>$PARAM[studioheight]</height>
          <width>$PARAM[studiowidth]</width>
          <visible>$PARAM[studio]</visible>
          <visible>Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>String.IsEqual(ListItem.DBType,movie) + !String.IsEqual(Container(5055).ListItem.DBType,movie)</visible>
          <visible>![Control.HasFocus(300) | Control.HasFocus(30222)] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Studio.1.Name)) + !String.IsEmpty(Control.GetLabel(3$PARAM[studioid]))</visible>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Ratings_Container">
    <param name="id" default="" />
    <param name="directory" default="color" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="false" />
    <param name="studio" default="false" />
    <param name="studioid" default="90708" />
    <param name="studiotop" default="-12" />
    <param name="studioheight" default="100" />
    <param name="studiowidth" default="100" />
    <definition>
      <include content="Object_Ratings_Container_Content" condition="!Skin.HasSetting(MonochromeFlags)">
        <param name="id" value="$PARAM[id]" />
        <param name="directory" value="$PARAM[directory]" />
        <param name="colordiffuse" value="main_fg_100" />
        <param name="align" value="$PARAM[align]" />
        <param name="width" value="$PARAM[width]" />
        <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
        <param name="imdbvotes" value="$PARAM[imdbvotes]" />
        <param name="usermeter" value="$PARAM[usermeter]" />
        <param name="imdb" value="$PARAM[imdb]" />
        <param name="tmdb" value="$PARAM[tmdb]" />
        <param name="metacritic" value="$PARAM[metacritic]" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
        <param name="studio" value="$PARAM[studio]" />
        <param name="studioid" value="$PARAM[studioid]" />
        <param name="studiotop" value="$PARAM[studiotop]" />
        <param name="studioheight" value="$PARAM[studioheight]" />
        <param name="studiowidth" value="$PARAM[studiowidth]" />
      </include>
      <include content="Object_Ratings_Container_Content" condition="Skin.HasSetting(MonochromeFlags)">
        <param name="id" value="$PARAM[id]" />
        <param name="directory" value="monochrome" />
        <param name="colordiffuse" value="panel_fg_100" />
        <param name="align" value="$PARAM[align]" />
        <param name="width" value="$PARAM[width]" />
        <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
        <param name="imdbvotes" value="$PARAM[imdbvotes]" />
        <param name="usermeter" value="$PARAM[usermeter]" />
        <param name="imdb" value="$PARAM[imdb]" />
        <param name="tmdb" value="$PARAM[tmdb]" />
        <param name="metacritic" value="$PARAM[metacritic]" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
        <param name="studio" value="$PARAM[studio]" />
        <param name="studioid" value="$PARAM[studioid]" />
        <param name="studiodirectory" value="white" />
        <param name="studiotop" value="$PARAM[studiotop]" />
        <param name="studioheight" value="$PARAM[studioheight]" />
        <param name="studiowidth" value="$PARAM[studiowidth]" />
      </include>
    </definition>
  </include>
  <include name="Object_Ratings_Container_Content">
    <param name="id" default="" />
    <param name="directory" default="monochrome" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="true" />
    <param name="plot" default="false" />
    <param name="studio" default="false" />
    <param name="studioid" default="90709" />
    <param name="trakt" default="true" />
    <param name="star" default="true" />
    <param name="studiodirectory" default="coloured" />
    <param name="studiotop" default="-12" />
    <param name="studioheight" default="100" />
    <param name="studiowidth" default="100" />
    <definition>
      <control type="grouplist">
        <width>$PARAM[width]</width>
        <right>0</right>
        <align>$PARAM[align]</align>
        <orientation>horizontal</orientation>
        <itemgap>8</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <height>184</height>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/oscar.png</texture>
          <visible>String.Contains(Container($PARAM[id]).ListItem.Property(Awards),Oscar) + String.Contains(Container($PARAM[id]).ListItem.Property(Awards),Won)</visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[Label_Oscars_$PARAM[id],, ]</label>
          <visible>String.Contains(Container($PARAM[id]).ListItem.Property(Awards),Oscar) + String.Contains(Container($PARAM[id]).ListItem.Property(Awards),Won)</visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/metacritic.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Metacritic_Rating))</visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[metacritic_rating_$PARAM[id]]</label>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Metacritic_Rating))</visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/popcorn.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(rottentomatoes_usermeter)) + Integer.IsGreater(Container($PARAM[id]).ListItem.Property(rottentomatoes_usermeter),59)</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>8</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/spilt.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(rottentomatoes_usermeter)) + !Integer.IsGreater(Container($PARAM[id]).ListItem.Property(rottentomatoes_usermeter),59)</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[rating_usermeter_$PARAM[id]]</label>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(rottentomatoes_usermeter))</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtrotten.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(rottentomatoes_rating)) + Integer.IsGreater(Container($PARAM[id]).ListItem.Property(rottentomatoes_rating),0) + !Integer.IsGreater(Container($PARAM[id]).ListItem.Property(rottentomatoes_rating),59)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(rottentomatoes_rating)) + Integer.IsGreater(Container($PARAM[id]).ListItem.Property(rottentomatoes_rating),59) + !Integer.IsGreater(Container($PARAM[id]).ListItem.Property(rottentomatoes_rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/certified.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(rottentomatoes_rating)) + Integer.IsGreater(Container($PARAM[id]).ListItem.Property(rottentomatoes_rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[rating_rtmeter_$PARAM[id]]</label>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(rottentomatoes_rating))</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tmdb.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(tmdb_rating))</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[rating_tmdb_$PARAM[id]]</label>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(tmdb_rating))</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>

        <control type="image">
          <top>0</top>
          <left>-10</left>
          <width>52</width>
          <height>52</height>
          <texture colordiffuse="$PARAM[colordiffuse]">special://skin/extras/icons/trakttv.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Trakt_Rating)) | !String.IsEmpty(Container($PARAM[id]).ListItem.Property(Trakt_Votes))</visible>
          <visible>!String.IsEqual(Container($PARAM[id]).ListItem.Property(Trakt_Rating),0.0)</visible>
          <visible>$PARAM[trakt]</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <left>-10</left>
          <width>52</width>
          <height>52</height>
          <texture colordiffuse="red">special://skin/extras/icons/trakttv.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Trakt_Rating)) | !String.IsEmpty(Container($PARAM[id]).ListItem.Property(Trakt_Votes))</visible>
          <visible>!String.IsEqual(Container($PARAM[id]).ListItem.Property(Trakt_Rating),0.0)</visible>
          <visible>$PARAM[trakt]</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + !Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <left>-10</left>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Container($PARAM[id]).ListItem.Property(Trakt_Rating), , ]$INFO[Container($PARAM[id]).ListItem.Property(Trakt_Votes), (, $LOCALIZE[205])]</label>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Trakt_Rating)) | !String.IsEmpty(Container($PARAM[id]).ListItem.Property(Trakt_Votes))</visible>
          <visible>!String.IsEqual(Container($PARAM[id]).ListItem.Property(Trakt_Rating),0.0)</visible>
          <visible>$PARAM[trakt]</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + !Skin.HasSetting(Ratings.TraktVotes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <left>-10</left>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Container($PARAM[id]).ListItem.Property(Trakt_Rating), , ]</label>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Trakt_Rating)) | !String.IsEmpty(Container($PARAM[id]).ListItem.Property(Trakt_Votes))</visible>
          <visible>!String.IsEqual(Container($PARAM[id]).ListItem.Property(Trakt_Rating),0.0)</visible>
          <visible>$PARAM[trakt]</visible>
          <visible>!Skin.HasSetting(Ratings.Trakt) + Skin.HasSetting(Ratings.TraktVotes)</visible>
        </control>
        <control type="image">
          <top>-8</top>
          <left>-10</left>
          <width>64</width>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/star10.png</texture>
          <visible>$PARAM[star]</visible>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Rating)</visible>
          <visible>!Skin.HasSetting(Ratings.Star) + Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="image">
          <top>-8</top>
          <left>-10</left>
          <width>64</width>
          <height>64</height>
          <texture colordiffuse="red">flags/star10.png</texture>
          <visible>$PARAM[star]</visible>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Rating)</visible>
          <visible>!Skin.HasSetting(Ratings.Star) + !Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
	  <left>-10</left>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <font>font_tiny</font>
          <label>$VAR[star_ratings_$PARAM[id]]</label>
          <visible>$PARAM[star]</visible>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Rating)</visible>
          <visible>!Skin.HasSetting(Ratings.Star)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>40</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/imdbicon.png</texture>
	        <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(IMDb_Rating)) | !String.IsEmpty(Container($PARAM[id]).ListItem.Property(IMDb_Votes))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[imdb_ratings_$PARAM[id]] $VAR[imdb_votes_$PARAM[id]]</label>
	        <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(IMDb_Rating)) | !String.IsEmpty(Container($PARAM[id]).ListItem.Property(IMDb_Votes))</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB) + Skin.HasSetting(Ratings.IMDBVotes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[imdb_ratings_$PARAM[id]]</label>
	        <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(IMDb_Rating))</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB) + !Skin.HasSetting(Ratings.IMDBVotes)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>72</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">imdbtop250.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Top250))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB250) + Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>72</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">imdb250_colored.png</texture>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Top250))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB250) + !Skin.HasSetting(MonochromeFlags)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Container($PARAM[id]).ListItem.Property(Top250),#,]</label>
          <visible>Integer.IsGreater(Container($PARAM[id]).ListItem.Property(Top250),0)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Top250))</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB250)</visible>
        </control>
        <control type="label">
          <left>5</left>
          <visible>Skin.HasSetting(DisableWidgetPlot)</visible>
          <textcolor>main_fg_70</textcolor>
          <height>20</height>
          <top>15</top>
          <align>left</align>
          <width min="100" max="1500">auto</width>
          <label>$INFO[Container($PARAM[id]).ListItem.Plot]</label>
          <scroll>true</scroll>
        </control>
        <control type="image" id="1$PARAM[studioid]">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Network.1.Name))">Conditional</animation>
          <top>$PARAM[studiotop]</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[Container($PARAM[id]).ListItem.Property(Network.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
          <aspectratio>keep</aspectratio>
          <height>$PARAM[studioheight]</height>
          <width>$PARAM[studiowidth]</width>
          <visible>$PARAM[studio]</visible>
          <visible>Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(Container(5055).ListItem.DBType,movie)</visible>
          <visible>![Control.HasFocus(300) | Control.HasFocus(30222)] + !String.IsEmpty(Container($PARAM[id]).ListItem.Property(Network.1.Name)) + !String.IsEmpty(Control.GetLabel(1$PARAM[studioid]))</visible>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        </control>
        <control type="image" id="2$PARAM[studioid]">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Network.1.Name))">Conditional</animation>
          <top>$PARAM[studiotop]</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[Container($PARAM[id]).ListItem.Property(Network.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
          <aspectratio>keep</aspectratio>
          <height>$PARAM[studioheight]</height>
          <width>$PARAM[studiowidth]</width>
          <visible>$PARAM[studio]</visible>
          <visible>Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>String.IsEqual(ListItem.DBType,episode) + !String.IsEqual(Container(5055).ListItem.DBType,movie)</visible>
          <visible>![Control.HasFocus(300) | Control.HasFocus(30222)] + !String.IsEmpty(Container($PARAM[id]).ListItem.Property(Network.1.Name)) + !String.IsEmpty(Control.GetLabel(2$PARAM[studioid]))</visible>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        </control>
        <control type="image" id="3$PARAM[studioid]">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(Container($PARAM[id]).ListItem.Property(Studio.1.Name))">Conditional</animation>
          <top>$PARAM[studiotop]</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[Container($PARAM[id]).ListItem.Property(Studio.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
          <aspectratio>keep</aspectratio>
          <height>$PARAM[studioheight]</height>
          <width>$PARAM[studiowidth]</width>
          <visible>$PARAM[studio]</visible>
          <visible>Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>String.IsEqual(ListItem.DBType,movie) + !String.IsEqual(Container(5055).ListItem.DBType,movie)</visible>
          <visible>![Control.HasFocus(300) | Control.HasFocus(30222)] + !String.IsEmpty(Container($PARAM[id]).ListItem.Property(Studio.1.Name)) + !String.IsEmpty(Control.GetLabel(3$PARAM[studioid]))</visible>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Studio_Logo">
    <param name="studiodirectory" default="coloured" />
    <definition>
      <control type="image" id="7878">
        <right>20</right>
        <bottom>50</bottom>
        <texture background="true">$INFO[Window(Home).Property(TMDbHelper.ListItem.Network.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
        <aspectratio>stretch</aspectratio>
        <height>108</height>
        <width>150</width>
        <visible>!String.IsEqual(ListItem.DBType,movie)</visible>
      </control>
      <control type="image" id="7878">
        <right>20</right>
        <bottom>50</bottom>
        <texture background="true">$INFO[Window(Home).Property(TMDbHelper.ListItem.Studio.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
        <aspectratio>stretch</aspectratio>
        <height>108</height>
        <width>150</width>
        <visible>String.IsEqual(ListItem.DBType,movie)</visible>
      </control>
    </definition>
  </include>
  <include name="Object_Studio_Logo_Multi_Widget">
    <param name="studiodirectory" default="coloured" />
    <definition>
      <control type="image">
        <top>-230</top>
        <left>1280</left>
        <texture colordiffuse="main_fg_100">$INFO[Container(90001).ListItem.Property(Network.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
        <height>109</height>
        <width>161</width>
        <aspectratio aligny="center" align="center">keep</aspectratio>
        <animation effect="fade" time="1000">Visible</animation>
        <visible>Skin.HasSetting(EnableTVMultiWidgetSpotlight) + Control.IsVisible(1505) + !String.IsEmpty(Container(90001).ListItem.Property(Network.1.Name))</visible>
      </control>
      <control type="image">
        <top>-230</top>
        <left>1280</left>
        <texture colordiffuse="main_fg_100">$INFO[Container(90002).ListItem.Property(Studio.1.Name),resource://resource.images.studios.$PARAM[studiodirectory]/,.png]</texture>
        <height>109</height>
        <width>161</width>
        <aspectratio aligny="center" align="center">keep</aspectratio>
        <animation effect="fade" time="1000">Visible</animation>
        <visible>Skin.HasSetting(EnableMultiWidgetSpotlight) + Control.IsVisible(1506) + !String.IsEmpty(Container(90002).ListItem.Property(Studio.1.Name))</visible>
      </control>
    </definition>
  </include>
  <include name="Object_OSD_Ratings">
    <param name="directory" default="monochrome" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="tvdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="true" />
    <definition>
      <control type="grouplist">
        <width>$PARAM[width]</width>
        <right>0</right>
        <height>32</height>
        <orientation>horizontal</orientation>
        <align>$PARAM[align]</align>
        <itemgap>8</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/oscar.png</texture>
          <visible>String.Contains(Window(Home).Property(TMDBHelper.Player.Awards),Oscar) + String.Contains(Window(Home).Property(TMDBHelper.Player.Awards),Won)</visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[Label_OSD_Oscars,, ]</label>
          <visible>String.Contains(Window(Home).Property(TMDBHelper.Player.Awards),Oscar) + String.Contains(Window(Home).Property(TMDBHelper.Player.Awards),Won)</visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/metacritic.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.MetaCritic_Rating))</visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(TMDBHelper.Player.MetaCritic_Rating), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.MetaCritic_Rating))</visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tmdb.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.TMDb_Rating))</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(TMDBHelper.Player.TMDb_Rating), , ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.TMDb_Rating))</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tvdb.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Rating.TVDB))</visible>
          <visible>$PARAM[tvdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.Player.Rating.TVDB), , ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Rating.TVDB))</visible>
          <visible>$PARAM[tvdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/popcorn.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.RottenTomatoes_UserMeter))</visible>
          <visible>Integer.IsGreater(Window(home).Property(TMDBHelper.Player.RottenTomatoes_UserMeter),59)</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/spilt.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.RottenTomatoes_UserMeter))</visible>
          <visible>!Integer.IsGreater(Window(home).Property(TMDBHelper.Player.RottenTomatoes_UserMeter),59)</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(TMDBHelper.Player.RottenTomatoes_UserMeter), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.RottenTomatoes_UserMeter))</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtrotten.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.RottenTomatoes_Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(TMDBHelper.Player.RottenTomatoes_Rating),0) + !Integer.IsGreater(Window(home).Property(TMDBHelper.Player.RottenTomatoes_Rating),59)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.RottenTomatoes_Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(TMDBHelper.Player.RottenTomatoes_Rating),59) + !Integer.IsGreater(Window(home).Property(TMDBHelper.Player.RottenTomatoes_Rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/certified.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.RottenTomatoes_Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(TMDBHelper.Player.RottenTomatoes_Rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(TMDBHelper.Player.RottenTomatoes_Rating), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(TMDBHelper.Player.RottenTomatoes_Rating))</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>1</top>
          <width>40</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/imdbicon.png</texture>
          <visible>!String.IsEmpty(Player.RatingAndVotes) | !String.IsEmpty(Window(home).Property(TMDBHelper.Player.IMDb_Rating)) | [Window.IsVisible(DialogVideoInfo.xml) + !String.IsEmpty(Player.Rating)]</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(home).Property(TMDBHelper.Player.IMDb_Rating), ,]$INFO[Window(home).Property(TMDBHelper.Player.IMDb_Votes), (, $LOCALIZE[205])]</label>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>!String.IsEmpty(Window(home).Property(TMDBHelper.Player.IMDb_Rating))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>$PARAM[imdbvotes]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Player.RatingAndVotes, ,]</label>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>String.IsEmpty(Window(home).Property(TMDBHelper.Player.IMDb_Rating)) + !String.IsEmpty(Player.RatingAndVotes)</visible>
          <visible>$PARAM[imdbvotes]</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(home).Property(TMDBHelper.Player.IMDb_Rating), ,]</label>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>!String.IsEmpty(Window(home).Property(TMDBHelper.Player.IMDb_Rating))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>!$PARAM[imdbvotes]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Player.Rating, ,]</label>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>String.IsEmpty(Window(home).Property(TMDBHelper.Player.IMDb_Rating)) + !String.IsEmpty(Player.Rating)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>!$PARAM[imdbvotes]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(home).Property(TMDBHelper.Player.IMDb_Rating), ,]</label>
          <visible>Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>!String.IsEmpty(Window(home).Property(TMDBHelper.Player.IMDb_Rating))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Player.Rating, ,]</label>
          <visible>Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>String.IsEmpty(Window(home).Property(TMDBHelper.Player.IMDb_Rating)) + !String.IsEmpty(Player.Rating)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(TMDBHelper.Player.Top250),#,]</label>
          <visible>!Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
          <visible>!Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)</visible>
          <visible>Integer.IsGreater(Window(home).Property(TMDBHelper.Player.Top250),0)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>$PARAM[top250]</visible>
        </control>
        <control type="image">
          <top>-10</top>
          <texture colordiffuse="main_fg_100">$INFO[ListItem.Studio,resource://resource.images.studios.white/,.png]</texture>
          <height>84</height>
          <width>84</width>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_AlphabetStrip_Skipper">
    <control type="button">
      <visible>false</visible>
      <onfocus condition="!String.IsEmpty(Container(8001).ListItem.Property(NotAvailable)) + Container(8001).OnNext">Control.Move(8001,1)</onfocus>
      <onfocus condition="!String.IsEmpty(Container(8001).ListItem.Property(NotAvailable)) + Container(8001).OnPrevious">Control.Move(8001,-1)</onfocus>
    </control>
  </include>
  <include name="Object_AlphabetStrip">
    <control type="button" id="8000">
      <left>-10000</left>
      <width>10</width>
      <height>1</height>
      <onfocus>SetProperty(SortLetter,$INFO[ListItem.SortLetter],Home)</onfocus>
      <onfocus condition="!String.IsEqual(ListItem.SortLetter,A) + !String.IsEqual(ListItem.SortLetter,B) + !String.IsEqual(ListItem.SortLetter,C) + !String.IsEqual(ListItem.SortLetter,D) + !String.IsEqual(ListItem.SortLetter,E) + !String.IsEqual(ListItem.SortLetter,F) + !String.IsEqual(ListItem.SortLetter,G) + !String.IsEqual(ListItem.SortLetter,H) + !String.IsEqual(ListItem.SortLetter,I) + !String.IsEqual(ListItem.SortLetter,J) + !String.IsEqual(ListItem.SortLetter,K) + !String.IsEqual(ListItem.SortLetter,L) + !String.IsEqual(ListItem.SortLetter,M) + !String.IsEqual(ListItem.SortLetter,N) + !String.IsEqual(ListItem.SortLetter,O) + !String.IsEqual(ListItem.SortLetter,P) + !String.IsEqual(ListItem.SortLetter,Q) + !String.IsEqual(ListItem.SortLetter,R) + !String.IsEqual(ListItem.SortLetter,S) + !String.IsEqual(ListItem.SortLetter,T) + !String.IsEqual(ListItem.SortLetter,U) + !String.IsEqual(ListItem.SortLetter,V) + !String.IsEqual(ListItem.SortLetter,W) + !String.IsEqual(ListItem.SortLetter,X) + !String.IsEqual(ListItem.SortLetter,Y) + !String.IsEqual(ListItem.SortLetter,Z)">SetFocus(8001,0)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,A)">SetFocus(8001,1)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,B)">SetFocus(8001,2)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,C)">SetFocus(8001,3)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,D)">SetFocus(8001,4)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,E)">SetFocus(8001,5)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,F)">SetFocus(8001,6)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,G)">SetFocus(8001,7)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,H)">SetFocus(8001,8)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,I)">SetFocus(8001,9)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,J)">SetFocus(8001,10)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,K)">SetFocus(8001,11)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,L)">SetFocus(8001,12)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,M)">SetFocus(8001,13)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,N)">SetFocus(8001,14)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,O)">SetFocus(8001,15)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,P)">SetFocus(8001,16)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,Q)">SetFocus(8001,17)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,R)">SetFocus(8001,18)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,S)">SetFocus(8001,19)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,T)">SetFocus(8001,20)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,U)">SetFocus(8001,21)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,V)">SetFocus(8001,22)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,W)">SetFocus(8001,23)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,X)">SetFocus(8001,24)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,Y)">SetFocus(8001,25)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,Z)">SetFocus(8001,26)</onfocus>
    </control>
    <control type="group">
      <top>-120</top>
      <animation effect="slide" end="0,120" condition="Control.HasFocus(8001)">Conditional</animation>
      <height>view_pad</height>
      <control type="panel" id="8001">
        <left>view_pad</left>
        <visible allowhiddenfocus="true">Control.HasFocus(8001)</visible>
        <include>Animation_FadeIn</include>
        <orientation>horizontal</orientation>
        <height>view_pad</height>
        <onup>50</onup>
        <ondown>50</ondown>
        <itemlayout height="view_pad" width="42">
          <control type="label">
            <aligny>center</aligny>
            <align>center</align>
            <height>view_pad</height>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>main_fg_70</textcolor>
            <animation effect="fade" start="100" end="10" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
          </control>
          <control type="label">
            <aligny>center</aligny>
            <align>center</align>
            <height>view_pad</height>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>main_fg_100</textcolor>
            <font>font_small_bold</font>
            <visible>String.IsEqual(ListItem.Label,Window(Home).Property(SortLetter)) | [String.IsEqual(ListItem.Label,#) + !String.IsEqual(Window(Home).Property(SortLetter),A) + !String.IsEqual(Window(Home).Property(SortLetter),B) + !String.IsEqual(Window(Home).Property(SortLetter),C) + !String.IsEqual(Window(Home).Property(SortLetter),D) + !String.IsEqual(Window(Home).Property(SortLetter),E) + !String.IsEqual(Window(Home).Property(SortLetter),F) + !String.IsEqual(Window(Home).Property(SortLetter),G) + !String.IsEqual(Window(Home).Property(SortLetter),H) + !String.IsEqual(Window(Home).Property(SortLetter),I) + !String.IsEqual(Window(Home).Property(SortLetter),J) + !String.IsEqual(Window(Home).Property(SortLetter),K) + !String.IsEqual(Window(Home).Property(SortLetter),L) + !String.IsEqual(Window(Home).Property(SortLetter),M) + !String.IsEqual(Window(Home).Property(SortLetter),N) + !String.IsEqual(Window(Home).Property(SortLetter),O) + !String.IsEqual(Window(Home).Property(SortLetter),P) + !String.IsEqual(Window(Home).Property(SortLetter),Q) + !String.IsEqual(Window(Home).Property(SortLetter),R) + !String.IsEqual(Window(Home).Property(SortLetter),S) + !String.IsEqual(Window(Home).Property(SortLetter),T) + !String.IsEqual(Window(Home).Property(SortLetter),U) + !String.IsEqual(Window(Home).Property(SortLetter),V) + !String.IsEqual(Window(Home).Property(SortLetter),W) + !String.IsEqual(Window(Home).Property(SortLetter),X) + !String.IsEqual(Window(Home).Property(SortLetter),Y) + !String.IsEqual(Window(Home).Property(SortLetter),Z)]</visible>
          </control>
        </itemlayout>
        <focusedlayout height="view_pad" width="42">
          <control type="image">
            <height>4</height>
            <bottom>0</bottom>
            <texture colordiffuse="$VAR[ColorHighlight]">common/white.png</texture>
          </control>
          <control type="label">
            <aligny>center</aligny>
            <align>center</align>
            <height>view_pad</height>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>Selected</textcolor>
            <animation effect="fade" start="100" end="10" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
          </control>
          <control type="label">
            <aligny>center</aligny>
            <align>center</align>
            <height>view_pad</height>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>Selected</textcolor>
            <font>font_small_bold</font>
            <visible>String.IsEqual(ListItem.Label,Window(Home).Property(SortLetter)) | [String.IsEqual(ListItem.Label,#) + !String.IsEqual(Window(Home).Property(SortLetter),A) + !String.IsEqual(Window(Home).Property(SortLetter),B) + !String.IsEqual(Window(Home).Property(SortLetter),C) + !String.IsEqual(Window(Home).Property(SortLetter),D) + !String.IsEqual(Window(Home).Property(SortLetter),E) + !String.IsEqual(Window(Home).Property(SortLetter),F) + !String.IsEqual(Window(Home).Property(SortLetter),G) + !String.IsEqual(Window(Home).Property(SortLetter),H) + !String.IsEqual(Window(Home).Property(SortLetter),I) + !String.IsEqual(Window(Home).Property(SortLetter),J) + !String.IsEqual(Window(Home).Property(SortLetter),K) + !String.IsEqual(Window(Home).Property(SortLetter),L) + !String.IsEqual(Window(Home).Property(SortLetter),M) + !String.IsEqual(Window(Home).Property(SortLetter),N) + !String.IsEqual(Window(Home).Property(SortLetter),O) + !String.IsEqual(Window(Home).Property(SortLetter),P) + !String.IsEqual(Window(Home).Property(SortLetter),Q) + !String.IsEqual(Window(Home).Property(SortLetter),R) + !String.IsEqual(Window(Home).Property(SortLetter),S) + !String.IsEqual(Window(Home).Property(SortLetter),T) + !String.IsEqual(Window(Home).Property(SortLetter),U) + !String.IsEqual(Window(Home).Property(SortLetter),V) + !String.IsEqual(Window(Home).Property(SortLetter),W) + !String.IsEqual(Window(Home).Property(SortLetter),X) + !String.IsEqual(Window(Home).Property(SortLetter),Y) + !String.IsEqual(Window(Home).Property(SortLetter),Z)]</visible>
          </control>
          <include>Object_AlphabetStrip_Skipper</include>
        </focusedlayout>
        <content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
      </control>
    </control>
  </include>
  <include name="Object_Scrollbar_Vert">
    <control type="scrollbar" id="60">
      <onback>50</onback>
      <right>0</right>
      <width>8</width>
      <top>-60</top>
      <bottom>0</bottom>
      <visible>$PARAM[visible]</visible>
      <showonepage>false</showonepage>
      <orientation>vertical</orientation>
      <onright condition="[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])] + !Container.Content(seasons) + [Control.IsEnabled(3) | Control.IsEnabled(4)] + Skin.HasSetting(AlphabetStrip) + System.HasAddon(script.skin.helper.service)">SetFocus(8000)</onright>
      <onright condition="![[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])] + !Container.Content(seasons) + [Control.IsEnabled(3) | Control.IsEnabled(4)]] + Skin.HasSetting(AlphabetStrip) + System.HasAddon(script.skin.helper.service)">Notification($LOCALIZE[161],$LOCALIZE[31334])</onright>
      <onright condition="!Skin.HasSetting(AlphabetStrip) | !System.HasAddon(script.skin.helper.service)">50</onright>
      <onleft>50</onleft>
      <texturesliderbackground colordiffuse="main_fg_12" border="4">common/white.png</texturesliderbackground>
      <texturesliderbar colordiffuse="main_fg_30" border="4">scrollbar/scrollv.png</texturesliderbar>
      <texturesliderbarfocus colordiffuse="$VAR[ColorHighlight]" border="4">scrollbar/scrollv.png</texturesliderbarfocus>
      <animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
      <visible>!Window.IsVisible(home)</visible>
      <include>Animation_FadeIn</include>
      <include>Animation_FadeOut</include>
    </control>
  </include>
  <include name="Object_Scrollbar_Horz">
    <control type="scrollbar" id="60">
      <onback>50</onback>
      <height>8</height>
      <left>0</left>
      <right>0</right>
      <width>100%</width>
      <bottom>0</bottom>
      <showonepage>false</showonepage>
      <orientation>horizontal</orientation>
      <onup>50</onup>
      <visible>$PARAM[visible]</visible>
      <ondown condition="[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])] + !Container.Content(seasons) + [Control.IsEnabled(3) | Control.IsEnabled(4)] + Skin.HasSetting(AlphabetStrip) + System.HasAddon(script.skin.helper.service)">SetFocus(8000)</ondown>
      <ondown condition="![[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])] + !Container.Content(seasons) + [Control.IsEnabled(3) | Control.IsEnabled(4)]] + Skin.HasSetting(AlphabetStrip) + System.HasAddon(script.skin.helper.service)">Notification($LOCALIZE[161],$LOCALIZE[31334])</ondown>
      <ondown condition="!Skin.HasSetting(AlphabetStrip) | !System.HasAddon(script.skin.helper.service)">50</ondown>
      <texturesliderbackground colordiffuse="main_fg_12" border="4">common/white.png</texturesliderbackground>
      <texturesliderbar colordiffuse="main_fg_30" border="4">scrollbar/scrollv.png</texturesliderbar>
      <texturesliderbarfocus colordiffuse="$VAR[ColorHighlight]" border="4">scrollbar/scrollv.png</texturesliderbarfocus>
      <animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
      <visible>!Window.IsVisible(home)</visible>
      <include>Animation_FadeIn</include>
      <include>Animation_FadeOut</include>
    </control>
  </include>
  <include name="Object_PlotOverlay">
    <param name="visible" default="true" />
    <definition>
      <control type="group">
        <control type="scrollbar" id="9601">
          <visible>$PARAM[visible]</visible>
          <top>100</top>
          <left>-1000</left>
          <bottom>100</bottom>
          <ondown condition="Window.IsVisible(2111) | Window.IsVisible(2112) | Window.IsVisible(2113) | Window.IsVisible(2114) | Window.IsVisible(2115) | Window.IsVisible(2116) | Window.IsVisible(2117)">SetFocus(5055)</ondown>
	 <onback condition="Window.IsVisible(MyVideoNav)">300</onback>
<!--
          <onback condition="Skin.HasSetting(DisableNetflixVideoInfo) + [Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</onback>
          <onback condition="!Skin.HasSetting(DisableNetflixVideoInfo) + [Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">8000</onback>
-->
          <onup condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</onup>
          <ondown condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</ondown>
          <onright condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</onright>
          <onleft condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</onleft>
	  <onback condition="Window.IsVisible(DialogVideoInfo.xml)">9570</onback>
<!--
          <onup condition="Control.IsVisible(9000)">9000</onup>
          <onleft condition="Control.IsVisible(9000)">9000</onleft>
          <onright condition="Control.IsVisible(9000)">9000</onright>
          <ondown condition="Control.IsVisible(9000)">9000</ondown>
          <onback condition="Control.IsVisible(3000)">3000</onback>
          <onup condition="Control.IsVisible(3000)">3000</onup>
          <onleft condition="Control.IsVisible(3000)">3000</onleft>
          <onright condition="Control.IsVisible(3000)">3000</onright>
          <ondown condition="Control.IsVisible(3000)">3000</ondown>
          <onback condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</onback>
          <onup condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</onup>
          <onleft condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</onleft>
          <onright condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</onright>
          <ondown condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</ondown>
-->
          <onup condition="Window.IsVisible(DialogVideoInfo.xml)">SetFocus(9570)</onup>
          <ondown condition="Window.IsVisible(DialogVideoInfo.xml)">SetFocus(9570)</ondown>
          <onleft condition="Window.IsVisible(DialogVideoInfo.xml)">SetFocus(9570)</onleft>
          <onright condition="Window.IsVisible(DialogVideoInfo.xml)">SetFocus(9570)</onright>
          <showonepage>true</showonepage>
          <width>8</width>
          <orientation>vertical</orientation>
          <animation effect="fade" condition="true" time="0" start="100" end="0">Conditional</animation>
        </control>
        <!-- Netflix Plot Info -->
        <control type="group">
          <include>Animation_FadeIn</include>
          <visible>Control.HasFocus(9601) + $PARAM[visible] + !Skin.HasSetting(DisableNetflixVideoInfo)</visible>
          <control type="grouplist">
            <orientation>vertical</orientation>
            <usecontrolcoords>true</usecontrolcoords>
            <itemgap>0</itemgap>
            <top>310</top>
	    <animation effect="slide" start="0,0" end="0,-50" condition="String.IsEmpty(Control.GetLabel(55443)) + Window.IsVisible(DialogVideoInfo.xml)">Conditional</animation>
            <control type="textbox" id="9609">
              <left>10</left>
              <description>textarea</description>
              <height min="100" max="600">auto</height>
              <width>90%</width>
              <align>left</align>
              <textcolor>main_fg_70</textcolor>
              <font>font_overlay_plotbox</font>
              <label fallback="19055">$VAR[Label_OverlayPlot]</label>
              <autoscroll delay="8000" time="4000" repeat="12000">true</autoscroll>
              <visible>![Window.IsVisible(2111) | Window.IsVisible(2112) | Window.IsVisible(2113) | Window.IsVisible(2114) | Window.IsVisible(2115) | Window.IsVisible(2116) | Window.IsVisible(2117)]</visible>
            </control>
            <control type="textbox" id="9609">
              <left>10</left>
              <description>textarea</description>
              <height min="100" max="700">auto</height>
              <width>90%</width>
              <align>left</align>
              <textcolor>main_fg_70</textcolor>
              <font>font_overlay_plotbox</font>
              <label fallback="19055">$VAR[Label_OverlayPlot]</label>
              <autoscroll delay="8000" time="4000" repeat="12000">true</autoscroll>
              <visible>Window.IsVisible(2111) | Window.IsVisible(2112) | Window.IsVisible(2113) | Window.IsVisible(2114) | Window.IsVisible(2115) | Window.IsVisible(2116) | Window.IsVisible(2117)</visible>
            </control>
            <control type="label">
              <height>90</height>
            </control>
            <control type="group">
              <animation effect="zoom" end="150" time="0" condition="Control.IsVisible(9601)">Conditional</animation>
              <height>80</height>
              <right>480</right>
              <include content="Object_Ratings" condition="Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(Home.xml) | Window.IsVisible(script-globalsearch.xml)">
                <param name="directory" value="color" />
                <param name="align" value="left" />
                <param name="width" value="1400" />
                <param name="rottentomatoes" value="true" />
                <param name="imdbvotes" value="true" />
                <param name="usermeter" value="true" />
                <param name="imdb" value="true" />
                <param name="tmdb" value="true" />
                <param name="metacritic" value="true" />
                <param name="oscars" value="true" />
                <param name="top250" value="true" />
                <param name="plot" value="false" />
                <param name="studio" value="false" />
                <param name="studioid" value="90680" />
              </include>
            </control>
          </control>
        </control>
        <!-- Standard Plot Info -->
        <control type="group">
          <visible>$PARAM[visible] + Skin.HasSetting(DisableNetflixVideoInfo)</visible>
          <left>view_pad</left>
          <right>view_pad</right>
          <top>view_top</top>
          <bottom>view_pad</bottom>
          <visible>$EXP[Exp_PlotOverlay]</visible>
          <include>Animation_FadeIn</include>
          <control type="group">
            <top>12</top>
            <control type="group">
              <top>90</top>
              <visible>Container(9609).HasPrevious</visible>
              <include>Animation_FadeIn</include>
              <include>Animation_FadeOut</include>
              <control type="image">
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="main_fg_100" flipy="true">common/arrow-small.png</texture>
                <centerleft>50%</centerleft>
                <top>10</top>
              </control>
              <control type="image">
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="main_fg_100" flipy="true">common/arrow-small.png</texture>
                <centerleft>50%</centerleft>
                <top>0</top>
              </control>
            </control>
            <control type="group">
              <bottom>30</bottom>
              <visible>Container(9609).HasNext</visible>
              <include>Animation_FadeIn</include>
              <include>Animation_FadeOut</include>
              <control type="image">
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="main_fg_100" flipy="false">common/arrow-small.png</texture>
                <centerleft>50%</centerleft>
                <bottom>0</bottom>
              </control>
              <control type="image">
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="main_fg_100" flipy="false">common/arrow-small.png</texture>
                <centerleft>50%</centerleft>
                <bottom>10</bottom>
              </control>
            </control>
            <control type="label">
              <description>header label</description>
              <left>0</left>
              <right>0</right>
              <height>45</height>
              <font>font_overlay_title</font>
              <textcolor>main_fg_100</textcolor>
              <label>$VAR[Label_OverlayTitle]</label>
            </control>
            <control type="textbox" id="9609">
              <description>textarea</description>
              <left>0</left>
              <right>0</right>
              <top>120</top>
              <bottom>50</bottom>
              <align>left</align>
              <textcolor>main_fg_70</textcolor>
              <font>font_overlay_plotbox</font>
              <label fallback="19055">$VAR[Label_OverlayPlot]</label>
              <pagecontrol>9601</pagecontrol>
              <autoscroll delay="8000" time="4000" repeat="12000">false</autoscroll>
            </control>
          </control>
        </control>
      </control>
      <control type="button" id="9602">
        <onleft>300</onleft>
        <onup>300</onup>
        <ondown>300</ondown>
        <onright>300</onright>
        <onclick>SetFocus(300)</onclick>
        <onback>300</onback>
        <include>Defs_Hidden_Button</include>
      </control>
    </definition>
  </include>
  <include name="Widget_Items_Large">
    <param name="submenu" default="false" />
    <param name="aspect" default="" />
    <param name="sortby" default="" />
    <param name="sortorder" default="" />
    <param name="top" default="0" />
    <param name="height" default="320" />
    <param name="genres" default="false" />
    <param name="studios" default="false" />
    <param name="text" default="false" />
    <param name="square" default="false" />
    <param name="poster" default="false" />
    <param name="landscape" default="false" />
    <param name="landscapedetails" default="false" />
    <param name="landscapewide" default="false" />
    <param name="landscapewideposter" default="false" />
    <param name="posterdetails" default="false" />
    <param name="widgetlive" default="false" />
    <param name="landscapenetflix" default="false" />
    <param name="category" default="false" />
    <param name="postercondition" default="false" />
    <param name="landscapecondition" default="false" />
    <param name="landscapewidecondition" default="false" />
    <param name="landscapedetailscondition" default="false" />
    <param name="landscapewidepostercondition" default="false" />
    <param name="landscapenetflixcondition" default="false" />
    <param name="posterdetailscondition" default="false" />
    <param name="widgetlivecondition" default="false" />
    <param name="categorycondition" default="false" />
    <param name="squarecondition" default="false" />
    <param name="genrecondition" default="false" />
    <param name="submenucondition" default="false" />
    <param name="landscapepanelcondition" default="false" />
    <definition>
      <itemlayout width="widget_poster_width" height="widget_poster_height" condition="$PARAM[postercondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_square_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[squarecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="square" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="622.22" height="350" condition="$PARAM[landscapedetailscondition] + !Window.IsVisible(Home)">
        <include content="Widget_Items_ItemLayout">
          <param name="landscapenetflix" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="375.11" height="211" condition="$PARAM[submenucondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="submenuwidget" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[genrecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="genres" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="366" height="210" condition="$PARAM[landscapepanelcondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscapepanel" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="467.56" height="263" condition="$PARAM[landscapenetflixcondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscapenetflix" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="366" height="210" condition="$PARAM[categorycondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="640" height="widget_poster_height_netflix" condition="$PARAM[landscapewidecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscapewide" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_poster_width_netflix" height="widget_poster_height" condition="$PARAM[landscapewidepostercondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="380" height="widget_poster_height_netflix" condition="$PARAM[widgetlivecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="widgetlive" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="622.22" height="350" condition="$PARAM[landscapecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscape" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <focusedlayout width="366" height="210" condition="$PARAM[landscapepanelcondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapepanel" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="375.11" height="211" condition="$PARAM[submenucondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="submenuwidget" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="467.56" height="263" condition="$PARAM[landscapenetflixcondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapenetflix" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="622.22" height="350" condition="$PARAM[landscapedetailscondition] + !Control.HasFocus($PARAM[id]) + !Window.IsVisible(Home)">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapenetflix" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="1244.44" height="350" condition="$PARAM[landscapedetailscondition] + Control.HasFocus($PARAM[id]) + !Window.IsVisible(Home)">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapedetails" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="366" height="210" condition="$PARAM[categorycondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="640" height="widget_poster_height_netflix" condition="$PARAM[landscapewidecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapewide" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="640" height="widget_poster_height" condition="$PARAM[landscapewidepostercondition] + Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapewide" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width" height="widget_poster_height" condition="$PARAM[landscapewidepostercondition] + !Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="380" height="widget_poster_height_netflix" condition="$PARAM[widgetlivecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="widgetlive" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[genrecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="genres" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width" height="widget_poster_height" condition="$PARAM[postercondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="622.22" height="350" condition="$PARAM[landscapecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscape" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_square_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[squarecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="square" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
    </definition>
  </include>
  <include name="Widgets_Grouplist_Large">
    <param name="submenu" default="false" />
    <param name="aspect" default="" />
    <param name="sortby" default="" />
    <param name="sortorder" default="" />
    <param name="top" default="0" />
    <param name="height" default="320" />
    <param name="genres" default="false" />
    <param name="studios" default="false" />
    <param name="text" default="false" />
    <param name="square" default="false" />
    <param name="poster" default="false" />
    <param name="landscape" default="false" />
    <param name="landscapewide" default="false" />
    <param name="landscapewideposter" default="false" />
    <param name="posterdetails" default="false" />
    <param name="widgetlive" default="false" />
    <param name="landscapenetflix" default="false" />
    <param name="category" default="false" />
    <param name="landscapepanel" default="false" />
    <definition>
      <control type="grouplist" id="330">
        <animation effect="slide" end="-30,0" delay="0" time="150" condition="[Skin.HasSetting(DisableMenuHor) | !Control.HasFocus(300) + !Control.HasFocus(302) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
        <animation effect="slide" end="0,240" time="300" delay="150" condition="![Skin.HasSetting(DisableMenuVertIcon) + Control.HasFocus(300)] + [[!Skin.HasSetting(SubmenuWidgetPanel) + Control.HasFocus(30222) | Control.HasFocus(3022) | Control.HasFocus(30221)] | !$EXP[noSubMenu] + [ControlGroup(505).HasFocus | ControlGroup(506).HasFocus | Control.HasFocus(1505) | Control.HasFocus(1506)]]">Conditional</animation>
        <onup condition="Integer.IsGreater(Container(3022).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgethub),true) + String.IsEqual(Container(300).ListItem.Property(widgethubselect),MoviesLists1)">3022</onup>
        <onup condition="Integer.IsGreater(Container(30221).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgethub),true) + String.IsEqual(Container(300).ListItem.Property(widgethubselect),TVLists1)">30221</onup>
        <onup condition="[!Skin.HasSetting(DisableNetflixCatWidget) + Integer.IsGreater(Container(30222).NumItems,0)] + !String.IsEqual(Container(300).ListItem.Property(widgethub),true) | [String.IsEqual(Container(300).ListItem.Property(widgethub),true) + !Integer.IsGreater(Container(3022).NumItems,0)]">SetFocus(30222)</onup>
        <onup condition="[!Skin.HasSetting(DisableNetflixCatWidget) + Integer.IsGreater(Container(30222).NumItems,0)] + !String.IsEqual(Container(300).ListItem.Property(widgethub),true) | [String.IsEqual(Container(300).ListItem.Property(widgethub),true) + !Integer.IsGreater(Container(30221).NumItems,0)]">SetFocus(30222)</onup>
        <onup condition="Skin.HasSetting(DisableNetflixCatWidget) | !Integer.IsGreater(Container(30222).NumItems,0)">SetFocus(300)</onup>
        <left>30</left>
        <posy>580</posy>
        <onleft>300</onleft>
        <ondown>3337</ondown>
        <onup condition="$EXP[TVSpotlight] + $EXP[noSubMenu]">SetFocus(1505)</onup>
        <onup condition="$EXP[MovieSpotlight] + $EXP[noSubMenu]">SetFocus(1506)</onup>
        <orientation>vertical</orientation>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</visible>
        <itemgap>0</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <scrolltime tween="linear">500</scrolltime>
        <movement>1</movement>
        <include content="WidgetSubmenu" condition="!Skin.HasSetting(HideSubmenuWidget)">
          <param name="id" value="3001" />
          <param name="submenu" value="true" />
          <param name="aspect" value="$LOCALIZE[31263]" />
          <param name="label" value="$VAR[catlabel]" />
          <param name="visible" value="String.IsEqual(Container(300).ListItem.Property(hasSubmenu),true)" />
        </include>
        <include>skinshortcuts-template-vertical-submenu</include>
      </control>
    </definition>
  </include>
  <include name="WidgetHubScroll">
    <control type="button" id="3337">
      <visible allowhiddenfocus="true">false</visible>
      <onfocus>SetProperty(spothubscroll,true,Home)</onfocus>
      <onfocus>Skin.Reset(SpotFocus)</onfocus>
      <onfocus condition="Skin.HasSetting(EnableSpotlight) + $EXP[LiveTVSpotlight]">SetFocus(901)</onfocus>
      <onfocus condition="!String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + !$EXP[noSubMenu]">SetFocus(30222)</onfocus>
      <onfocus condition="!String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + $EXP[noSubMenu]">SetFocus(330)</onfocus>
      <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + Integer.IsGreater(Container(330).NumItems,0)">SetFocus(330,0)</onfocus>
      <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + !Integer.IsGreater(Container(330).NumItems,0)">SetFocus(30222)</onfocus>
      <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + String.IsEqual(Container(300).ListItem.Property(widgethubscrollselect),TVNetflixHub)">ActivateWindow(3810)</onfocus>
      <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + String.IsEqual(Container(300).ListItem.Property(widgethubscrollselect),TVAuraHub)">ActivateWindow(3910)</onfocus>
      <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + String.IsEqual(Container(300).ListItem.Property(widgethubscrollselect),MovieNetflixHub)">ActivateWindow(3820)</onfocus>
      <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + String.IsEqual(Container(300).ListItem.Property(widgethubscrollselect),MovieAuraHub)">ActivateWindow(3920)</onfocus>
    </control>
  </include>
  <include name="simplemode_heading">
    <control type="label">
      <left>80</left>
      <top>70</top>
      <label>$INFO[Container(300).ListItem.Label]</label>
      <height>40</height>
      <width>350</width>
      <align>left</align>
      <textcolor>white</textcolor>
      <font>font_heading_small</font>
      <visible>Skin.HasSetting(DisableNetflixHomeAlt) + Window.IsVisible(Home)</visible>
    </control>
  </include>

  <!-- @PXCL dev -->
  <include name="Logo">
    <control type="group">
      <right>-20</right>
      <visible>!Skin.HasSetting(DisableMenuHor)</visible>
      <visible>!Window.IsVisible(DialogNotification.xml) + !Window.IsVisible(DialogBusy.xml) + Skin.HasSetting(EnableHomeHeader)</visible>
     <animation effect="fade" start="100" end="0" time="200" condition="Window.IsActive(extendedprogressdialog)">Conditional</animation>
      <control type="group">
        <top>35</top>
        <animation type="Conditional" condition="Window.Previous(fullscreenvideo)">
          <effect type="slide" start="0,0" end="320,0" center="auto" tween="sine" easing="inout" time="200" />
          <effect type="fade" start="100" end="0" time="300" />
        </animation>
        <control type="group">
        <control type="label">
          <top>10</top>
          <right>70</right>
          <width>80</width>
          <height>60</height>
          <font>font_tiny_bold</font>
          <align>left</align>
          <textcolor>white</textcolor>
          <label>[B]$INFO[Weather.Temperature][/B]</label>
          <visible>Weather.IsFetched</visible>
        </control>
          <control type="image">
	    <top>5</top>
            <right>155</right>
            <width>70</width>
            <height>70</height>
            <aspectratio>keep</aspectratio>
            <texture colordiffuse="main_fg_100">$INFO[Weather.FanartCode,resource://resource.images.weathericons.white/,.png]</texture>
            <visible>Weather.IsFetched + !Container($PARAM[id]).IsUpdating</visible>
          </control>
          <control type="image">
	    <top>5</top>
            <right>155</right>
            <width>70</width>
            <height>70</height>
            <aspectratio>keep</aspectratio>
            <texture colordiffuse="main_fg_100">special://skin/extras/icons/updatelibrary.png</texture>
            <visible>Container($PARAM[id]).IsUpdating</visible>
          </control>
        </control>
        <control type="button">
          <right>155</right>
          <width>70</width>
          <height>70</height>
          <label></label>
          <height>60</height>
          <onclick>Dialog.Close(contextmenu)</onclick>
          <onclick>Dialog.Close(all,true)</onclick>
          <onclick>ActivateWindow(PlayerControls)</onclick>
          <texturefocus colordiffuse="white">logo.png</texturefocus>
          <texturenofocus colordiffuse="white">logo.png</texturenofocus>
          <visible>!Weather.IsFetched + !Container($PARAM[id]).IsUpdating</visible>
        </control>
        <control type="label">
          <top>-5</top>
          <right>235</right>
          <width>1000</width>
          <height>60</height>
          <font>font_heading_date</font>
          <align>right</align>
          <textcolor>white</textcolor>
          <label>[B]$INFO[System.Time][/B]</label>
        </control>
        <control type="label">
          <right>235</right>
          <top>20</top>
          <width>1000</width>
          <height>60</height>
          <font>font_heading_date</font>
          <align>right</align>
          <alignx>right</alignx>
          <textcolor>white</textcolor>
          <label>[B]$INFO[System.Date][/B]</label>
	  <visible>![String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia)) + Player.HasMedia]</visible>
        </control>
      <control type="grouplist">
	<top>10</top>
	<right>235</right>
        <height>65</height>
        <align>right</align>
        <orientation>horizontal</orientation>
        <itemgap>0</itemgap>
        <width>700</width>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="group">
	    <top>25</top>
            <width>view_pad</width>
            <visible>[String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia)) + Player.HasMedia]</visible>
            <include>Animation_FadeIn_Delay</include>
            <control type="multiimage">
                <centertop>50%</centertop>
                <imagepath colordiffuse="$VAR[ColorHighlight]">eq</imagepath>
                <width>40</width>
                <height>23</height>
                <fadetime>50</fadetime>
                <timeperimage>50</timeperimage>
                <visible>!Player.Paused + !Player.Caching</visible>
            </control>
            <control type="image">
                <centertop>50%</centertop>
                <centerleft>50%</centerleft>
                <texture colordiffuse="main_fg_100">osd/pause.png</texture>
                <width>32</width>
                <height>32</height>
                <fadetime>50</fadetime>
                <visible>Player.Paused + !Player.Caching</visible>
            </control>
            <control type="image">
                <centertop>50%</centertop>
                <left>-16</left>
                <texture colordiffuse="main_fg_100">special://skin/extras/icons/download.png</texture>
                <width>64</width>
                <height>64</height>
                <fadetime>50</fadetime>
                <visible>Player.Caching</visible>
            </control>
            <visible>Player.HasMedia</visible>
        </control>
        <control type="label">
            <top>15</top>
            <height>60</height>
            <width max="350">auto</width>
            <font>font_heading_date</font>
            <textcolor>white</textcolor>
            <label>[B]$VAR[weatherbar_playing][/B]</label>
            <visible>Player.HasMedia</visible>
            <visible>[String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia)) + Player.HasMedia]</visible>
            <include>Animation_FadeIn_Delay</include>
        </control>
      </control>
      </control>
    </control>
  </include>


  <include name="netflix_infoline_container">
    <param name="id" default="$PARAM[id]" />
    <definition>
    <control type="group">
      <height>60</height>
      <control type="grouplist">
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <left>0</left>
        <right>$PARAM[titleright]</right>
        <control type="group">
          <width>200</width>
          <left>-5</left>
          <top>-20</top>
          <include content="Object_StarRating">
            <param name="height" value="50" />
            <param name="width" value="50" />
            <param name="rating_prop" value="Container($PARAM[id]).ListItem.Rating" />
          </include>
        </control>
        <control type="group">
          <width>500</width>
          <control type="grouplist">
            <orientation>horizontal</orientation>
            <itemgap>10</itemgap>
            <!-- Year -->
            <control type="label">
              <width>60</width>
              <label>$INFO[Container($PARAM[id]).ListItem.Year]</label>
              <textcolor>white</textcolor>
              <align>center</align>
              <font>font_tiny_bold</font>
              <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Year) + !String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode)</visible>
            </control>
            <!-- MPAA -->
            <control type="group">
              <width>120</width>
              <height>30</height>
              <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.MPAA)</visible>
              <control type="image">
                <bottom>-18</bottom>
                <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                <align>bottom</align>
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="dimgrey">flags/flag_box_rating_classic.png</texture>
              </control>
              <control type="label">
                <top>15</top>
                <left>35</left>
                <height>100%</height>
                <width>70%</width>
                <font>widget_trakt_title2</font>
                <textcolor>grey</textcolor>
                <scroll>true</scroll>
                <label fallback="N/A">$INFO[Container($PARAM[id]).ListItem.MPAA]</label>
              </control>
            </control>
            <!-- Duration -->
            <control type="group">
              <width>95</width>
              <height>30</height>
              <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Duration) + [!String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) + !String.IsEqual(Container($PARAM[id]).ListItem.DBType,season)] | String.Contains(Container($PARAM[id]).ListItem.FolderPath,plugin.video.youtube)</visible>
              <control type="image">
                <bottom>-18</bottom>
                <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                <align>bottom</align>
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="dimgrey">flags/square-rounded.png</texture>
              </control>
              <control type="label" id="61115">
                <top>15</top>
                <left>10</left>
                <height>100%</height>
                <width>90%</width>
                <font>widget_trakt_title2</font>
                <textcolor>white</textcolor>
                <scroll>false</scroll>
                <label>$INFO[Container($PARAM[id]).ListItem.Duration(h),,$LOCALIZE[31036]] $INFO[Container($PARAM[id]).ListItem.Duration(mm),,$LOCALIZE[31020]]</label> <!-- DURATION(hours) h DURATION(minutes) m -->
              </control>
            </control>
            <!-- Season Count -->
            <control type="group">
              <width>140</width>
              <height>30</height>
              <visible>String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) + !String.IsEmpty(Container($PARAM[id]).ListItem.Property(TotalSeasons))</visible>
              <control type="image">
                <bottom>-17</bottom>
                <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                <align>bottom</align>
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="dimgrey">flags/square-rounded.png</texture>
                <visible>String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) + String.IsEmpty(Container($PARAM[id]).ListItem.Property(TotalSeasons))</visible>
              </control>
              <control type="label">
                <top>28</top>
                <textcolor>white</textcolor>
                <align>center</align>
                <font>widget_trakt_title2</font>
                <textcolor>grey</textcolor>
                <label>$INFO[Container($PARAM[id]).ListItem.Property(TotalSeasons)] $LOCALIZE[31750]</label> <!-- Season -->
                <visible>String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) + String.IsEqual(Container($PARAM[id]).ListItem.Property(TotalSeasons),1)</visible>
              </control>

              <control type="label">
                <top>28</top>
                <textcolor>white</textcolor>
                <align>center</align>
                <font>widget_trakt_title2</font>
                <textcolor>grey</textcolor>
                <label>$INFO[Container($PARAM[id]).ListItem.Property(TotalSeasons)] $LOCALIZE[31499]</label> <!-- Seasons -->
                <visible>String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) + String.IsGreaterOrEqual(Container($PARAM[id]).ListItem.Property(TotalSeasons),2) + !String.IsEmpty(Container($PARAM[id]).ListItem.Property(TotalSeasons))</visible>
              </control>
            </control>
            <!-- Aired -->
            <control type="label">
              <width>195</width>
              <label>$LOCALIZE[31789]: $INFO[Container($PARAM[id]).ListItem.Premiered(dd MMM yyyy)]</label> <!-- Aired -->
              <textcolor>$VAR[ColorHighlight2]</textcolor>
              <font>font_tiny_bold</font>
              <visible>String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode)</visible>
            </control>
          </control>
        </control>
      </control>
    </control>
    </definition>
  </include>


  <include name="netflix_infoline">
    <control type="group">
      <visible>[$EXP[DBTvideos] + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(660) + !String.IsEqual(Container($PARAM[id]).ListItem.Container($PARAM[id]).Label,See More...) + !String.IsEqual(Container($PARAM[id]).ListItem.Container($PARAM[id]).Label,Next)] | [String.Contains(Container($PARAM[id]).ListItem.FolderPath,plugin.video.youtube)] | Window.IsVisible(DialogVideoInfo.xml)</visible>
      <height>60</height>
      <control type="grouplist">
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <left>0</left>
        <right>$PARAM[titleright]</right>
        <control type="group">
          <width>200</width>
          <left>-5</left>
          <top>-20</top>
          <visible>!$EXP[MainSubMenuHasFocus]</visible>
          <visible>!Skin.HasSetting(DisableStarRating) | [Skin.HasSetting(DisableLiked) + String.IsEmpty(Control.GetLabel(5949))]</visible>
          <include content="Object_StarRating">
            <param name="height" value="50" />
            <param name="width" value="50" />
            <param name="rating_prop" value="ListItem.Rating" />
          </include>
        </control>
        <control type="label" id="5949">
          <left>-10</left>
          <width>140</width>
          <label>$VAR[liked_percent]</label>
          <textcolor>green</textcolor>
          <align>center</align>
          <font>font_tiny_bold</font>
          <visible>Skin.HasSetting(DisableLiked) + !String.IsEmpty(Control.GetLabel(5949))</visible>
          <visible>!$EXP[MainSubMenuHasFocus]</visible>
        </control>
        <control type="group">
          <width>auto</width> <!--500-->
          <control type="grouplist">
            <orientation>horizontal</orientation>
            <itemgap>10</itemgap>
            <!-- Year -->
            <control type="label">
              <width>60</width>
              <label>$INFO[ListItem.Year]</label>
              <textcolor>white</textcolor>
              <align>center</align>
              <font>font_tiny_bold</font>
              <visible>!String.IsEmpty(ListItem.Year) + !String.IsEqual(ListItem.DBType,episode)</visible>
            </control>
            <!-- MPAA -->
            <control type="group">
              <width>120</width>
              <height>30</height>
              <visible>!String.IsEmpty(Control.GetLabel(6115))</visible>
              <control type="image">
                <bottom>-18</bottom>
                <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                <align>bottom</align>
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="dimgrey">flags/flag_box_rating_classic.png</texture>
              </control>
              <control type="label" id="6115">
                <top>15</top>
                <left>35</left>
                <height>100%</height>
                <width>70%</width>
                <font>widget_trakt_title2</font>
                <textcolor>grey</textcolor>
                <scroll>true</scroll>
                <label fallback="N/A">$VAR[MPAA]</label>
              </control>
            </control>
            <!-- Duration -->
            <control type="group">
              <width>95</width>
              <height>30</height>
              <visible>[[!String.IsEmpty(ListItem.Duration) | !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Duration))] + !String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season)] | String.Contains(ListItem.FolderPath,plugin.video.youtube)</visible>
              <control type="image">
                <bottom>-18</bottom>
                <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                <align>bottom</align>
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="dimgrey">flags/square-rounded.png</texture>
              </control>
              <control type="label" id="61115">
                <top>15</top>
                <left>10</left>
                <height>100%</height>
                <width>90%</width>
                <font>widget_trakt_title2</font>
                <textcolor>white</textcolor>
                <scroll>false</scroll>
                <label>$VAR[infoline_duration]</label>
              </control>
            </control>
            <!-- Season Count -->
            <control type="group">
              <width>140</width>
              <height>30</height>
              <visible>String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
              <control type="image">
                <bottom>-17</bottom>
                <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                <align>bottom</align>
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="dimgrey">flags/square-rounded.png</texture>
              </control>
              <control type="label">
                <top>28</top>
                <textcolor>white</textcolor>
                <align>center</align>
                <font>widget_trakt_title2</font>
                <textcolor>grey</textcolor>
                <label>$VAR[total_seasons]</label>
                <visible>String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
              </control>
            </control>
            <!-- Aired -->
            <control type="label">
              <label>$LOCALIZE[31789]: $INFO[ListItem.Premiered(dd MMM yyyy)]</label> <!-- Aired -->
              <textcolor>$VAR[ColorHighlight2]</textcolor>
              <font>font_tiny_bold</font>
              <visible>String.IsEqual(ListItem.DBType,episode)</visible>
              <visible>!Control.IsVisible(502) + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222)</visible>
            </control>
            <control type="label">
              <width>auto</width>
              <label>$VAR[Label_Info_NextAired_Status]</label>
              <font>font_tiny</font>
              <textcolor>$VAR[ColorHighlight2]</textcolor>
              <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + String.IsEqual(ListItem.DBType,tvshow)</visible>
            </control>
          </control>
        </control>
      </control>
    </control>
  </include>
  <!-- Info Details Spinner @cartmandos -->
  <include name="Details_Spinner">
    <control type="grouplist">
      <height>62</height>
      <width>800</width>
      <itemgap>25</itemgap>
      <orientation>horizontal</orientation>
      <usecontrolcoords>true</usecontrolcoords>
      <control type="group">
        <visible>!String.IsEmpty(Control.GetLabel(84))</visible>
        <top>5</top>
        <height>46</height>
        <width>46</width>
        <control type="image">
          <animation effect="fade" time="150">Visible</animation>
          <animation effect="fade" time="0" end="60" condition="true">Conditional</animation>
          <align>left</align>
          <aligny>center</aligny>
          <texture>$VAR[DetailsSpinImage,netflix/spinner/,.png]</texture>
          <colordiffuse>red</colordiffuse>
        </control>
      </control>
      <control type="textbox" id="84">
        <top>-5</top>
        <animation effect="fade" time="150">Visible</animation>
        <height>75</height>
        <width>550</width>
        <label>$VAR[NetflixDetailsSpin]</label>
        <textcolor>dimgrey</textcolor>
        <align>left</align>
        <aligny>center</aligny>
        <font>font_tiny</font>
        <autoscroll>false</autoscroll>
      </control>
    </control>
  </include>
  <include name="main_menu_title">
    <control type="group">
      <width>800</width>
      <control type="label">
        <visible>[![Control.HasFocus(3901) | Control.HasFocus(3902) | Control.HasFocus(3903) | Control.HasFocus(3904) |Control.HasFocus(300)] + [Window.IsVisible(Home) | [!Window.IsVisible(Home) + String.IsEqual(ListItem.Property(path),Window(Home).Property(MenuIconFocus))]] + Skin.HasSetting(IconOnlyMode)] | [[Control.HasFocus(300) | Control.HasFocus(302)] + !Skin.HasSetting(IconOnlyMode)]</visible>
        <visible>Control.HasFocus(300) + !Skin.HasSetting(DisableNetflixVertLabel)</visible>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Settings Widget) + !String.IsEqual(Container(300).ListItem.Property(widgetType),Weather Widget)</visible>
        <left>100</left>
        <top>10</top>
        <height>40</height>
        <label>$INFO[ListItem.Label]</label>
        <textcolor>dimgrey</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>netflix_heading_small</font>
        <width>700</width>
      </control>
    </control>
  </include>
  <include name="NextAiredUpcomingWidget">
    <param name="id" default="" />
    <param name="day" default="" />
    <param name="dayshort" default="" />
    <definition>
      <control type="group" id="2$PARAM[id]">
        <control type="label">
          <align>center</align>
          <height>50</height>
          <width>310</width>
          <font>font_small_bold</font>
          <textcolor>$VAR[ColorHighlight]</textcolor>
          <shadowcolor>dimgrey</shadowcolor>
          <label>$PARAM[day]</label>
          <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0)</visible>
          <visible>String.Contains(System.Date,$PARAM[day])</visible>
        </control>
        <control type="label">
          <align>center</align>
          <height>50</height>
          <width>310</width>
          <font>font_small_bold</font>
          <textcolor>grey</textcolor>
          <shadowcolor>dimgrey</shadowcolor>
          <label>$PARAM[day]</label>
          <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0)</visible>
          <visible>!String.Contains(System.Date,$PARAM[day])</visible>
        </control>
      </control>
      <control type="list" id="$PARAM[id]">
        <onfocus>SetProperty(SpotFocus,true,Home)</onfocus>
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0)</visible>
        <movement>4</movement>
        <orientation>vertical</orientation>
        <width>320</width>
        <height>350</height>
        <scrolltime>200</scrolltime>
        <onup condition="Skin.HasSetting(DisableMenuHor)">300</onup>
        <onup condition="Window.IsVisible(Custom_Hub_Media.xml)">54</onup>
        <ondown condition="Window.Isvisible(Custom_Hub_Media.xml)">5412</ondown>
        <ondown condition="Window.Isvisible(Home)">330</ondown>
        <itemgap>5</itemgap>
        <itemlayout height="165">
          <control type="image">
            <top>50</top>
            <left>15</left>
            <height>60</height>
            <width>300</width>
            <texture background="true">$INFO[ListItem.Icon]</texture>
          </control>
          <control type="label">
            <top>120</top>
            <left>15</left>
            <width>345</width>
            <height>24</height>
            <font>font_tiny</font>
            <textcolor>red</textcolor>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label]</label>
          </control>
          <control type="label">
            <top>145</top>
            <left>15</left>
            <width>345</width>
            <height>24</height>
            <font>font_tiny</font>
            <textcolor>white</textcolor>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label2]</label>
          </control>
        </itemlayout>
        <focusedlayout height="165">
          <control type="image">
            <top>50</top>
            <left>15</left>
            <height>60</height>
            <width>300</width>
            <texture background="true">$INFO[ListItem.Icon]</texture>
          </control>
          <control type="image">
            <height>135</height>
            <left>10</left>
            <top>50</top>
            <width>310</width>
            <texture colordiffuse="white" border="20">common/outline.png</texture>
            <aspectratio>stretch</aspectratio>
            <visible>Control.HasFocus($PARAM[id])</visible>
          </control>
          <control type="label">
            <top>120</top>
            <left>15</left>
            <width>345</width>
            <height>24</height>
            <font>font_tiny</font>
            <textcolor>red</textcolor>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label]</label>
          </control>
          <control type="label">
            <top>145</top>
            <left>15</left>
            <width>345</width>
            <height>24</height>
            <font>font_tiny</font>
            <textcolor>white</textcolor>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label2]</label>
          </control>
        </focusedlayout>
        <content>
          <item id="1">
            <label>$INFO[Window(Home).Property(NextAired.1.Label)]$INFO[Window(Home).Property(NextAired.1.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.1.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.1.NextDay)] at $INFO[Window(Home).Property(NextAired.1.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.1.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.1.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.1.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="2">
            <label>$INFO[Window(Home).Property(NextAired.2.Label)]$INFO[Window(Home).Property(NextAired.2.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.2.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.2.NextDay)] at $INFO[Window(Home).Property(NextAired.2.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.2.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.2.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.2.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="3">
            <label>$INFO[Window(Home).Property(NextAired.3.Label)]$INFO[Window(Home).Property(NextAired.3.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.3.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.3.NextDay)] at $INFO[Window(Home).Property(NextAired.3.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.3.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.3.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.3.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="4">
            <label>$INFO[Window(Home).Property(NextAired.4.Label)]$INFO[Window(Home).Property(NextAired.4.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.4.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.4.NextDay)] at $INFO[Window(Home).Property(NextAired.4.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.4.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.4.Label)],call_auto=1190,delay=0.35)</onclick>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.4.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.4.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="5">
            <label>$INFO[Window(Home).Property(NextAired.5.Label)]$INFO[Window(Home).Property(NextAired.5.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.5.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.5.NextDay)] at $INFO[Window(Home).Property(NextAired.5.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.5.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.5.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.5.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="6">
            <label>$INFO[Window(Home).Property(NextAired.6.Label)]$INFO[Window(Home).Property(NextAired.6.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.6.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.6.NextDay)] at $INFO[Window(Home).Property(NextAired.6.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.6.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.6.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.6.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="7">
            <label>$INFO[Window(Home).Property(NextAired.7.Label)]$INFO[Window(Home).Property(NextAired.7.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.7.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.7.NextDay)] at $INFO[Window(Home).Property(NextAired.7.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.7.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.7.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.7.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="8">
            <label>$INFO[Window(Home).Property(NextAired.8.Label)]$INFO[Window(Home).Property(NextAired.8.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.8.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.8.NextDay)] at $INFO[Window(Home).Property(NextAired.8.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.8.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.8.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.8.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="9">
            <label>$INFO[Window(Home).Property(NextAired.9.Label)]$INFO[Window(Home).Property(NextAired.9.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.9.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.9.NextDay)] at $INFO[Window(Home).Property(NextAired.9.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.9.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.9.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.9.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="10">
            <label>$INFO[Window(Home).Property(NextAired.10.Label)]$INFO[Window(Home).Property(NextAired.10.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.10.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.10.NextDay)] at $INFO[Window(Home).Property(NextAired.10.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.10.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.10.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.10.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="11">
            <label>$INFO[Window(Home).Property(NextAired.11.Label)]$INFO[Window(Home).Property(NextAired.11.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.11.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.11.NextDay)] at $INFO[Window(Home).Property(NextAired.11.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.11.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.11.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.11.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="12">
            <label>$INFO[Window(Home).Property(NextAired.12.Label)]$INFO[Window(Home).Property(NextAired.12.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.12.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.12.NextDay)] at $INFO[Window(Home).Property(NextAired.12.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.12.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.12.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.12.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="13">
            <label>$INFO[Window(Home).Property(NextAired.13.Label)]$INFO[Window(Home).Property(NextAired.13.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.13.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.13.NextDay)] at $INFO[Window(Home).Property(NextAired.13.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.13.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.13.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.13.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="14">
            <label>$INFO[Window(Home).Property(NextAired.14.Label)]$INFO[Window(Home).Property(NextAired.14.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.14.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.14.NextDay)] at $INFO[Window(Home).Property(NextAired.14.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.14.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.14.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.14.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="15">
            <label>$INFO[Window(Home).Property(NextAired.15.Label)]$INFO[Window(Home).Property(NextAired.15.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.15.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.15.NextDay)] at $INFO[Window(Home).Property(NextAired.15.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.15.Art(banner))]</icon>
            <onclick>RunScript(plugin.video.themoviedb.helper,add_path=plugin://plugin.video.themoviedb.helper/?info=details&amp;type=tv&amp;query=$INFO[Window(Home).Property(NextAired.15.Label)],call_auto=1190,delay=0.35)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.15.NextDate),$PARAM[dayshort])</visible>
          </item>
        </content>
      </control>
    </definition>
  </include>
  <include name="object_search">
    <include>Global_Background</include>
    <!-- Onscreen keyboard by Cartmandos (Titan Bingie)  -->
    <control type="group">
      <top>90</top>
      <animation effect="slide" end="-450,0" time="500" condition="ControlGroup(5600).HasFocus">Conditional</animation>
      <control type="textbox">
        <left>70</left>
        <top>-10</top>
        <font>font_medium_bold</font>
        <textcolor>white</textcolor>
        <label>$INFO[Skin.String(osdCustomSearchTerm)]</label>
      </control>
      <control type="grouplist" id="9000">
        <top>65</top>
        <left>60</left>
        <height>500</height>
        <orientation>vertical</orientation>
        <itemgap>-10</itemgap>
        <defaultcontrol>101</defaultcontrol>
        <onright condition="!Integer.IsGreater(Container(5600).NumItems,0)">5600</onright>
        <onright>SetFocus(5600)</onright>
        <onback>ActivateWindow(1139)</onback>
	<ondown>1007</ondown>
        <!-- Space / Backspace Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1000" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_BackspaceAndSpace_Row" />
        </include>
        <!-- First Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1001" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_First_Row" />
        </include>
        <!-- Second Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1002" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Second_Row" />
        </include>
        <!-- Third Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1003" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Third_Row" />
        </include>
        <!-- Fourth Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1004" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Fourth_Row" />
        </include>
        <!-- Fifth Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1005" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Fifth_Row" />
        </include>
        <!-- Sixth Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1006" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Sixth_Row" />
        </include>
	<control type="grouplist">
	  <orientation>horizontal</orientation>
	  <width>380</width>
	  <itemgap>0</itemgap>
	  <left>0</left>
        <control type="button" id="1010">
            <onup>131</onup>
            <width>130</width>
            <height>70</height>
            <label>$LOCALIZE[31719]</label> <!-- Clear -->
            <onclick>Skin.Reset(CustomSearchTerm)</onclick>
            <onclick>ActivateWindow(1136)</onclick>
            <include>Key</include>
        </control>
        <control type="button" id="1009">
            <onup>131</onup>
            <width>240</width>
            <height>70</height>
            <label>$LOCALIZE[31629]</label> <!-- Search -->
            <onclick>Skin.SetString(TempCustomSearchTerm,$INFO[Skin.String(osdCustomSearchTerm)])</onclick>
            <onclick>ActivateWindow(1136)</onclick>
            <onclick>Skin.SetString(CustomSearchTerm,$INFO[Skin.String(TempCustomSearchTerm)])</onclick>
            <onclick>Skin.SetString(osdCustomSearchTerm,$INFO[Skin.String(TempCustomSearchTerm)])</onclick>
	    <onclick>Skin.Reset(TempCustomSearchTerm)</onclick>
	    <include>Key</include>
        </control>
        </control>
      </control>
    </control>
    <control type="label">
      <left>600</left>
      <centertop>30%</centertop>
      <font>search_heading</font>
      <textcolor>dimgrey</textcolor>
      <label>$LOCALIZE[31720]</label> <!-- Search for TV Shows and Movies -->
      <visible>String.IsEmpty(Skin.String(CustomSearchTerm))</visible>
    </control>
    <control type="group">
      <top>140</top>
      <left>-40</left>
      <include content="Search_Suggestions_Container" condition="Skin.HasSetting(EnableSearchHistory)">
        <param name="id" value="1007" />
        <onclick>Skin.SetString(TempSearchHistory,$INFO[Container(1007).ListItem.Label])</onclick>
        <onclick>SetFocus(1007,0,absolute)</onclick>
        <onclick>Skin.SetString(osdCustomSearchTerm,$INFO[Skin.String(TempSearchHistory)])</onclick>
        <onclick>1009</onclick>
        <visible>String.IsEmpty(Skin.String(osdCustomSearchTerm))</visible>
        <content>$VAR[searchhistory]</content>
      </include>
      <include content="Search_Suggestions_Container">
        <param name="id" value="1007" />
        <param name="onitemfocus" value="SetProperty(SuggestionPath,$INFO[ListItem.Property(path)])" />
        <param name="onitemfocus2" value="SetProperty(CustomSearch,1,home)" />
        <onclick condition="!String.IsEmpty(Skin.String(osdCustomSearchTerm))">Skin.SetString(osdCustomSearchTerm,$INFO[ListItem.Label])</onclick>
        <onclick condition="String.IsEmpty(Skin.String(osdCustomSearchTerm))">SetFocus(5600)</onclick>
        <visible>!$EXP[IsActualKeyboardActive] + !String.IsEmpty(Skin.String(osdCustomSearchTerm))</visible>
        <content>$VAR[SearchAutoCompleteContentProvider]</content>
      </include>
    </control>
    <include condition="!String.IsEmpty(Skin.String(CustomSearchTerm))">search_widgets</include>
  </include>
  <include name="search_widgets">
    <control type="group">
      <visible>!String.IsEmpty(Skin.String(CustomSearchTerm))</visible>
      <left>200</left>
      <top>40</top>
      <animation effect="slide" end="-450,0" time="500" condition="ControlGroup(5600).HasFocus">Conditional</animation>
      <width>1920</width>
      <control type="grouplist" id="5600">
        <width>1920</width>
        <height>1080</height>
        <left>270</left>
        <scrolltime tween="linear">500</scrolltime>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <onback>9000</onback>
        <onleft>9000</onleft>
        <control type="group" id="334" description="Spacer">
          <height>220</height>
          <visible>!Skin.HasSetting(DisableAuraHomeLayout)</visible>
        </control>
        <control type="group" id="335" description="Spacer">
          <height>50</height>
          <visible>Skin.HasSetting(DisableAuraHomeLayout)</visible>
        </control>
	<control type="label" id="336">
	   <height>50</height>
	   <visible>!Skin.HasSetting(SubmenuLabel) + !Skin.HasSetting(DisableAuraHomeLayout)</visible>
	</control>
        <include condition="!String.IsEmpty(Skin.String(CustomSearchTerm))">skinshortcuts-template-searchlist</include>
      </control>
    </control>
  </include>
  <include name="netflixhub_movies_widgets">
    <include>skinshortcuts-template-netflixhubmovies</include>
  </include>
  <include name="seemore">
    <control type="group">
      <visible>String.IsEqual(ListItem.Label,See More...) | String.IsEqual(ListItem.Label,Next)</visible>
      <control type="image">
        <texture background="true" colordiffuse="darkgrey">common/white.png</texture>
        <aspectratio scalediffuse="false">scale</aspectratio>
      </control>
      <control type="image">
        <height>100%</height>
        <width>100%</width>
        <texture colordiffuse="99000000" flipy="true">diffuse/landscape.png</texture>
      </control>
      <control type="textbox">
        <centerleft>50%</centerleft>
        <textcolor>grey</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>font_small_bold</font>
        <width min="100" max="250">auto</width>
        <aligny>center</aligny>
        <align>center</align>
        <label>$INFO[ListItem.Label]</label>
        <wrapmultiline>true</wrapmultiline>
      </control>
    </control>
  </include>
  <include name="netflixhub_tv_widgets">
    <control type="grouplist" id="5700">
      <width>1920</width>
      <height>1080</height>
      <left>10</left>
      <scrolltime tween="quadratic">400</scrolltime>
      <orientation>vertical</orientation>
      <usecontrolcoords>true</usecontrolcoords>
      <onback>9000</onback>
      <onleft>9000</onleft>
      <control type="group" id="334" description="Spacer">
        <height>220</height>
        <visible>!Skin.HasSetting(DisableAuraHomeLayout)</visible>
      </control>
      <control type="group" id="335" description="Spacer">
        <height>50</height>
        <visible>Skin.HasSetting(DisableAuraHomeLayout)</visible>
      </control>
      <include>skinshortcuts-template-netflixhubtv</include>
    </control>
  </include>
  <include name="netflix_largewidgets_top">
    <top>40</top>
  </include>
  <include name="netflix_largewidgets_height">
    <height>40</height>
  </include>
  <include name="netflix_smallwidgets_top">
    <top>-40</top>
  </include>
  <include name="Widgets_Items_Submenu_Height">
    <height>140</height>
  </include>
  <include name="Widgets_Items_Submenu_Big_Height">
    <height>widget_submenu_big_spacer</height>
  </include>
  <include name="Widgets_Items_menu_Big_Height">
    <height>420</height>
  </include>
  <include name="Widgets_Items_menu_Small_Height">
    <height>210</height>
  </include>

  <include name="Widgets_Label">
    <definition>
      <control type="grouplist">
        <left>70</left>
        <top>40</top>
        <height>40</height>
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="image">
          <width>16</width>
          <height>100%</height>
          <aspectratio aligny="center">keep</aspectratio>
          <texture colordiffuse="main_fg_30">common/cube-16.png</texture>
          <visible>!Control.HasFocus($PARAM[submenu]) + Skin.HasSetting(DisableCubeIcon)</visible>
        </control>
        <control type="label">
          <font>font_widgetbar_bold</font>
          <left>2</left>
          <textcolor>main_fg_100</textcolor>
          <label>$PARAM[label]</label>
          <include>Statusbar_Menubar_Items</include>
        </control>
        <control type="label">
          <font>font_widgetbar_bold</font>
          <left>3</left>
          <textcolor>main_fg_100</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.Property(similartitle)]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Property(similartitle))</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.Top250,#,]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Top250)</visible>
          <visible>String.Contains($PARAM[content],Top250)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.Artist,- ,]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>!String.IsEqual(Container($PARAM[id]).ListItem.Label,Container($PARAM[id]).ListItem.Artist) + !String.IsEmpty(Container($PARAM[id]).ListItem.Artist)</visible>
          <visible>!Skin.HasSetting(WidgetsLabel.DisableArtist)</visible>
        </control>
        <!-- Add Title, Rating and Plot to Widget Bar -->
        <!-- Add TvShow Title to widget bar only at Show level  -->
        <control type="label">
          <textcolor>$VAR[ColorHighlight2]</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.Label,| ]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>Skin.HasSetting(DisableWidgetTitle) + [Window.IsVisible(1138) | Window.IsVisible(3910) | Window.IsVisible(3920)]</visible>
        </control>
        <!-- Add Ratings -->
        <control type="label">
          <label>$LOCALIZE[31789]: $INFO[ListItem.Premiered(dd MMM yyyy)]</label> <!-- Aired -->
          <textcolor>$VAR[ColorHighlight2]</textcolor>
          <font>font_tiny_bold</font>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(DisableWidgetAirdate) + [Window.IsVisible(1138) | Window.IsVisible(3910) | Window.IsVisible(3920)]</visible>
        </control>
        <control type="grouplist">
          <visible>Control.HasFocus($PARAM[id]) + !Control.HasFocus(30222) + Skin.HasSetting(DisableWidgetIMDB) + [Window.IsVisible(1138) | Window.IsVisible(3910) | Window.IsVisible(3920)]</visible>
          <bottom>10</bottom>
          <height>40</height>
          <include content="Object_Ratings">
            <param name="directory" value="color" />
            <param name="align" value="left" />
            <param name="width" value="1400" />
            <param name="rottentomatoes" value="true" />
            <param name="imdbvotes" value="false" />
            <param name="usermeter" value="false" />
            <param name="imdb" value="true" />
            <param name="tmdb" value="true" />
            <param name="metacritic" value="true" />
            <param name="oscars" value="true" />
            <param name="top250" value="false" />
            <param name="plot" value="true" />
            <param name="studio" value="false" />
            <param name="studioid" value="90681" />
          </include>
        </control>
        <control type="label">
          <left>5</left>
          <visible>Control.HasFocus($PARAM[id]) + Skin.HasSetting(DisableWidgetPlot) + Skin.HasSetting(DisableWidgetIMDB) + ![Window.IsVisible(Home) + Skin.HasSetting(DisableNetflixHome)] + Window.IsVisible(Home)</visible>
          <textcolor>main_fg_70</textcolor>
          <height>20</height>
          <top>10</top>
          <align>right</align>
          <width min="500" max="1500">auto</width>
          <scroll>true</scroll>
          <label>$INFO[ListItem.Plot]</label>
        </control>
        <!-- END Add Widget Bar Mods -->
      </control>
    </definition>
  </include>
  <include name="Widget_Label_height_hub1">
    <top>widget_top</top>
  </include>


  <include name="Widget_Label_aura">
    <param name="postercondition" default="false" />
    <param name="landscapedetailscondition" default="false" />
    <param name="landscapepanelcondition" default="false" />
    <param name="landscapecondition" default="false" />
    <param name="Showcase" default="false" />
    <definition>
      <control type="grouplist">
        <top>18</top>
        <left>70</left>
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>20</itemgap>
        <control type="image">
          <top>-5</top>
          <width>16</width>
          <height>100%</height>
          <aspectratio aligny="center">keep</aspectratio>
          <texture colordiffuse="main_fg_30">common/cube-16.png</texture>
          <visible>!Control.HasFocus($PARAM[submenu]) + Skin.HasSetting(DisableCubeIcon)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <left>2</left>
          <textcolor>main_fg_100</textcolor>
          <label>$PARAM[label] $INFO[Container($PARAM[id]).ListItem.Property(widget)]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>String.StartsWith(Container($PARAM[id]).ListItem.FileNameAndPath,plugin://plugin.video.themoviedb.helper) + !String.IsEqual(Container($PARAM[id]).ListItem.Property(widget),TMDb Helper) + Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <font>font_widgetbar_bold</font>
          <left>2</left>
          <textcolor>main_fg_100</textcolor>
          <label>$PARAM[label] $INFO[Container($PARAM[id]).ListItem.Property(widget)]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>String.StartsWith(Container($PARAM[id]).ListItem.FileNameAndPath,plugin://plugin.video.themoviedb.helper) + !String.IsEqual(Container($PARAM[id]).ListItem.Property(widget),TMDb Helper) + !Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <left>2</left>
          <textcolor>main_fg_100</textcolor>
          <label>$PARAM[label]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>[!String.StartsWith(Container($PARAM[id]).ListItem.FileNameAndPath,plugin://plugin.video.themoviedb.helper) | [String.StartsWith(Container($PARAM[id]).ListItem.FileNameAndPath,plugin://plugin.video.themoviedb.helper) + String.IsEqual(Container($PARAM[id]).ListItem.Property(widget),TMDb Helper)]] + Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <font>font_widgetbar_bold</font>
          <left>2</left>
          <textcolor>main_fg_100</textcolor>
          <label>$PARAM[label]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>[!String.StartsWith(Container($PARAM[id]).ListItem.FileNameAndPath,plugin://plugin.video.themoviedb.helper) | [String.StartsWith(Container($PARAM[id]).ListItem.FileNameAndPath,plugin://plugin.video.themoviedb.helper) + String.IsEqual(Container($PARAM[id]).ListItem.Property(widget),TMDb Helper)]] + !Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <textcolor>main_fg_70</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.Artist,- ,]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>!String.IsEqual(Container($PARAM[id]).ListItem.Label,Container($PARAM[id]).ListItem.Artist) + !String.IsEmpty(Container($PARAM[id]).ListItem.Artist)</visible>
          <visible>!Skin.HasSetting(WidgetsLabel.DisableArtist)</visible>
        </control>
        <!-- Add Title, Rating and Plot to Widget Bar -->
        <control type="label">
          <top>-2</top>
          <textcolor>$VAR[ColorHighlight2]</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.Label,| ]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id]) + !$PARAM[landscapedetailscondition] + !$PARAM[landscapepanelcondition]</visible>
          <visible>![Control.HasFocus(30222) + Skin.HasSetting(DisableCatlabel)] + Skin.HasSetting(DisableWidgetTitle) + ![[$PARAM[landscapepanelcondition] | $PARAM[landscapecondition] | $PARAM[postercondition]] + $PARAM[Showcase]]</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
          <visible>Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <font>font_widgetbar_bold</font>
          <textcolor>$VAR[ColorHighlight2]</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.Label,| ]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id]) + !$PARAM[landscapedetailscondition] + !$PARAM[landscapepanelcondition]</visible>
          <visible>![Control.HasFocus(30222) + Skin.HasSetting(DisableCatlabel)] + Skin.HasSetting(DisableWidgetTitle) + ![[$PARAM[landscapepanelcondition] | $PARAM[landscapecondition] | $PARAM[postercondition]] + $PARAM[Showcase]]</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
          <visible>!Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <textcolor>$VAR[ColorHighlight2]</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.Year,| ]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>!String.IsEqual(ListItem.DBType,episode) + ![Control.HasFocus(30222) + Skin.HasSetting(DisableCatlabel)] + Skin.HasSetting(DisableWidgetYear) + ![[$PARAM[landscapepanelcondition] | $PARAM[landscapecondition] | $PARAM[postercondition]] + $PARAM[Showcase]]</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
          <visible>Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <font>font_widgetbar_bold</font>
          <textcolor>$VAR[ColorHighlight2]</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.Year,| ]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>!String.IsEqual(ListItem.DBType,episode) + ![Control.HasFocus(30222) + Skin.HasSetting(DisableCatlabel)] + Skin.HasSetting(DisableWidgetYear) + ![[$PARAM[landscapepanelcondition] | $PARAM[landscapecondition] | $PARAM[postercondition]] + $PARAM[Showcase]]</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
          <visible>!Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <textcolor>$VAR[ColorHighlight2]</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.MPAA,| ]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>![Control.HasFocus(30222) + Skin.HasSetting(DisableCatlabel)] + Skin.HasSetting(DisableWidgetMPAA) + ![[$PARAM[landscapepanelcondition] | $PARAM[landscapecondition] | $PARAM[postercondition]] + $PARAM[Showcase]]</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
          <visible>Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <control type="label">
          <top>-2</top>
          <font>font_widgetbar_bold</font>
          <textcolor>$VAR[ColorHighlight2]</textcolor>
          <label>$INFO[Container($PARAM[id]).ListItem.MPAA,| ]</label>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>![Control.HasFocus(30222) + Skin.HasSetting(DisableCatlabel)] + Skin.HasSetting(DisableWidgetMPAA) + ![[$PARAM[landscapepanelcondition] | $PARAM[landscapecondition] | $PARAM[postercondition]] + $PARAM[Showcase]]</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
          <visible>!Skin.HasSetting(LargeWidgetLabel)</visible>
        </control>
        <!-- Add Airdate -->
        <control type="label">
          <top>-2</top>
          <label>$LOCALIZE[31789]: $INFO[ListItem.Premiered(dd MMM yyyy)]</label> <!-- Aired -->
          <textcolor>$VAR[ColorHighlight2]</textcolor>
          <font>font_tiny_bold</font>
          <include>Statusbar_Menubar_Items</include>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(DisableWidgetAirdate)</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
        </control>
        <!-- Add Ratings -->
        <control type="grouplist">
          <top>-28</top>
          <animation effect="fade" start="0" end="100" time="0" delay="900">Visible</animation>
          <visible>!Container($PARAM[id]).OnNext + !Container($PARAM[id]).OnScrollNext + !Container($PARAM[id]).OnPrevious + !Container($PARAM[id]).OnScrollPrevious</visible>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>$EXP[DBTvideos] + [!String.Contains(ListItem.FileNameAndPath,plugin://plugin.video.youtube) + !String.Contains(Container.ListItem.FileNameAndPath,plugin://plugin.video.youtube)]</visible>
          <visible>Skin.HasSetting(DisableWidgetIMDB) + !Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
          <visible>![Window.IsVisible(DialogVideoInfo.xml) + Control.HasFocus(53001)]</visible>
          <bottom>-5</bottom>
          <height>40</height>
          <include content="Object_Ratings" condition="!Window.IsVisible(DialogVideoInfo.xml)">
            <param name="directory" value="color" />
            <param name="align" value="left" />
            <param name="width" value="1400" />
            <param name="rottentomatoes" value="true" />
            <param name="imdbvotes" value="true" />
            <param name="usermeter" value="true" />
            <param name="imdb" value="true" />
            <param name="tmdb" value="true" />
            <param name="metacritic" value="true" />
            <param name="oscars" value="true" />
            <param name="top250" value="true" />
            <param name="plot" value="true" />
            <param name="studio" value="false" />
            <param name="studioid" value="90682" />
          </include>
          <include content="Object_Ratings_TMDB" condition="Window.IsVisible(DialogVideoInfo.xml)">
            <param name="directory" value="color" />
            <param name="align" value="left" />
            <param name="width" value="1400" />
            <param name="rottentomatoes" value="true" />
            <param name="imdbvotes" value="true" />
            <param name="usermeter" value="true" />
            <param name="imdb" value="true" />
            <param name="tmdb" value="true" />
            <param name="metacritic" value="true" />
            <param name="oscars" value="true" />
            <param name="top250" value="true" />
            <param name="plot" value="true" />
            <param name="studio" value="false" />
            <param name="studioid" value="90710" />
          </include>
        </control>
        <control type="grouplist">
          <top>-28</top>
          <animation effect="fade" start="0" end="100" time="0" delay="900">Visible</animation>
          <visible>!Container($PARAM[id]).OnNext + !Container($PARAM[id]).OnScrollNext + !Container($PARAM[id]).OnPrevious + !Container($PARAM[id]).OnScrollPrevious</visible>
          <visible>Control.HasFocus($PARAM[id])</visible>
          <visible>$EXP[DBTvideos] + [!String.Contains(ListItem.FileNameAndPath,plugin://plugin.video.youtube) + !String.Contains(Container.ListItem.FileNameAndPath,plugin://plugin.video.youtube)]</visible>
          <visible>Skin.HasSetting(DisableWidgetIMDB) + Skin.HasSetting(DisableWidgetStudio)</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
          <visible>![Window.IsVisible(DialogVideoInfo.xml) + Control.HasFocus(53001)]</visible>
          <bottom>-5</bottom>
          <height>40</height>
          <include content="Object_Ratings" condition="!Window.IsVisible(DialogVideoInfo.xml)">
            <param name="directory" value="color" />
            <param name="align" value="left" />
            <param name="width" value="1400" />
            <param name="rottentomatoes" value="true" />
            <param name="imdbvotes" value="true" />
            <param name="usermeter" value="true" />
            <param name="imdb" value="true" />
            <param name="tmdb" value="true" />
            <param name="metacritic" value="true" />
            <param name="oscars" value="true" />
            <param name="top250" value="true" />
            <param name="plot" value="true" />
            <param name="studio" value="true" />
            <param name="studioid" value="90683" />
          </include>
          <include content="Object_Ratings_TMDB" condition="Window.IsVisible(DialogVideoInfo.xml)">
            <param name="directory" value="color" />
            <param name="align" value="left" />
            <param name="width" value="1400" />
            <param name="rottentomatoes" value="true" />
            <param name="imdbvotes" value="true" />
            <param name="usermeter" value="true" />
            <param name="imdb" value="true" />
            <param name="tmdb" value="true" />
            <param name="metacritic" value="true" />
            <param name="oscars" value="true" />
            <param name="top250" value="true" />
            <param name="plot" value="true" />
            <param name="studio" value="true" />
            <param name="studioid" value="90711" />
          </include>
        </control>
        <!-- Add Plot when no ratings -->
        <control type="label">
          <left>5</left>
          <visible>Control.HasFocus($PARAM[id]) + Skin.HasSetting(DisableWidgetPlot) + !Skin.HasSetting(DisableWidgetIMDB)</visible>
          <visible>![Window.IsVisible(4010) | Window.IsVisible(4020)]</visible>
          <textcolor>main_fg_70</textcolor>
          <height>20</height>
          <top>10</top>
          <align>left</align>
          <width min="50" max="1500">auto</width>
          <scroll>true</scroll>
          <label>$INFO[ListItem.Plot]</label>
        </control>
        <!-- END Add Widget Bar Mods -->
      </control>
    </definition>
  </include>

  <include name="Aura_Widget_Background">
    <control type="group" id="4$PARAM[id]">
      <control type="image">
        <width>100%</width>
        <height>430</height>
        <texture background="true" colordiffuse="$VAR[Global_FanartDim]">common/white.png</texture>
        <visible>$PARAM[postercondition] + Control.HasFocus($PARAM[id])</visible>
      </control>
      <control type="image">
        <left>40</left>
        <top>100</top>
        <width>500</width>
        <height>281</height>
        <texture background="true">$INFO[ListItem.Art(clearart)]</texture>
        <visible>$PARAM[postercondition] + Control.HasFocus($PARAM[id])</visible>
      </control>
    </control>
  </include>

  <include name="Widget_AuraHub_width_landscapepanel">
    <width>1450</width>
  </include>
  <include name="Widget_Label_height">
    <top>655</top>
  </include>
  <include name="Widget_Label_height_hub">
    <top>250</top>
  </include>
  <include name="Widget_AuraHub">
    <param name="submenu" default="false" />
    <param name="genres" default="false" />
    <param name="studios" default="false" />
    <param name="text" default="false" />
    <param name="widgetAspect" default="$PARAM[widgetAspect]" />
    <param name="postercondition" default="false" />
    <param name="landscapecondition" default="false" />
    <param name="landscapewidecondition" default="false" />
    <param name="landscapewidepostercondition" default="false" />
    <param name="landscapenetflixcondition" default="false" />
    <param name="landscapepanelcondition" default="false" />
    <param name="bigpostercondition" default="false" />
    <param name="landscapedetailscondition" default="false" />
    <param name="landscapepanel" default="false" />
    <param name="posterdetailscondition" default="false" />
    <param name="widgetlivecondition" default="false" />
    <param name="categorycondition" default="false" />
    <param name="squarecondition" default="false" />
    <param name="squarelabelcondition" default="false" />
    <param name="genrecondition" default="false" />
    <param name="submenucondition" default="false" />
    <param name="controltype" default="fixedlist" />
    <param name="search" default="false" />
    <param name="movement" default="1" />
    <param name="Showcase" default="false" />
    <param name="Showcasehide" default="true" />
    <param name="InfoSlide" default="false" />
    <definition>
      <control type="group" id="4$PARAM[id]">
        <include content="widget_showcase_focused">
          <param name="id" value="$PARAM[id]" />
          <param name="Showcase" value="$PARAM[Showcase]" />
          <param name="Showcasehide" value="$PARAM[Showcasehide]" />
          <param name="InfoSlide" value="$PARAM[InfoSlide]" />
          <param name="controltype" value="$PARAM[controltype]" />
          <param name="postercondition" value="$PARAM[postercondition]" />
          <param name="landscapecondition" value="$PARAM[landscapecondition]" />
          <param name="landscapepanelcondition" value="$PARAM[landscapepanelcondition]" />
        </include>
      </control>
      <control type="group" id="5$PARAM[id]">
	<include content="top" condition="Window.IsVisible(Home)">
	   <param name="top" value="-210" />
	</include>
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
        <include content="widget_landscapewide_bg">
          <param name="id" value="$PARAM[id]" />
          <param name="height" value="516.20" />
          <param name="landscapewidecondition" value="$PARAM[landscapewidecondition]" />
          <param name="landscapewidebg" value="$PARAM[landscapewidebg]" />
        </include>
      </control>
      <control type="group" id="2$PARAM[id]">
        <visible>$PARAM[visible]</visible>
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
        <control type="group">
        <animation effect="slide" end="-50,0" time="0" reversible="false" condition="!Control.HasFocus(300) + $PARAM[landscapewidebg] + $PARAM[landscapewidecondition]">Conditional</animation>
        <include content="left" condition="![$PARAM[landscapewidecondition] + $PARAM[landscapewidebg]]">
          <param name="left" value="-60" />
        </include>
          <include content="Widget_Label_aura">
            <param name="id" value="$PARAM[id]" />
            <param name="label" value="$PARAM[label]" />
            <param name="content" value="$PARAM[content]" />
            <param name="widgetContent" value="$PARAM[widgetContent]" />
            <param name="postercondition" value="$PARAM[postercondition]" />
            <param name="landscapedetailscondition" value="$PARAM[landscapedetailscondition]" />
            <param name="landscapepanelcondition" value="$PARAM[landscapepanelcondition]" />
            <param name="landscapecondition" value="$PARAM[landscapecondition]" />
            <param name="Showcase" value="$PARAM[Showcase]" />
          </include>
        </control>
        <control type="group">
        <include content="aurahub_widget_height">
          <param name="id" value="$PARAM[id]" />
          <param name="submenu" value="$PARAM[submenu]" />
          <param name="postercondition" value="$PARAM[postercondition]" />
          <param name="landscapecondition" value="$PARAM[landscapecondition]" />
          <param name="landscapewidecondition" value="$PARAM[landscapewidecondition]" />
          <param name="landscapewidepostercondition" value="$PARAM[landscapewidepostercondition]" />
          <param name="landscapenetflixcondition" value="$PARAM[landscapenetflixcondition]" />
          <param name="landscapepanelcondition" value="$PARAM[landscapepanelcondition]" />
          <param name="landscapedetailscondition" value="$PARAM[landscapedetailscondition]" />
          <param name="posterdetailscondition" value="$PARAM[posterdetailscondition]" />
          <param name="bigpostercondition" value="$PARAM[bigpostercondition]" />
          <param name="widgetlivecondition" value="$PARAM[widgetlivecondition]" />
          <param name="categorycondition" value="$PARAM[categorycondition]" />
          <param name="submenucondition" value="$PARAM[submenucondition]" />
          <param name="squarecondition" value="$PARAM[squarecondition]" />
          <param name="squarelabelcondition" value="$PARAM[squarelabelcondition]" />
          <param name="genrecondition" value="$PARAM[genrecondition]" />
        </include>
          <left>-395</left>
          <include content="Defs_BusySpinner">
            <param name="label" value="$LOCALIZE[31138]..." />
          </include>
          <visible>[Container($PARAM[id]).IsUpdating + !Integer.IsGreater(Container($PARAM[id]).NumItems,0)] | [Window.IsVisible(1138) + Container($PARAM[id]).IsUpdating]</visible>
        </control>
      </control>

      <control type="$PARAM[controltype]" id="$PARAM[id]">
        <include content="left" condition="![$PARAM[landscapewidecondition] + $PARAM[landscapewidebg]]">
          <param name="left" value="-55" />
        </include>
        <include content="left" condition="[$PARAM[landscapewidecondition] + $PARAM[landscapewidebg]]">
          <param name="left" value="0" />
        </include>
        <top>30</top>
        <scrolltime>500</scrolltime>
        <include condition="$PARAM[Showcase] | $PARAM[InfoSlide]">Widget_Movement_Showcase</include>
        <movement>$PARAM[movement]</movement>
        <animation effect="slide" end="-50,0" delay="500" reversible="false" condition="!Control.HasFocus(300) + $PARAM[landscapewidebg] + $PARAM[landscapewidecondition]">Conditional</animation>
        <include content="showcase_animations">
           <param name="id" value="$PARAM[id]" />
           <param name="Showcase" value="$PARAM[Showcase]" />
           <param name="Showcasehide" value="$PARAM[Showcasehide]" />
           <param name="postercondition" value="$PARAM[postercondition]" />
           <param name="landscapecondition" value="$PARAM[landscapecondition]" />
           <param name="landscapepanelcondition" value="$PARAM[landscapepanelcondition]"  />
        </include>
        <animation effect="fade" start="100" end="0" condition="Window.IsVisible(1138) + Container($PARAM[id]).IsUpdating">Conditional</animation>
        <include content="aurahub_widget_height">
          <param name="id" value="$PARAM[id]" />
          <param name="submenu" value="$PARAM[submenu]" />
          <param name="postercondition" value="$PARAM[postercondition]" />
          <param name="landscapecondition" value="$PARAM[landscapecondition]" />
          <param name="landscapewidecondition" value="$PARAM[landscapewidecondition]" />
          <param name="landscapewidepostercondition" value="$PARAM[landscapewidepostercondition]" />
          <param name="landscapenetflixcondition" value="$PARAM[landscapenetflixcondition]" />
          <param name="landscapepanelcondition" value="$PARAM[landscapepanelcondition]" />
          <param name="landscapedetailscondition" value="$PARAM[landscapedetailscondition]" />
          <param name="posterdetailscondition" value="$PARAM[posterdetailscondition]" />
          <param name="bigpostercondition" value="$PARAM[bigpostercondition]" />
          <param name="widgetlivecondition" value="$PARAM[widgetlivecondition]" />
          <param name="categorycondition" value="$PARAM[categorycondition]" />
          <param name="submenucondition" value="$PARAM[submenucondition]" />
          <param name="squarecondition" value="$PARAM[squarecondition]" />
          <param name="squarelabelcondition" value="$PARAM[squarelabelcondition]" />
          <param name="genrecondition" value="$PARAM[genrecondition]" />
        </include>
	<onback condition="!String.IsEmpty(Window(Home).Property(widgetslide))">ClearProperty(widgetslide,home)</onback>
        <onback>SetProperty(hubonback,true,home)</onback>
        <onback>Skin.Reset(TVHubMenuFocus)</onback>
        <onback>Skin.Reset(MovieHubMenuFocus)</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[id]).Position,0) | Container($PARAM[id]).HasPrevious">Control.Move($PARAM[id],$INFO[Container($PARAM[id]).CurrentItem,-,])</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[id]).Position,0) | Container($PARAM[id]).HasPrevious">Control.Move($PARAM[id],1)</onback>
        <onback condition="[Window.IsVisible(3910) | Window.IsVisible(3920)] + [!Integer.IsEqual(Container($PARAM[id]).Position,0) | Container($PARAM[id]).HasPrevious]">5555</onback>
        <onback condition="ControlGroup(5055).HasFocus">505</onback>
	<onback condition="!Container($PARAM[id]).HasPrevious + [Window.IsVisible(2111) | Window.IsVisible(2113) | Window.IsVisible(2115) | Window.IsVisible(2116) | Window.IsVisible(2117)]">ActivateWindow(Home)</onback>
        <onclick condition="!Skin.HasSetting(EnableShowInfo) + [[String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(ShowInfo.Episodes)] | [String.IsEqual(ListItem.DBType,tvshow) + !Skin.HasSetting(ShowInfo.TV)] | [String.IsEqual(ListItem.DBType,movie) + !Skin.HasSetting(ShowInfo.Movies)]]">Action(Info)</onclick>

        <visible>$PARAM[visible] + [Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating | String.IsEmpty(Window(Home).Property(WidgetLoading))]</visible>
        <include content="Widget_Items" condition="!$PARAM[submenu]">
          <param name="id" value="$PARAM[id]" />
          <param name="target" value="$PARAM[target]" />
          <param name="content" value="$PARAM[content]" />
          <param name="widgetContent" value="$PARAM[widgetContent]" />
          <param name="aspect" value="$PARAM[aspect]" />
          <param name="widgetAspect" value="$PARAM[widgetAspect]" />
          <param name="submenu" value="$PARAM[submenu]" />
          <param name="sortby" value="$PARAM[sortby]" />
          <param name="sortorder" value="$PARAM[sortorder]" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
          <param name="postercondition" value="$PARAM[postercondition]" />
          <param name="landscapecondition" value="$PARAM[landscapecondition]" />
          <param name="landscapewidecondition" value="$PARAM[landscapewidecondition]" />
          <param name="landscapewidepostercondition" value="$PARAM[landscapewidepostercondition]" />
          <param name="landscapenetflixcondition" value="$PARAM[landscapenetflixcondition]" />
          <param name="landscapepanelcondition" value="$PARAM[landscapepanelcondition]" />
          <param name="landscapedetailscondition" value="$PARAM[landscapedetailscondition]" />
          <param name="posterdetailscondition" value="$PARAM[posterdetailscondition]" />
          <param name="bigpostercondition" value="$PARAM[bigpostercondition]" />
          <param name="widgetlivecondition" value="$PARAM[widgetlivecondition]" />
          <param name="categorycondition" value="$PARAM[categorycondition]" />
          <param name="submenucondition" value="$PARAM[submenucondition]" />
          <param name="squarecondition" value="$PARAM[squarelabelcondition]" />
          <param name="genrecondition" value="$PARAM[genrecondition]" />
          <param name="search" value="$PARAM[search]" />
          <param name="InfoSlide" value="$PARAM[InfoSlide]" />
          <param name="controltype" value="$PARAM[controltype]" />
        </include>
      </control>
     <control type="group" id="10$PARAM[id]">
        <include content="WidgetInfoSlide">
          <param name="id" value="$PARAM[id]" />
          <param name="Showcase" value="$PARAM[Showcase]" />
          <param name="InfoSlide" value="$PARAM[InfoSlide]" />
          <param name="controltype" value="$PARAM[controltype]" />
          <param name="postercondition" value="$PARAM[postercondition]" />
          <param name="landscapecondition" value="$PARAM[landscapecondition]" />
          <param name="landscapenetflixcondition" value="$PARAM[landscapenetflixcondition]" />
          <param name="landscapepanelcondition" value="$PARAM[landscapepanelcondition]" />
        </include>
      </control>
    </definition>
  </include>

  <include name="aurahub_widget_height">
    <param name="submenu" default="false" />
    <param name="postercondition" default="false" />
    <param name="landscapecondition" default="false" />
    <param name="landscapewidecondition" default="false" />
    <param name="landscapewidepostercondition" default="false" />
    <param name="landscapenetflixcondition" default="false" />
    <param name="landscapepanelcondition" default="false" />
    <param name="bigpostercondition" default="false" />
    <param name="landscapedetailscondition" default="false" />
    <param name="landscapepanel" default="false" />
    <param name="posterdetailscondition" default="false" />
    <param name="widgetlivecondition" default="false" />
    <param name="categorycondition" default="false" />
    <param name="squarecondition" default="false" />
    <param name="squarelabelcondition" default="false" />
    <param name="genrecondition" default="false" />
    <param name="submenucondition" default="false" />
    <definition>
        <include condition="$PARAM[submenu] + !Skin.HasSetting(SubmenuLabel)">Widget_Items_Submenu_Height</include>
        <include condition="$PARAM[submenu] + Skin.HasSetting(SubmenuLabel)">Widget_Items_Submenu_Big_Height</include>
        <include condition="!Skin.HasSetting(AuraHubSpacingSmall) + !$PARAM[bigpostercondition] + !$PARAM[landscapepanelcondition]">AuraWidget_Items_Default</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[postercondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Poster_Big</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[postercondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Poster_Big_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapecondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Landscape_Big_Height_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapecondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Landscape_Big_Height</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapewidecondition] + Skin.HasSetting(SubmenuLabel) + !Skin.HasSetting(WidgetLabelsBelow)">AuraWidget_Items_LandscapeWide</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapewidecondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_LandscapeWide_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapewidepostercondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Poster_Big</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapewidepostercondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Poster_Big_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapenetflixcondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Landscapesmall_Big_Height</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapenetflixcondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Landscapesmall_Big_Height_small</include>
        <include condition="!Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapepanelcondition]">Widget_AuraHub_width_landscapepanel</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapepanelcondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_LandscapePanel_Height</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapepanelcondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_LandscapePanel_Height_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapedetailscondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Landscape_Big_Height</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[landscapedetailscondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Landscape_Big_Height_small</include>
        <include condition="!Skin.HasSetting(AuraHubSpacingSmall) + !$PARAM[bigpostercondition] + !$PARAM[landscapepanelcondition]">AuraWidget_Items_Default</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[posterdetailscondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Poster_Big</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[posterdetailscondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Poster_Big_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[widgetlivecondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Live_Big_Height</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[widgetlivecondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Live_Big_Height_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[categorycondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Category_Big_Height</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[categorycondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Category_Big_Height_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[squarelabelcondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_SquareLabel_Big</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[squarelabelcondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_SquareLabel_Big_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[squarecondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Square_Height</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[squarecondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_Square_Big_Height_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[genrecondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_genre_Big_Height</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[genrecondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_genre_Big_Height_small</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[submenucondition] + Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_SubmenuWidget_Big_Height</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall) + $PARAM[submenucondition] + !Skin.HasSetting(SubmenuLabel)">AuraWidget_Items_SubmenuWidget_Big_Height_small</include>
   </definition>
  </include>

  <include name="Widget_Netflixhub">
    <param name="submenu" default="false" />
    <param name="genres" default="false" />
    <param name="studios" default="false" />
    <param name="text" default="false" />
    <param name="postercondition" default="false" />
    <param name="landscapecondition" default="false" />
    <param name="landscapewidecondition" default="false" />
    <param name="landscapewidepostercondition" default="false" />
    <param name="landscapenetflixcondition" default="false" />
    <param name="landscapepanelcondition" default="false" />
    <param name="posterdetailscondition" default="false" />
    <param name="widgetlivecondition" default="false" />
    <param name="categorycondition" default="false" />
    <param name="squarecondition" default="false" />
    <param name="genrecondition" default="false" />
    <param name="submenucondition" default="false" />
    <param name="search" default="false" />
    <param name="controltype" default="fixedlist" />
    <param name="mylist1" default="false" />
    <param name="movement" default="1" />
    <param name="vislbe" default="" />
    <definition>
      <control type="group" id="2$PARAM[id]">
        <visible>$PARAM[visible]</visible>
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
        <include condition="!Skin.HasSetting(DisableNetflixSmallWidget)">netflix_largewidgets_height</include>
        <include condition="Skin.HasSetting(DisableNetflixSmallWidget)">netflix_smallwidgets_top</include>
        <animation effect="slide" end="0,-40" time="0" condition="!Window.IsVisible(Home) + !Window.IsVisible(3810) + !Window.IsVisible(3820)">Conditional</animation>
        <animation effect="slide" end="0,-40" time="0" condition="Window.IsVisible(DialogVideoInfo.xml)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,100" time="0" condition="$PARAM[submenucondition] + [Window.IsVisible(3810) | Window.IsVisible(3810)]">Condition al</animation>
        <include content="Widgets_Label">
          <param name="id" value="$PARAM[id]" />
          <param name="label" value="$PARAM[label]" />
          <param name="content" value="$PARAM[content]" />
          <param name="widgetContent" value="$PARAM[widgetContent]" />
        </include>
        <control type="group">
          <animation effect="slide" end="-80,40" time="0" condition="[Window.IsActive(4010) | Window.IsActive(4020) | Window.IsActive(2111) | Window.IsActive(2112) | Window.IsActive(2113)| Window.IsActive(2114) | Window.IsActive(2115)| Window.IsActive(2116) | Window.IsActive(2117)] + !Window.IsVisible(1138) + !Window.IsVisible(Home) + $PARAM[postercondition]">Conditional</animation>
          <animation effect="slide" end="-390,40" time="0" condition="[Window.IsActive(4010) | Window.IsActive(4020) | Window.IsActive(2111) | Window.IsActive(2112) | Window.IsActive(2113)| Window.IsActive(2114) | Window.IsActive(2115)| Window.IsActive(2116) | Window.IsActive(2117)] + !Window.IsVisible(1138) + !Window.IsVisible(Home) + !$PARAM[postercondition]">Conditional</animation>
          <include condition="Skin.HasSetting(MouseMode)">Widget_Busy_Top_Mouse</include>
          <top>255</top>
          <left>-395</left>
          <include content="Defs_BusySpinner">
            <param name="label" value="$LOCALIZE[31138]..." />
          </include>
          <visible>[Container($PARAM[id]).IsUpdating + !Integer.IsGreater(Container($PARAM[id]).NumItems,0)] | [Window.IsVisible(1138) + Container($PARAM[id]).IsUpdating]</visible>
        </control>
      </control>
      <control type="$PARAM[controltype]" id="$PARAM[id]">
        <animation effect="fade" start="100" end="0" condition="Window.IsVisible(1138) + Container($PARAM[id]).IsUpdating">Conditional</animation>
        <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],Home)</onfocus>
	<onfocus>SetProperty(widgetid,$PARAM[id],home)</onfocus>
        <onback condition="ControlGroup(5600).HasFocus">9000</onback>
        <scrolltime tween="linear">400</scrolltime>
        <include condition="Window.IsVisible(Home) | Window.IsVisible(3810) | Window.IsVisible(3820)">netflix_largewidgets_top</include>
        <movement>$PARAM[movement]</movement>
        <include condition="$PARAM[submenu] + !Skin.HasSetting(SubmenuLabel)">Widgets_Items_Submenu_Height</include>
        <include condition="$PARAM[submenu] + Skin.HasSetting(SubmenuLabel)">Widgets_Items_Submenu_Big_Height</include>
        <include condition="!$PARAM[submenu] + !Skin.HasSetting(DisableNetflixLargeWidget) | Window.IsVisible(1138) | Window.IsVisible(3910) | Window.IsVisible(3920) | Window.IsVisible(2111)| Window.IsVisible(2112) | Window.IsVisible(2113) | Window.IsVisible(2114) | Window.IsVisible(2115) | Window.IsVisible(2116) | Window.IsVisible(2117) | Window.IsVisible(4010) | Window.IsVisible(4020) | Window.IsVisible(3820)">Widgets_Items_menu_Big_Height</include>
        <include condition="!$PARAM[submenu] + Skin.HasSetting(DisableNetflixSmallWidget) + !Window.IsVisible(1138) + !Window.IsVisible(3910) + !Window.IsVisible(3920) + ![Window.IsVisible(2111)| Window.IsVisible(2112) | Window.IsVisible(2113) | Window.IsVisible(2114) | Window.IsVisible(2115) | Window.IsVisible(2116) | Window.IsVisible(2117) | Window.IsVisible(4010) | Window.IsVisible(4020)]">Widgets_Items_menu_Small_Height</include>
        <onclick condition="!Skin.HasSetting(EnableShowInfo) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie)]">Action(Info)</onclick>
        <visible>$PARAM[visible] + [Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating | Container(300).OnNext | Container(300).OnPrevious | String.IsEmpty(Window(Home).Property(WidgetLoading))]</visible>
        <animation effect="slide" start="0,0" end="0,100" time="0" condition="$PARAM[submenucondition] + [Window.IsVisible(3810) | Window.IsVisible(3810)]">Conditional</animation>
        <include content="Widget_Items" condition="!$PARAM[submenu]">
          <param name="id" value="$PARAM[id]" />
          <param name="target" value="$PARAM[target]" />
          <param name="content" value="$PARAM[content]" />
          <param name="widgetContent" value="$PARAM[widgetContent]" />
          <param name="aspect" value="$PARAM[aspect]" />
          <param name="widgetAspect" value="$PARAM[widgetAspect]" />
          <param name="submenu" value="$PARAM[submenu]" />
          <param name="sortby" value="$PARAM[sortby]" />
          <param name="sortorder" value="$PARAM[sortorder]" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="postercondition" value="$PARAM[postercondition]" />
          <param name="landscapecondition" value="$PARAM[landscapecondition]" />
          <param name="landscapewidecondition" value="$PARAM[landscapewidecondition]" />
          <param name="landscapewidepostercondition" value="$PARAM[landscapewidepostercondition]" />
          <param name="landscapenetflixcondition" value="$PARAM[landscapenetflixcondition]" />
          <param name="landscapepanelcondition" value="$PARAM[landscapepanelcondition]" />
          <param name="posterdetailscondition" value="$PARAM[posterdetailscondition]" />
          <param name="widgetlivecondition" value="$PARAM[widgetlivecondition]" />
          <param name="categorycondition" value="$PARAM[categorycondition]" />
          <param name="squarecondition" value="$PARAM[squarecondition]" />
          <param name="genrecondition" value="$PARAM[genrecondition]" />
          <param name="submenucondition" value="$PARAM[submenucondition]" />
          <param name="search" value="$PARAM[search]" />
          <param name="mylist1" value="$PARAM[mylist1]" />
        </include>
      </control>
<!--
          <include content="Netflix_Fixed_Focus" condition="Skin.HasSetting(NetflixFixedBox)">
            <param name="id" value="11$PARAM[id]" />
            <param name="left" value="60" />
            <param name="bottom" value="45" />
            <param name="height" value="379" />
            <param name="width" value="260" />
            <param name="visible" value="Control.IsVisible($PARAM[id]) + $PARAM[postercondition]" />
          </include>
-->
    </definition>
  </include>
  <include name="widget_label_top">
    <top>255</top>
  </include>
  <include name="Widget_TMDB">
    <param name="submenu" default="false" />
    <param name="genres" default="false" />
    <param name="studios" default="false" />
    <param name="text" default="false" />
    <param name="height" default="440" />
    <param name="width" default="" />
    <param name="widgetAspect" default="$PARAM[widgetAspect]" />
    <param name="postercondition" default="false" />
    <param name="landscapecondition" default="false" />
    <param name="landscapewidecondition" default="false" />
    <param name="landscapewidepostercondition" default="false" />
    <param name="landscapenetflixcondition" default="false" />
    <param name="landscapepanelcondition" default="false" />
    <param name="landscapedetailscondition" default="false" />
    <param name="posterdetailscondition" default="false" />
    <param name="widgetlivecondition" default="false" />
    <param name="categorycondition" default="false" />
    <param name="squarecondition" default="false" />
    <param name="genrecondition" default="false" />
    <param name="controltype" default="fixedlist" />
    <param name="search" default="false" />
    <param name="onclick" default="SetFocus(9570)" />
    <param name="onclick2" default="RunScript(plugin.video.themoviedb.helper,add_path=$INFO[ListItem.FolderPath,,&amp;fanarttv=True],call_auto=1190,delay=0.35,prevent_del)" />
    <param name="onclick3" default="" />
    <param name="onclick3cond" default="" />
    <param name="onclick4" default="" />
    <param name="onclick4cond" default="" />
    <param name="onback" default="9570" />
    <param name="onup" default="" />
    <param name="ondown" default="" />
    <param name="onfocus" default="Skin.SetBool(TMDbHelper.ForceWidgetContainer)" />
    <param name="onunfocus" default="Skin.Reset(TMDbHelper.ForceWidgetContainer)" />
    <param name="top" default="" />
    <param name="orientation" default="horizontal" />
    <definition>
      <control type="group" id="2$PARAM[id]">
        <visible>String.IsEmpty(Window().Property(item.info.title))</visible>
        <visible>$PARAM[visible]</visible>
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
        <include content="Widget_Label_aura">
          <param name="id" value="$PARAM[id]" />
          <param name="label" value="$PARAM[label]" />
          <param name="content" value="$PARAM[content]" />
          <param name="widgetContent" value="$PARAM[widgetContent]" />
        </include>
        <control type="group">
          <left>-395</left>
          <include condition="Skin.HasSetting(MouseMode)">Widget_Busy_Top_Mouse</include>
          <include>Widget_Label_height_hub</include>
          <include content="Defs_BusySpinner">
            <param name="label" value="$LOCALIZE[31138]..." />
          </include>
          <visible>[Container($PARAM[id]).IsUpdating + !Integer.IsGreater(Container($PARAM[id]).NumItems,0)] | [Window.IsVisible(DialogVideoInfo.xml) + Container($PARAM[id]).IsUpdating]</visible>
        </control>
      </control>
      <control type="$PARAM[controltype]" id="$PARAM[id]">
        <animation effect="slide" end="0,35" time="0" condition="!Skin.HasSetting(DisableAuraHomeLayout) + Window.IsVisible(DialogVideoInfo.xml)">Conditional</animation>
        <animation effect="slide" end="0,35" time="0" condition="Skin.HasSetting(DisableAuraHomeLayout) + Window.IsVisible(DialogVideoInfo.xml)">Conditional</animation>
        <onleft>$PARAM[onleft]</onleft>
	<orientation>$PARAM[orientation]</orientation>
        <onup>$PARAM[onup]</onup>
	<top>$PARAM[top]</top>
        <ondown>$PARAM[ondown]</ondown>
        <onback>$PARAM[onback]</onback>
        <onfocus>$PARAM[onfocus]</onfocus>
        <onunfocus>$PARAM[onunfocus]</onunfocus>
        <onback>Skin.Reset(TMDbHelper.ForceWidgetContainer)</onback>
        <animation effect="fade" start="100" end="0" condition="Window.IsVisible(DialogVideoInfo.xml) + Container($PARAM[id]).IsUpdating">Conditional</animation>
        <movement>1</movement>
        <height>$PARAM[height]</height>
        <width>$PARAM[width]</width>
        <onclick>$PARAM[onclick]</onclick>
        <onclick>$PARAM[onclick2]</onclick>
        <onclick condition="$PARAM[onclick3cond]">$PARAM[onclick3]</onclick>
        <onclick condition="$PARAM[onclick4cond]">$PARAM[onclick4]</onclick>
        <visible>$PARAM[visible] + [Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating | Container(300).OnNext | Container(300).OnPrevious | String.IsEmpty(Window(Home).Property(WidgetLoading))]</visible>
        <include content="Widget_Items" condition="!$PARAM[submenu]">
          <param name="id" value="$PARAM[id]" />
          <param name="target" value="$PARAM[target]" />
          <param name="content" value="$PARAM[content]" />
          <param name="widgetContent" value="$PARAM[widgetContent]" />
          <param name="aspect" value="$PARAM[aspect]" />
          <param name="widgetAspect" value="$PARAM[widgetAspect]" />
          <param name="submenu" value="$PARAM[submenu]" />
          <param name="sortby" value="$PARAM[sortby]" />
          <param name="sortorder" value="$PARAM[sortorder]" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
          <param name="postercondition" value="$PARAM[postercondition]" />
          <param name="landscapecondition" value="$PARAM[landscapecondition]" />
          <param name="landscapewidecondition" value="$PARAM[landscapewidecondition]" />
          <param name="landscapewidepostercondition" value="$PARAM[landscapewidepostercondition]" />
          <param name="landscapenetflixcondition" value="$PARAM[landscapenetflixcondition]" />
          <param name="landscapepanelcondition" value="$PARAM[landscapepanelcondition]" />
          <param name="landscapedetailscondition" value="$PARAM[landscapedetailscondition]" />
          <param name="posterdetailscondition" value="$PARAM[posterdetailscondition]" />
          <param name="widgetlivecondition" value="$PARAM[widgetlivecondition]" />
          <param name="categorycondition" value="$PARAM[categorycondition]" />
          <param name="squarecondition" value="$PARAM[squarecondition]" />
          <param name="genrecondition" value="$PARAM[genrecondition]" />
          <param name="search" value="$PARAM[search]" />
        </include>
      </control>
    </definition>
  </include>
  <include name="Object_Info_Plot">
    <param name="maxheight" default="200" />
    <param name="height" default="auto" />
    <param name="label" default="$VAR[Label_Plot]" />
    <definition>
      <control type="textbox">
        <nested />
        <top>30</top>
        <label fallback="19055">$PARAM[label]</label>
        <height max="$PARAM[maxheight]">$PARAM[height]</height>
        <aligny>top</aligny>
        <textcolor>main_fg_70</textcolor>
        <font>font_plotbox</font>
      </control>
    </definition>
  </include>
  <include name="Object_Info_Line_Label">
    <param name="divider" default="true" />
    <param name="visible" default="true" />
    <param name="fallback" default="" />
    <definition>
      <control type="label">
        <width>auto</width>
        <label> | </label>
        <height>40</height>
        <aligny>top</aligny>
        <textcolor>$VAR[ColorHighlight]</textcolor>
        <font>font_small</font>
        <visible>!String.IsEmpty(Control.GetLabel($PARAM[id]))</visible>
        <visible>$PARAM[divider]</visible>
        <visible>$PARAM[visible]</visible>
      </control>
      <control type="label" id="$PARAM[id]">
        <width>auto</width>
        <label fallback="$PARAM[fallback]">$PARAM[label]</label>
        <height>40</height>
        <aligny>top</aligny>
        <textcolor>$PARAM[textcolor]</textcolor>
        <font>font_small</font>
        <visible>$PARAM[visible]</visible>
      </control>
    </definition>
  </include>
  <include name="object_menuhub_includes">
    <control type="group" id="25055">
      <visible>Container(5055).IsUpdating + !Window.IsVisible(DialogBusy.xml)</visible>
      <control type="group">
	<visible>!Window.IsVisible(3820)</visible>
        <height>40</height>
        <top>550</top>
        <left>-200</left>
        <include content="Defs_BusySpinner_Side">
          <param name="label" value="$LOCALIZE[31138]..." />
        </include>
      </control>
    </control>
    <control type="image">
      <include>Animation_Right</include>
      <animation effect="fade" start="100" end="0" time="400">Hidden</animation>
      <animation effect="fade" start="0" end="100" delay="50" time="600" condition="Control.HaFocus(505)">Conditional</animation>
      <texture background="true">$VAR[Image_MainMenu_fanart_aurahub]</texture>
      <fadetime>500</fadetime>
      <right>0</right>
      <width>100%</width>
      <height>100%</height>
      <aspectratio scalediffuse="false">scale</aspectratio>
      <visible>[Control.HasFocus(401) | Control.HasFocus(400) | Control.HasFocus(505)] + [[Container(5055).IsUpdating + !Integer.IsGreater(Container(5055).NumItems,0)] | String.IsEmpty(Container(5055).ListItem.Art(fanart))]</visible>
    </control>
    <control type="image">
      <animation effect="fade" start="10" end="100">Visible</animation>
      <fadetime>500</fadetime>
      <width>1420</width>
      <height>630</height>
      <left>500</left>
      <texture background="true" diffuse="Right Corner.png">$INFO[Container(5055).ListItem.Art(fanart)]</texture>
      <aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
      <visible>Control.HasFocus(5055)</visible>
    </control>
    <control type="image">
      <animation effect="fade" start="100" end="0" time="400">Hidden</animation>
      <right>0</right>
      <width>100%</width>
      <height>100%</height>
      <texture background="true" flipx="true" colordiffuse="ff000000" border="15">overlay/gradient_overlay_info.png</texture>
      <visible>[Control.HasFocus(401) | Control.HasFocus(400) | Control.HasFocus(505) | Control.HasFocus(5055)] + [[Container(5055).IsUpdating + !Integer.IsGreater(Container(5055).NumItems,0)] | String.IsEmpty(Container(5055).ListItem.Art(fanart))]</visible>
    </control>
    <control type="group">
      <animation effect="fade" delay="300" time="500" start="10" end="100">Visible</animation>
      <visible>ControlGroup(5055).HasFocus</visible>
      <left>0</left>
      <include condition="Skin.HasSetting(SkinHelper.EnableExtraFanart)">fanart_multi</include>
      <include condition="!Window.IsVisible(3920) + !Window.IsVisible(3810) + !Window.IsVisible(3820)" >Object_Home_Netflix</include>
    </control>
    <control type="image">
      <width>90</width>
      <height>120</height>
      <top>780</top>
      <left>-20</left>
      <texture background="true" colordiffuse="white">netflix/left-arrow.png</texture>
      <visible>ControlGroup(5055).HasFocus</visible>
      <visible>!Window.IsVisible(3920) + !Window.IsVisible(3810) + !Window.IsVisible(3820)</visible>
    </control>
  </include>
  <include name="Object_Info_Title">
    <param name="label" default="$INFO[ListItem.Label]" />
    <param name="font" default="font_title_large" />
    <param name="titleheight" default="80" />
    <param name="textcolor" default="main_fg_100" />
    <definition>
      <control type="label">
        <label>$PARAM[label]</label>
        <height>$PARAM[titleheight]</height>
        <aligny>top</aligny>
        <textcolor>$PARAM[textcolor]</textcolor>
        <font>font_heading</font>
      </control>
    </definition>
  </include>
  <include name="view_widget_onclick">
    <param name="id" default="" />
    <definition>
      <onclick>Skin.SetString(AddonContainer,true)</onclick>
      <onclick condition="!Skin.HasSetting(EnableShowInfo) + [[String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode) + !Skin.HasSetting(ShowInfo.Episodes)] | [String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) + !Skin.HasSetting(ShowInfo.TV)] | [String.IsEqual(Container($PARAM[id]).ListItem.DBType,movie) + !Skin.HasSetting(ShowInfo.Movies)]]">AlarmClock(loadinfo,Action(Info),00:00,silent)</onclick>
      <onclick condition="!Skin.HasSetting(EnableShowInfo) + [String.IsEqual(Container($PARAM[id]).ListItem.DBType,addon) | String.IsEmpty(Container($PARAM[id]).ListItem.DBType)]">ActivateWindow(10025,$INFO[Container($PARAM[id]).ListItem.FileNameAndPath],return)</onclick>
    </definition>
  </include>
  <include name="menu_hub">
    <param name="group" default="" />
    <definition>
      <control type="group">
        <animation type="WindowOpen">
          <effect type="slide" start="0,1000" end="0" center="auto" tween="Cubic" easing="inout" time="200" />
          <effect type="zoom" start="80" end="100" center="auto" tween="Cubic" easing="inout" time="500" />
        </animation>
        <animation type="WindowClose">
          <effect type="slide" start="0" end="0,1000" center="auto" delay="200" tween="Cubic" easing="inout" time="500" />
          <effect type="zoom" start="100" end="80" center="auto" delay="200" tween="Cubic" easing="inout" time="200" />
        </animation>
        <control type="group">
          <include>Animation_FadeIn_Slide</include>
        </control>
        <control type="group">
          <centerleft>50%</centerleft>
          <centertop>51%</centertop>
          <width>1380</width>
          <height>920</height>
          <control type="group">
            <visible>Integer.IsGreater(Container(9967).NumItems,3) + Integer.IsLess(Container(9967).NumItems,7)</visible>
            <width>1380</width>
            <height>660</height>
            <control type="image">
              <include condition="!Skin.HasSetting(DisableShadows)">Defs_Shadow_24</include>
              <texture border="16" colordiffuse="FF2B2B2B">common/rounded-dialog.png</texture>
            </control>
          </control>
          <control type="group">
            <visible>Integer.IsLess(Container(9967).NumItems,4)</visible>
            <width>1380</width>
            <height>370</height>
            <control type="image">
              <include condition="!Skin.HasSetting(DisableShadows)">Defs_Shadow_24</include>
              <texture border="16" colordiffuse="FF2B2B2B">common/rounded-dialog.png</texture>
            </control>
          </control>
          <control type="group">
            <visible>Integer.IsGreater(Container(9967).NumItems,6)</visible>
            <width>1380</width>
            <height>920</height>
            <control type="image">
              <include condition="!Skin.HasSetting(DisableShadows)">Defs_Shadow_24</include>
              <texture border="16" colordiffuse="FF2B2B2B">common/rounded-dialog.png</texture>
            </control>
          </control>
          <control type="group">
            <top>0</top>
            <left>5</left>
            <control type="panel" id="9967">
              <top>60</top>
              <width>1380</width>
              <height>860</height>
              <onleft condition="Window.IsVisible(Home)">300</onleft>
              <onright condition="Window.IsVisible(Home)">9967</onright>
              <onup condition="Window.IsVisible(Home)">300</onup>
              <ondown condition="Window.IsVisible(Home)">431</ondown>
              <onback condition="Window.IsVisible(Home)">300</onback>
              <orientation>vertical</orientation>
              <itemlayout width="455" height="283.33">
                <control type="group">
                  <include content="Defs_PosterBack">
                    <param name="gradientcolordiffuse" value="darkgrey" />
                  </include>
                  <control type="image">
                    <left>10</left>
                    <right>0</right>
                    <bottom>10</bottom>
                    <top>10</top>
                    <aspectratio>scale</aspectratio>
                    <texture border="10" diffuse="diffuse/submenu.png" colordiffuse="PosterFront_70" background="true">$INFO[ListItem.Property(background)]</texture>
                    <visible>!String.IsEmpty(ListItem.Property(background))</visible>
                  </control>
                  <control type="image">
                    <left>10</left>
                    <right>0</right>
                    <bottom>10</bottom>
                    <top>10</top>
                    <aspectratio aligny="center">scale</aspectratio>
                    <texture colordiffuse="69000000" background="true">diffuse/submenu.png</texture>
                    <visible>!String.IsEmpty(ListItem.Property(background))</visible>
                  </control>
                  <control type="image">
                    <top>10</top>
                    <bottom>100</bottom>
                    <width>250</width>
                    <centerleft>50%</centerleft>
                    <aspectratio aligny="center">keep</aspectratio>
                    <texture colordiffuse="PosterFront_70" background="true">$INFO[ListItem.Icon]</texture>
                  </control>
                  <control type="group">
                    <height>120</height>
                    <bottom>10</bottom>
                    <left>10</left>
                    <right>10</right>
                    <control type="textbox">
                      <width>300</width>
                      <bottom>-10</bottom>
                      <left>60</left>
                      <height>100</height>
                      <font>font_small_bold</font>
                      <align>center</align>
                      <autoscroll>false</autoscroll>
                      <textcolor>PosterFront_70</textcolor>
                      <label>$INFO[ListItem.Label]</label>
                      <wrapmultiline>true</wrapmultiline>
                    </control>
                  </control>
                </control>
              </itemlayout>
              <focusedlayout width="455" height="283.33">
                <control type="group">
                  <include>Animation_FocusBounce_Small</include>
                  <control type="group">
                    <include content="Defs_PosterBack">
                      <param name="gradientcolordiffuse" value="darkgrey" />
                    </include>
                    <control type="image">
                      <left>10</left>
                      <right>0</right>
                      <bottom>10</bottom>
                      <top>10</top>
                      <aspectratio>scale</aspectratio>
                      <texture border="10" diffuse="diffuse/submenu.png" colordiffuse="PosterFront_70" background="true">$INFO[ListItem.Property(background)]</texture>
                    </control>
                    <control type="image">
                      <left>10</left>
                      <right>0</right>
                      <bottom>10</bottom>
                      <top>10</top>
                      <aspectratio aligny="center">scale</aspectratio>
                      <texture colordiffuse="69000000" background="true">diffuse/submenu.png</texture>
                      <visible>!String.IsEmpty(ListItem.Property(background))</visible>
                    </control>
                    <control type="image">
                      <top>10</top>
                      <bottom>100</bottom>
                      <width>250</width>
                      <centerleft>50%</centerleft>
                      <aspectratio aligny="center">keep</aspectratio>
                      <texture colordiffuse="PosterFront" background="true">$INFO[ListItem.Icon]</texture>
                    </control>
                    <control type="group">
                      <height>120</height>
                      <bottom>10</bottom>
                      <left>10</left>
                      <right>10</right>
                      <control type="textbox">
                        <width>300</width>
                        <bottom>-10</bottom>
                        <left>60</left>
                        <height>100</height>
                        <font>font_small_bold</font>
                        <align>center</align>
                        <autoscroll>false</autoscroll>
                        <textcolor>PosterFront_70</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <wrapmultiline>true</wrapmultiline>
                      </control>
                    </control>
                  </control>
                  <!-- Highlight -->
                  <control type="group">
                    <include>View_Selectbox</include>
                  </control>
                </control>
              </focusedlayout>
              <content>
                <include>skinshortcuts-group-$PARAM[group]</include>
              </content>
            </control>
          </control>
        </control>
      </control>
    </definition>
  </include>

  <include name="menuhub_aura">
    <param name="skinshortcut" default="" />
    <definition>

    <include>Global_Background</include>
   <control type="group">
    <animation effect="slide" end="0,-40" time="0" condition="Skin.HasSetting(AuraHubSpacingSmall)">Conditional</animation>
   <control type="group">
    <right>-50</right>
    <include>Logo</include>
      <visible>!Window.IsVisible(DialogNotification.xml) + !Window.IsVisible(DialogButtonMenu.xml) + !Window.IsVisible(DialogBusy.xml) + Skin.HasSetting(EnableHomeHeader)</visible>
   </control>
   <control type="label">
   <animation effect="slide" end="260,0" time="500" condition="Control.HasFocus(400)">Conditional</animation>
   <top>65</top>
   <left>65</left>
   <width>400</width>
   <height>40</height>
   <font>font_heading_small</font>
   <textcolor>white</textcolor>
   <label>[B]$LOCALIZE[31790][/B]</label> <!-- AuraHub -->
   </control> 
   </control> 

      <control type="grouplist" id="505">
        <include>Animation_Right</include>
   	<animation effect="slide" end="270,0" time="500" condition="Control.HasFocus(400)">Conditional</animation>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall)">AuraHub_Small_top</include>
        <include condition="!Skin.HasSetting(AuraHubSpacingSmall)">AuraHub_top</include>
        <include condition="Skin.HasSetting(AuraHubSpacingSmall)">AuraHub_Small_height</include>
        <include condition="!Skin.HasSetting(AuraHubSpacingSmall)">AuraHub_height</include>
        <width>1920</width>
        <left>50</left>
	<movement>1</movement>
        <scrolltime tween="sine">700</scrolltime>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
	<onup>505</onup>
	<ondown>505</ondown>
        <include>skinshortcuts-template-$PARAM[skinshortcut]</include>
    </control>
    </definition>
  </include>

  <include name="menuhub_window">
    <param name="skinshortcut" default="" />
    <definition>
      <include>Animation_Right</include>
      <include>object_menuhub_includes</include>
      <control type="label">
        <left>110</left>
        <top>40</top>
        <label>$LOCALIZE[31721]</label> <!-- Categories -->
        <height>40</height>
        <width>350</width>
        <align>left</align>
        <aligny>top</aligny>
        <textcolor>white</textcolor>
        <font>font_heading_small</font>
        <visible>Control.HasFocus(505)</visible>
      </control>
      <control type="list" id="505">
        <include>Animation_Right</include>
        <animation effect="slide" end="-500,0" time="500" delay="100" condition="ControlGroup(5055).HasFocus">Conditional</animation>
        <onright>5055</onright>
        <height>900</height>
        <top>140</top>
        <left>80</left>
        <viewtype label="$LOCALIZE[31469]">icon</viewtype>
        <scrolltime tween="sine" easing="out">500</scrolltime>
        <itemgap>10</itemgap>
        <itemlayout width="400" height="75">
          <control type="group">
            <control type="label">
              <left>30</left>
              <label>$INFO[ListItem.Label]</label>
              <align>left</align>
              <font>font_small</font>
              <textcolor>dimgrey</textcolor>
            </control>
          </control>
        </itemlayout>
        <focusedlayout width="400" height="85">
          <control type="group">
            <control type="group">
              <height>70</height>
              <width>400</width>
              <left>10</left>
            </control>
            <control type="label">
              <left>30</left>
              <label>$INFO[ListItem.Label]</label>
              <align>left</align>
              <font>font_large_bold</font>
              <textcolor>white</textcolor>
            </control>
          </control>
        </focusedlayout>
        <content>
          <include>skinshortcuts-group-$PARAM[skinshortcut]</include>
        </content>
      </control>
      <control type="grouplist" id="5055">
        <include>Animation_Right</include>
        <animation effect="slide" end="-480,0" time="500" delay="100" condition="ControlGroup(5055).HasFocus">Conditional</animation>
        <left>480</left>
        <posy>620</posy>
        <width>100%</width>
        <onleft>505</onleft>
        <onback>505</onback>
        <orientation>vertical</orientation>
        <include>skinshortcuts-template-$PARAM[skinshortcut]</include>
      </control>
    </definition>
  </include>
  <include name="spotlight_buttons">
    <param name="id" default="" />
    <param name="visible" default="" />
    <definition>
      <control type="group">
        <visible>Control.IsVisible($PARAM[id]) + $PARAM[visible]</visible>
        <top>-150</top>
        <left>310</left>
        <control type="image">
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89FFFFFF" background="true">common/underline2.png</texture>
          <visible>Integer.IsEqual(Container($PARAM[id]).CurrentItem,1)</visible>
        </control>
        <control type="image">
          <left>250</left>
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89FFFFFF" background="true">common/underline2.png</texture>
          <visible>Integer.IsEqual(Container($PARAM[id]).CurrentItem,2)</visible>
        </control>
        <control type="image">
          <left>500</left>
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89FFFFFF" background="true">common/underline2.png</texture>
          <visible>Integer.IsEqual(Container($PARAM[id]).CurrentItem,3)</visible>
        </control>
        <control type="image">
          <left>750</left>
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89FFFFFF" background="true">common/underline2.png</texture>
          <visible>Integer.IsEqual(Container($PARAM[id]).CurrentItem,4)</visible>
        </control>
        <control type="image">
          <left>1000</left>
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89FFFFFF" background="true">common/underline2.png</texture>
          <visible>Integer.IsEqual(Container($PARAM[id]).CurrentItem,5)</visible>
        </control>
      </control>
      <control type="group">
        <visible>Control.IsVisible($PARAM[id]) + $PARAM[visible]</visible>
        <left>310</left>
        <top>-150</top>
        <control type="image">
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89696969" background="true">common/underline2.png</texture>
          <visible>!Integer.IsEqual(Container($PARAM[id]).CurrentItem,1)</visible>
        </control>
        <control type="image">
          <left>250</left>
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89696969" background="true">common/underline2.png</texture>
          <visible>!Integer.IsEqual(Container($PARAM[id]).CurrentItem,2)</visible>
        </control>
        <control type="image">
          <left>500</left>
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89696969" background="true">common/underline2.png</texture>
          <visible>!Integer.IsEqual(Container($PARAM[id]).CurrentItem,3)</visible>
        </control>
        <control type="image">
          <left>750</left>
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89696969" background="true">common/underline2.png</texture>
          <visible>!Integer.IsEqual(Container($PARAM[id]).CurrentItem,4)</visible>
        </control>
        <control type="image">
          <left>1000</left>
          <width>240</width>
          <height>120</height>
          <aspectratio aligny="center">stretch</aspectratio>
          <texture colordiffuse="89696969" background="true">common/underline2.png</texture>
          <visible>!Integer.IsEqual(Container($PARAM[id]).CurrentItem,5)</visible>
        </control>
      </control>
    </definition>
  </include>
  <include name="Widget_Settings_New">
    <!-- @PCXL Skin -->
    <control type="group">
      <top>50</top>
      <left>50</left>
      <animation effect="slide" end="40,0" time="200" condition="!Skin.HasSetting(DisableMenuVertIcon) + [Control.HasFocus(300) | !Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="40,0" time="500" delay="0" condition="Skin.HasSetting(DisableMenuVertLabelOnly) + [!Control.HasFocus(300) | !Control.HasFocus(400) | !Control.HasFocus(401)]" reversible="true">Conditional</animation>
      <!-- Row 1 -->
      <control type="label">
        <top>50</top>
        <left>20</left>
        <width>450</width>
        <height>20</height>
        <label>$LOCALIZE[31722]</label> <!-- Device -->
        <align>left</align>
        <font>font_tiny_bold</font>
        <textcolor>white</textcolor>
      </control>
      <control type="list" id="9000">
        <onleft condition="Window.IsVisible(Home)">300</onleft>
        <onback condition="Window.IsVisible(Home)">300</onback>
        <onup>300</onup>
        <top>60</top>
        <width>1880</width>
        <height>100%</height>
	<ondown>Control.SetFocus(9001,$INFO[Container(9000).Position])</ondown>
        <orientation>horizontal</orientation>
        <scrolltime>0</scrolltime>
        <viewtype>list</viewtype>
        <defaultcontrol>2</defaultcontrol>
        <itemlayout height="260" width="260">
          <control type="group">
            <top>20</top>
            <left>20</left>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <texture diffuse="diffuse/landscape.png" colordiffuse="ff212121" border="9">common/Card_bg_white.png</texture>
            </control>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <aspectratio>scale</aspectratio>
              <centertop>40%</centertop>
              <texture colordiffuse="white">$INFO[ListItem.Icon]</texture>
            </control>
            <control type="label">
              <bottom>20</bottom>
              <width>250</width>
              <height>20</height>
              <label>$INFO[ListItem.Label]</label>
              <align>center</align>
              <font>font_tiny</font>
              <textcolor>white</textcolor>
              <scroll>true</scroll>
            </control>
          </control>
        </itemlayout>
        <focusedlayout height="260" width="260">
          <control type="group">
            <top>20</top>
            <left>20</left>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <texture colordiffuse="ff212121" border="9">common/Card_bg_white.png</texture>
            </control>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <texture colordiffuse="$VAR[ColorHighlight]" border="9">common/Card_bg_white.png</texture>
              <visible>Control.HasFocus(9000)</visible>
            </control>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <aspectratio>scale</aspectratio>
              <centertop>40%</centertop>
              <texture colordiffuse="white">$INFO[ListItem.Icon]</texture>
            </control>
            <control type="label">
              <bottom>20</bottom>
              <width>250</width>
              <height>20</height>
              <label>$INFO[ListItem.Label]</label>
              <align>center</align>
              <font>font_tiny</font>
              <textcolor>white</textcolor>
              <scroll>true</scroll>
            </control>
          </control>
        </focusedlayout>
        <content>
          <item>
            <label>$LOCALIZE[31723]</label> <!-- Interface -->
            <onclick>ActivateWindow(InterfaceSettings)</onclick>
            <thumb>special://skin/extras/icons/skinsettings.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31724]</label> <!-- Services -->
            <onclick>activatewindow(servicesettings)</onclick>
            <icon>special://skin/extras/icons/network.png</icon>
          </item>
          <item>
            <label>$LOCALIZE[31725]</label> <!-- Player -->
            <onclick>ActivateWindow(playersettings)</onclick>
            <thumb>settings/tv.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31726]</label> <!-- Media Settings -->
            <onclick>ActivateWindow(MediaSettings)</onclick>
            <thumb>settings/library.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31727]</label> <!-- PVR &amp; Live TV -->
            <onclick>ActivateWindow(PVRSettings)</onclick>
            <icon>settings/PVR.png</icon>
          </item>
          <item>
            <label>$LOCALIZE[31728]</label> <!-- Accounts -->
            <onclick>ActivateWindow(profiles)</onclick>
            <thumb>settings/popcont.png</thumb>
          </item>
        </content>
      </control>
      <!-- Row 2 -->
      <control type="label">
        <top>370</top>
        <left>20</left>
        <width>300</width>
        <height>20</height>
        <label>$LOCALIZE[31729]</label> <!-- Preferences -->
        <align>left</align>
        <font>font_tiny_bold</font>
        <textcolor>white</textcolor>
      </control>
      <control type="list" id="9001">
        <onleft condition="Window.IsVisible(Home)">300</onleft>
        <onback condition="Window.IsVisible(Home)">300</onback>
        <top>380</top>
        <width>100%</width>
        <height>100%</height>
 	<onup>Control.SetFocus(9000,$INFO[Container(9001).Position])</onup>
        <ondown>Control.SetFocus(9002,$INFO[Container(9001).Position])</ondown>
        <orientation>horizontal</orientation>
        <scrolltime>0</scrolltime>
        <viewtype>list</viewtype>
        <defaultcontrol>2</defaultcontrol>
        <itemlayout height="260" width="260">
          <control type="group">
            <top>20</top>
            <left>20</left>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <texture colordiffuse="ff212121" border="9">common/Card_bg_white.png</texture>
            </control>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <aspectratio>scale</aspectratio>
              <centertop>40%</centertop>
              <texture colordiffuse="white">$INFO[ListItem.Icon]</texture>
            </control>
            <control type="label">
              <bottom>20</bottom>
              <width>250</width>
              <height>20</height>
              <label>$INFO[ListItem.Label]</label>
              <align>center</align>
              <font>font_tiny</font>
              <textcolor>white</textcolor>
              <scroll>true</scroll>
            </control>
          </control>
        </itemlayout>
        <focusedlayout height="260" width="260">
          <control type="group">
            <top>20</top>
            <left>20</left>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <texture colordiffuse="ff212121" border="9">common/Card_bg_white.png</texture>
            </control>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <texture colordiffuse="$VAR[ColorHighlight]" border="9">common/Card_bg_white.png</texture>
              <visible>Control.HasFocus(9001)</visible>
            </control>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <aspectratio>scale</aspectratio>
              <centertop>40%</centertop>
              <texture colordiffuse="white">$INFO[ListItem.Icon]</texture>
            </control>
            <control type="label">
              <bottom>20</bottom>
              <width>250</width>
              <height>20</height>
              <label>$INFO[ListItem.Label]</label>
              <align>center</align>
              <font>font_tiny</font>
              <textcolor>white</textcolor>
              <scroll>true</scroll>
            </control>
          </control>
        </focusedlayout>
        <content>
          <item>
            <label>$LOCALIZE[31730]</label> <!-- Menu &amp; Widgets -->
            <onclick condition="System.HasAddon(script.skinshortcuts)">RunScript(script.skinshortcuts,type=manage&amp;group=mainmenu)</onclick>
            <onclick condition="!System.HasAddon(script.skinshortcuts)">InstallAddon(script.skinshortcuts)</onclick>
            <visible>!Skin.HasSetting(KioskMode)</visible>
            <thumb>settings/widgets.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31731]</label> <!-- TV Hubs -->
            <onclick>ActivateWindow(1127)</onclick>
            <thumb>special://skin/extras/icons/tv.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31732]</label> <!-- Movie Hubs -->
            <onclick>ActivateWindow(1126)</onclick>
            <thumb>special://skin/extras/icons/movie.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31733]</label> <!-- Home Spotlights -->
            <onclick>ActivateWindow(1128)</onclick>
            <thumb>settings/home.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31734]</label> <!-- Home Style -->
            <onclick>ActivateWindow(1120)</onclick>
            <thumb>special://skin/extras/icons/videos.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31735]</label> <!-- Menu Style -->
            <onclick>ActivateWindow(1125)</onclick>
            <thumb>special://skin/extras/icons/viewmode.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31504]</label> <!-- My Lists -->
            <onclick>ActivateWindow(1164)</onclick>
            <thumb>special://skin/extras/icons/clipboard.png</thumb>
          </item>
        </content>
      </control>
      <!-- Row 3 -->
      <control type="label">
        <top>690</top>
        <left>20</left>
        <width>300</width>
        <height>20</height>
        <label>$LOCALIZE[31736]</label> <!-- Settings -->
        <align>left</align>
        <font>font_tiny_bold</font>
        <textcolor>white</textcolor>
      </control>
      <control type="list" id="9002">
        <onleft condition="Window.IsVisible(Home)">300</onleft>
        <onback condition="Window.IsVisible(Home)">300</onback>
        <top>700</top>
        <width>100%</width>
        <height>100%</height>
        <onup>Control.SetFocus(9001,$INFO[Container(9002).Position])</onup>
        <orientation>horizontal</orientation>
        <scrolltime>0</scrolltime>
        <viewtype>list</viewtype>
        <defaultcontrol>2</defaultcontrol>
        <itemlayout height="260" width="260">
          <control type="group">
            <top>20</top>
            <left>20</left>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <texture colordiffuse="ff212121" border="9">common/Card_bg_white.png</texture>
            </control>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <aspectratio>scale</aspectratio>
              <centertop>40%</centertop>
              <texture colordiffuse="white">$INFO[ListItem.Icon]</texture>
            </control>
            <control type="label">
              <bottom>20</bottom>
              <width>250</width>
              <height>20</height>
              <label>$INFO[ListItem.Label]</label>
              <align>center</align>
              <font>font_tiny</font>
              <textcolor>white</textcolor>
              <scroll>true</scroll>
            </control>
          </control>
        </itemlayout>
        <focusedlayout height="260" width="260">
          <control type="group">
            <top>20</top>
            <left>20</left>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <texture colordiffuse="ff212121" border="9">common/Card_bg_white.png</texture>
            </control>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <texture colordiffuse="$VAR[ColorHighlight]" border="9">common/Card_bg_white.png</texture>
              <visible>Control.HasFocus(9002)</visible>
            </control>
            <control type="image">
              <width>250</width>
              <height>250</height>
              <aspectratio>scale</aspectratio>
              <centertop>40%</centertop>
              <texture colordiffuse="white">$INFO[ListItem.Icon]</texture>
            </control>
            <control type="label">
              <bottom>20</bottom>
              <width>250</width>
              <height>20</height>
              <label>$INFO[ListItem.Label]</label>
              <align>center</align>
              <font>font_tiny</font>
              <textcolor>white</textcolor>
              <scroll>true</scroll>
            </control>
          </control>
        </focusedlayout>
        <content>
          <item>
            <label>$LOCALIZE[31737]</label> <!-- Skin Settings -->
            <onclick>ActivateWindow(skinsettings)</onclick>
            <thumb>special://skin/extras/icons/paintbrush.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31738]</label> <!-- Search Lists -->
            <onclick>ActivateWindow(1163)</onclick>
            <thumb>special://skin/extras/icons/search.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31787]</label> <!-- Addons -->
            <onclick>ActivateWindow(addonbrowser)</onclick>
            <thumb>settings/apps.png</thumb>
          </item>
          <item>
            <label>$LOCALIZE[31739]</label> <!-- File Manager -->
            <onclick>ActivateWindow(filemanager)</onclick>
            <icon>settings/filemanager.png</icon>
          </item>
          <item>
            <label>$LOCALIZE[31740]</label> <!-- System -->
            <onclick>ActivateWindow(SystemSettings)</onclick>
            <icon>settings/settings.png</icon>
          </item>
          <item>
            <label>$LOCALIZE[31741]</label> <!-- Info -->
            <onclick>ActivateWindow(systeminfo)</onclick>
            <icon>settings/sysinfo.png</icon>
          </item>
          <item>
            <label>$LOCALIZE[31742]</label> <!-- Dependencies -->
            <onclick>ActivateWindow(10040,addons://dependencies/)</onclick>
            <icon>special://skin/extras/icons/bigbox.png</icon>
          </item>
        </content>
      </control>
    </control>
  </include>
  <include name="fadelabel_spotlight_list_tv">
     <control type="fadelabel" id="34449">
        <description>Randomizer for plugin-free multiple fanart</description>
        <top>-1000</top> <!-- Don't need to see it, but can't change its visibility. Put it off screen -->
        <width>1</width>
        <height>1</height>
        <label>$INFO[Skin.String(spotlighttv1.path)]</label>
        <label>$INFO[Skin.String(spotlighttv2.path)]</label>
        <label>$INFO[Skin.String(spotlighttv3.path)]</label>
        <label>$INFO[Skin.String(spotlighttv4.path)]</label>
        <!-- ... repeat for each numbered fanart -->
        <!-- tvshow.fanart are filled with the series fanart when navigating season and episode lists -->
        <randomize>false</randomize>
        <pauseatend>160000</pauseatend> <!-- Time to show each image, in milliseconds -->
        <!-- No scrolling so only the pauseatend above (plus a short fade-in) affects length of time each
                image is shown -->
        <scroll>false</scroll>
        <scrollout>false</scrollout>
        <!-- Resets the timer when navigating to a new item, so each item's first visible fanart will
                show for the full amount of time -->
        <resetonlabelchange>true</resetonlabelchange>
   </control>
  </include>
  <include name="fadelabel_spotlight_list_movies">
     <control type="fadelabel" id="34450">
        <description>Randomizer for plugin-free multiple fanart</description>
        <top>-1000</top> <!-- Don't need to see it, but can't change its visibility. Put it off screen -->
        <width>1</width>
        <height>1</height>
        <label>$INFO[Skin.String(spotlightmovies1.path)]</label>
        <label>$INFO[Skin.String(spotlightmovies2.path)]</label>
        <label>$INFO[Skin.String(spotlightmovies3.path)]</label>
        <label>$INFO[Skin.String(spotlightmovies4.path)]</label>
        <!-- ... repeat for each numbered fanart -->
        <!-- tvshow.fanart are filled with the series fanart when navigating season and episode lists -->
        <randomize>false</randomize>
        <pauseatend>160000</pauseatend> <!-- Time to show each image, in milliseconds -->
        <!-- No scrolling so only the pauseatend above (plus a short fade-in) affects length of time each
                image is shown -->
        <scroll>false</scroll>
        <scrollout>false</scrollout>
        <!-- Resets the timer when navigating to a new item, so each item's first visible fanart will
                show for the full amount of time -->
        <resetonlabelchange>true</resetonlabelchange>
   </control>
  </include>

  <include name="similar_movies_list">
      <control type="list" id="12341">
	<content sortby="random">$INFO[Skin.String(similarmovies.path)]</content>
	<autoscroll time="120000">true</autoscroll> <!-- Time to show each image, in milliseconds -->
	<itemlayout />
	<focusedlayout />
  </control>
  </include>
  <include name="similar_tv_list">
      <control type="list" id="12342">
        <content sortby="random" limit="15">$INFO[Skin.String(similartv.path)]</content>
        <autoscroll time="120000">true</autoscroll> <!-- Time to show each image, in milliseconds -->
        <itemlayout />
        <focusedlayout />
  </control>
  </include>
  
  <include name="episode_list">
    <param name="id" default="" />
    <param name="visible" default="" />
    <param name="content" default="" />
    <param name="onclick" default="" />
    <param name="onclick2" default="" />
    <definition>
      <control type="group" id="2$PARAM[id]">
        <visible>$PARAM[visible]</visible>
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
        <control type="group">
          <include condition="Skin.HasSetting(MouseMode)">Widget_Busy_Top_Mouse</include>
          <include>Widget_Label_height_hub</include>
          <left>-395</left>
          <include condition="Skin.HasSetting(DisableAuraHomeLayout)">widget_label_top</include>
          <include content="Defs_BusySpinner">
            <param name="label" value="$LOCALIZE[31138]..." />
          </include>
          <visible>[Container($PARAM[id]).IsUpdating + !Integer.IsGreater(Container($PARAM[id]).NumItems,0)] | [Window.IsVisible(DialogVideoInfo.xml) + Container($PARAM[id]).IsUpdating]</visible>
        </control>
      </control>
        <control type="list" id="$PARAM[id]">
	  <animation effect="fade" start="100" end="0" time="0" condition="Container($PARAM[id]).IsUpdating">Conditional</animation>
          <width>1500</width>
          <height>900</height>
          <visible>$PARAM[visible]</visible>
          <onleft>8999</onleft>
	  <onclick>$PARAM[onclick]</onclick>
	  <onclick>$PARAM[onclick2]</onclick>
	  <onup>$PARAM[id]</onup>
	  <ondown>$PARAM[id]</ondown>
          <scrolltime>500</scrolltime>
     <itemlayout width="1820" height="310">
        <control type="group">
          <left>60</left>
          <control type="group">
            <height>300</height>
            <width>518</width>
            <include>View_Landscape_Artwork</include>
          </control>
          <control type="label">
            <top>180</top>
            <left>30</left>
            <font>font_medium_bold</font>
            <shadowcolor>black</shadowcolor>
            <textcolor>white</textcolor>
            <label>S$INFO[ListItem.Season]:E$INFO[ListItem.Episode]</label>
            <visible>!Container.Content(Seasons) + !String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Season) + !String.IsEmpty(ListItem.Episode)</visible>
          </control>
          <control type="progress">
            <visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
            <left>9</left>
            <top>286</top>
            <description>progress bar</description>
            <width>501</width>
            <height>4</height>
            <align>center</align>
            <texturebg colordiffuse="white" border="2">diffuse/progress-bg.png</texturebg>
            <lefttexture></lefttexture>
            <midtexture colordiffuse="red" border="2">diffuse/progress-bg.png</midtexture>
            <righttexture></righttexture>
            <reveal>true</reveal>
            <info>ListItem.PercentPlayed</info>
            <visible>String.IsEqual(ListItem.DBType,episode)</visible>
          </control>
          <control type="progress">
            <visible>Integer.IsGreater(ListItem.PlayCount,0)</visible>
            <left>9</left>
            <top>286</top>
            <description>progress bar</description>
            <width>501</width>
            <height>4</height>
            <align>center</align>
            <texturebg colordiffuse="red" border="2">diffuse/progress-bg.png</texturebg>
            <lefttexture></lefttexture>
            <midtexture colordiffuse="red" border="2">diffuse/progress-bg.png</midtexture>
            <righttexture></righttexture>
            <reveal>true</reveal>
            <info>ListItem.PercentPlayed</info>
            <visible>String.IsEqual(ListItem.DBType,episode)</visible>
          </control>
          <control type="group">
            <height>300</height>
            <left>538</left>
            <visible>!ListItem.IsParentFolder</visible>
            <control type="label">
              <left>0</left>
              <label>$INFO[ListItem.Label]</label>
              <height>80</height>
              <aligny>top</aligny>
              <textcolor>main_fg_100</textcolor>
              <shadowcolor>black</shadowcolor>
              <font>font_medium_bold</font>
            </control>
            <control type="group">
              <top>60</top>
              <control type="image">
                <left>0</left>
                <top>10</top>
                <width>37</width>
                <height>24</height>
                <texture colordiffuse="main_fg_100">$VAR[Image_HDSD]</texture>
                <visible>Container.Content(movies) | Container.Content(episodes)</visible>
              </control>
              <control type="label">
                <left>37</left>
                <label>|</label>
                <width>40</width>
                <align>center</align>
                <height>40</height>
                <aligny>top</aligny>
                <textcolor>$VAR[ColorHighlight]</textcolor>
                <font>font_small</font>
                <visible>Container.Content(movies) | Container.Content(episodes)</visible>
              </control>
              <control type="label">
                <animation effect="slide" condition="![Container.Content(movies) | Container.Content(episodes)]" end="-73">Conditional</animation>
                <left>73</left>
                <width>auto</width>
                <label>$VAR[Label_ShowCase_InfoLine]$INFO[ListItem.Rating, | [COLOR=main_fg_100],[/COLOR]]</label>
                <height>40</height>
                <aligny>top</aligny>
                <textcolor>$VAR[ColorHighlight]</textcolor>
                <font>font_small</font>
              </control>
            </control>
            <control type="textbox">
              <top>120</top>
              <label fallback="19055">$VAR[Label_Plot]</label>
              <bottom>10</bottom>
              <aligny>top</aligny>
              <textcolor>main_fg_70</textcolor>
              <shadowcolor>black</shadowcolor>
              <font>font_plotbox</font>
              <autoscroll>false</autoscroll>
            </control>
          </control>
        </control>
      </itemlayout>
      <focusedlayout width="1820" height="310">
        <control type="group">
          <left>60</left>
          <control type="group">
            <include>Animation_FocusBounce_Small</include>
            <height>300</height>
            <width>518</width>
            <include>View_Landscape_Artwork</include>
            <!-- Highlight -->
            <control type="group">
              <visible>Control.HasFocus($PARAM[id])</visible>
              <include>View_Selectbox</include>
            </control>
          </control>
          <control type="label">
            <top>180</top>
            <left>30</left>
            <font>font_medium_bold</font>
            <shadowcolor>black</shadowcolor>
            <textcolor>white</textcolor>
            <label>S$INFO[ListItem.Season]:E$INFO[ListItem.Episode]</label>
            <visible>!Container.Content(Seasons) + !String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Season) + !String.IsEmpty(ListItem.Episode)</visible>
          </control>
          <control type="progress">
            <include>Animation_FocusBounce_Small</include>
            <visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
            <left>9</left>
            <top>286</top>
            <description>progress bar</description>
            <width>501</width>
            <height>4</height>
            <align>center</align>
            <texturebg colordiffuse="white" border="2">diffuse/progress-bg.png</texturebg>
            <lefttexture></lefttexture>
            <midtexture colordiffuse="red" border="2">diffuse/progress-bg.png</midtexture>
            <righttexture></righttexture>
            <reveal>true</reveal>
            <info>ListItem.PercentPlayed</info>
            <visible>String.IsEqual(ListItem.DBType,episode)</visible>
          </control>
          <control type="progress">
            <include>Animation_FocusBounce_Small</include>
            <visible>Integer.IsGreater(ListItem.PlayCount,0)</visible>
            <left>9</left>
            <top>286</top>
            <description>progress bar</description>
            <width>501</width>
            <height>4</height>
            <align>center</align>
            <texturebg colordiffuse="red" border="2">diffuse/progress-bg.png</texturebg>
            <lefttexture></lefttexture>
            <midtexture colordiffuse="red" border="2">diffuse/progress-bg.png</midtexture>
            <righttexture></righttexture>
            <reveal>true</reveal>
            <info>ListItem.PercentPlayed</info>
            <visible>String.IsEqual(ListItem.DBType,episode)</visible>
          </control>
          <control type="group">
            <height>300</height>
            <left>538</left>
            <visible>!ListItem.IsParentFolder</visible>
            <control type="label">
              <left>0</left>
              <label>$INFO[ListItem.Label]</label>
              <height>80</height>
              <aligny>top</aligny>
              <shadowcolor>black</shadowcolor>
              <textcolor>main_fg_100</textcolor>
              <font>font_medium_bold</font>
            </control>
            <control type="group">
              <top>60</top>
              <control type="image">
                <left>0</left>
                <top>10</top>
                <width>37</width>
                <height>24</height>
                <texture colordiffuse="main_fg_100">$VAR[Image_HDSD]</texture>
                <visible>Container.Content(movies) | Container.Content(episodes)</visible>
              </control>
              <control type="label">
                <left>37</left>
                <label>|</label>
                <width>40</width>
                <align>center</align>
                <height>40</height>
                <aligny>top</aligny>
                <textcolor>$VAR[ColorHighlight]</textcolor>
                <font>font_small</font>
                <visible>Container.Content(movies) | Container.Content(episodes)</visible>
              </control>
              <control type="label">
                <animation effect="slide" condition="![Container.Content(movies) | Container.Content(episodes)]" end="-73">Conditional</animation>
                <left>73</left>
                <width>100%</width>
                <label>$VAR[Label_ShowCase_InfoLine]$INFO[ListItem.Rating, | [COLOR=main_fg_100],[/COLOR]]</label>
                <height>40</height>
                <aligny>top</aligny>
                <textcolor>$VAR[ColorHighlight]</textcolor>
                <font>font_small</font>
              </control>
            </control>
            <control type="textbox">
              <top>120</top>
              <label fallback="19055">$VAR[Label_Plot]</label>
              <bottom>10</bottom>
              <aligny>top</aligny>
              <shadowcolor>black</shadowcolor>
              <textcolor>main_fg_70</textcolor>
              <font>font_plotbox</font>
            </control>
          </control>
        </control>
      </focusedlayout>
      <content target="videos" sortby="episode" sortorder="ascending">$PARAM[content]</content>
     </control>
   </definition>
  </include>

    <include name="Object_IconicButton_Left">
        <control type="group">
            <visible>$PARAM[visible]</visible>
            <control type="image">
                <texture colordiffuse="$PARAM[colordiffuse-texture]" border="24">$PARAM[texture]</texture>
            </control>
            <control type="image">
                <left>16</left>
                <centertop>50%</centertop>
                <width>64</width>
                <height>64</height>
                <texture colordiffuse="$PARAM[colordiffuse-icon]">$PARAM[icon]</texture>
            </control>
        </control>
    </include>

    <include name="Object_IconicButton_Right">
        <control type="group">
            <visible>$PARAM[visible]</visible>
            <control type="image">
                <texture colordiffuse="$PARAM[colordiffuse-texture]" border="0,24,24,24" flipx="true">$PARAM[texture]</texture>
            </control>
        </control>
    </include>

    <include name="Object_IconicButton">
        <param name="visible" default="true" />
        <param name="controltype" default="button" />
        <definition>
            <control type="group" id="$PARAM[groupid]">
                <width>84</width>
                <height>90</height>
                <visible>$PARAM[visible]</visible>
                <include content="Object_IconicButton_Left">
                    <param name="visible" value="Control.HasFocus($PARAM[id])" />
                    <param name="texture" value="common/buttonshadow-fo.png" />
                    <param name="icon" value="$PARAM[icon]" />
                    <param name="colordiffuse-icon" value="e7ededed" />
                    <param name="colordiffuse-texture" value="ff333333" />
                </include>
                <include content="Object_IconicButton_Left">
                    <param name="visible" value="!Control.HasFocus($PARAM[id])" />
                    <param name="texture" value="common/buttonshadow-nf.png" />
                    <param name="icon" value="$PARAM[icon]" />
                    <param name="colordiffuse-icon" value="b3333333" />
                    <param name="colordiffuse-texture" value="1f333333" />
                </include>
            </control>
            <control type="$PARAM[controltype]" id="$PARAM[id]">
                <left>10</left>
                <width>auto</width>
                <visible>$PARAM[visible]</visible>
                <ondown>50</ondown>
                <onup>9601</onup>
                <height>90</height>
                <texturenofocus border="0,24,0,24" flipx="true" colordiffuse="1f333333">common/buttonshadow-mid-nf.png</texturenofocus>
                <texturefocus border="0,24,0,24" flipx="true" colordiffuse="ff333333">common/buttonshadow-mid-fo.png</texturefocus>
                <font>font_info_buttons</font>
                <label>$PARAM[label]</label>
                <textoffsetx>0</textoffsetx>
                <textcolor>b3333333</textcolor>
                <focusedcolor>ffededed</focusedcolor>
                <nested />
            </control>
            <control type="group" id="2$PARAM[groupid]">
                <left>10</left>
                <width>38</width>
                <height>90</height>
                <visible>$PARAM[visible]</visible>
                <include content="Object_IconicButton_Right">
                    <param name="visible" value="Control.HasFocus($PARAM[id])" />
                    <param name="texture" value="common/buttonshadow-fo.png" />
                    <param name="colordiffuse-texture" value="ff333333" />
                </include>
                <include content="Object_IconicButton_Right">
                    <param name="visible" value="!Control.HasFocus($PARAM[id])" />
                    <param name="texture" value="common/buttonshadow-nf.png" />
                    <param name="colordiffuse-texture" value="1f333333" />
                </include>
            </control>
        </definition>
    </include>

   <include name="Info_ImageViewer">
        <param name="listid" default="5005" />
        <param name="buttonid" default="9506" />
        <param name="art" default="Art(poster)" />
        <definition>
            <control type="button" id="$PARAM[buttonid]">
                <include>Defs_Hidden_Button</include>
                <onleft>Control.Move($PARAM[listid],-1)</onleft>
                <onright>Control.Move($PARAM[listid],1)</onright>
                <onback>$PARAM[listid]</onback>
            </control>
            <control type="group">
                <include>Animation_FadeInOut</include>
                <include>Global_Overlay</include>
                <include>Global_Overlay</include>
                <visible>Control.HasFocus($PARAM[buttonid])</visible>
                <control type="image">
                    <aspectratio>keep</aspectratio>
                    <texture background="true">$INFO[Container($PARAM[listid]).ListItem.$PARAM[art]]</texture>
                </control>
            </control>
        </definition>
    </include>

   <include name="Netflix_Fixed_Focus">
        <param name="ids" default="" />
        <param name="top" default="" />
    	<param name="postercondition" default="false" />
    	<param name="landscapecondition" default="false" />
    	<param name="landscapedetailscondition" default="false" />
    	<param name="landscapewidecondition" default="false" />
    	<param name="landscapewidepostercondition" default="false" />
    	<param name="landscapenetflixcondition" default="false" />
    	<param name="landscapepanelcondition" default="false" />
    	<param name="squarecondition" default="false" />
    	<param name="landscapepanel" default="false" />
    	<param name="posterdetailscondition" default="false" />
    	<param name="widgetlivecondition" default="false" />
    	<param name="categorycondition" default="false" />
    	<param name="squarelabelcondition" default="false" />
        <param name="genrecondition" default="false" />
        <param name="submenucondition" default="false" />
        <param name="visible" default="" />
        <definition>


             <control type="group" id="$PARAM[ids]">
		<top>-700</top>
                <visible>$PARAM[visible] + $PARAM[landscapewidecondition]</visible>
               <control type="image">
                <width>774.84</width>
                <height>436.20</height>
                <texture colordiffuse="FFFFFFFF" border="20">home_focus.png</texture>
               </control>
            </control>






<!--
             <control type="group" id="$PARAM[id]">
                <left>$PARAM[left]</left>
                <bottom>$PARAM[bottom]</bottom>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>
                <control type="image">
                    <texture colordiffuse="FFFFFFFF" border="20">home_focus.png</texture>
                </control>
                <visible>$PARAM[visible]</visible>
            </control>
-->
        </definition>
    </include>

    <include name="global_search">
        <include>Global_Background</include>
        <include>Topbar</include>
        <include>Object_PlotOverlay</include>
        <control type="list" id="9000">
            <orientation>horizontal</orientation>
            <height>10</height>
            <top>-1000</top>
            <ondown>50</ondown>
            <onleft>990</onleft>
            <onright>noop</onright>
            <itemlayout width="10" />
            <focusedlayout width="10" />
        </control>

        <control type="group">
            <include>View_Group</include>
            <include>Animation_Right</include>
            <include>Defs_InfoDialog_Visible</include>
            <visible>!Control.HasFocus(9602)</visible>
            <control type="group">
                <visible>Control.IsVisible(50)</visible>
                <control type="group">
                    <include>View_Pad</include>
                    <control type="fixedlist" id="50">
                        <bottom>-10</bottom>
                        <right>-70</right>
                        <left>-70</left>
                        <height>500</height>
                        <height>poster_height</height>
                        <focusposition>0</focusposition>
                        <movement>2</movement>
                        <viewtype label="$LOCALIZE[31161]">showcase</viewtype>
                        <pagecontrol>60</pagecontrol>
                        <onleft>50</onleft>
                        <onright>50</onright>
                        <ondown>60</ondown>
                        <onup>9000</onup>
                        <orientation>horizontal</orientation>
                        <preloaditems>2</preloaditems>
                        <scrolltime tween="quadratic">400</scrolltime>
                        <itemlayout width="260" height="480" condition="Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(actors) | Container.Content(directors)">
                            <control type="group">
                                <left>view_pad</left>
                                <right>-view_pad</right>
                                <control type="group">
                                    <height>380</height>
                                    <include>Defs_PosterBack</include>
                                    <control type="image" description="Poster">
                                        <bordersize>10</bordersize>
                                        <aspectratio scalediffuse="false">scale</aspectratio>
                                        <texture fallback="DefaultAddonNone.png" background="true" diffuse="diffuse/widgetposter.png">$VAR[Image_Poster]</texture>
                                    </control>
                                    <include>View_WatchedOverlay</include>
                                    <control type="image">
                                        <bordersize>10</bordersize>
                                        <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
                                    </control>
                                </control>
                                <include condition="!Skin.HasSetting(DisableViewText)">View_Posters_Text</include>
                            </control>
                        </itemlayout>
                        <focusedlayout width="260" height="480" condition="Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(actors) | Container.Content(directors)">
                            <control type="group">
                                <left>view_pad</left>
                                <right>-view_pad</right>
                                <include>Animation_FocusBounce</include>
                                <control type="group">
                                    <height>380</height>
                                    <include>Defs_PosterBack</include>
                                    <control type="image" description="Poster">
                                        <bordersize>10</bordersize>
                                        <aspectratio scalediffuse="false">scale</aspectratio>
                                        <texture fallback="DefaultAddonNone.png" background="true" diffuse="diffuse/widgetposter.png">$VAR[Image_Poster]</texture>
                                    </control>
                                    <include>View_WatchedOverlay</include>
                                    <control type="image">
                                        <bordersize>10</bordersize>
                                        <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
                                    </control>
                                    <!-- Highlight -->
                                    <control type="group">
                                        <visible>Control.HasFocus(50)</visible>
                                        <include>View_Selectbox</include>
                                    </control>
                                </control>
                                <include condition="!Skin.HasSetting(DisableViewText)">View_Posters_Text</include>
                            </control>
                        </focusedlayout>
                        <itemlayout width="606.66" height="480" condition="Container.Content(episodes) | Container.Content(musicvideos)">
                            <control type="group">
                                <left>view_pad</left>
                                <right>-view_pad</right>
                                <control type="group">
                                    <height>350</height>
                                    <include>Defs_PosterBack</include>
                                    <control type="image" description="Poster">
                                        <bordersize>10</bordersize>
                                        <aspectratio scalediffuse="false">scale</aspectratio>
                                        <texture fallback="DefaultAddonNone.png" background="true" diffuse="diffuse/landscape.png">$VAR[Image_Fanart]</texture>
                                    </control>
                                    <include>View_WatchedOverlay</include>
                                    <control type="image">
                                        <bordersize>10</bordersize>
                                        <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
                                    </control>
                                </control>
                                <include condition="!Skin.HasSetting(DisableViewText)">View_GlobalSearch_Landscape_Text</include>
                            </control>
                        </itemlayout>
                        <focusedlayout width="606.66" height="480" condition="Container.Content(episodes) | Container.Content(musicvideos)">
                            <control type="group">
                                <left>view_pad</left>
                                <right>-view_pad</right>
                                <include>Animation_FocusBounce</include>
                                <control type="group">
                                    <height>350</height>
                                    <include>Defs_PosterBack</include>
                                    <control type="image" description="Poster">
                                        <bordersize>10</bordersize>
                                        <aspectratio scalediffuse="false">scale</aspectratio>
                                        <texture fallback="DefaultAddonNone.png" background="true" diffuse="diffuse/landscape.png">$VAR[Image_Fanart]</texture>
                                    </control>
                                    <include>View_WatchedOverlay</include>
                                    <control type="image">
                                        <bordersize>10</bordersize>
                                        <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
                                    </control>
                                    <!-- Highlight -->
                                    <control type="group">
                                        <visible>Control.HasFocus(50)</visible>
                                        <include>View_Selectbox</include>
                                    </control>
                                </control>
                                <include condition="!Skin.HasSetting(DisableViewText)">View_GlobalSearch_Landscape_Text</include>
                            </control>
                        </focusedlayout>
                        <itemlayout width="364" height="480" condition="Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(livetv)">
                            <control type="group">
                                <left>view_pad</left>
                                <right>-view_pad</right>
                                <control type="group">
                                    <height>364</height>
                                    <include>Defs_PosterBack</include>
                                    <control type="image" description="Poster">
                                        <bordersize>10</bordersize>
                                        <aspectratio scalediffuse="false">scale</aspectratio>
                                        <texture fallback="DefaultAddonNone.png" background="true" diffuse="diffuse/square.png">$INFO[ListItem.Icon]</texture>
                                    </control>
                                    <include>View_WatchedOverlay</include>
                                    <control type="image">
                                        <bordersize>10</bordersize>
                                        <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
                                    </control>
                                </control>
                                <include condition="!Skin.HasSetting(DisableViewText)">View_GlobalSearch_Square_Text</include>
                            </control>
                        </itemlayout>
                        <focusedlayout width="364" height="480" condition="Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(livetv)">
                            <control type="group">
                                <left>view_pad</left>
                                <right>-view_pad</right>
                                <include>Animation_FocusBounce</include>
                                <control type="group">
                                    <height>364</height>
                                    <include>Defs_PosterBack</include>
                                    <control type="image" description="Poster">
                                        <bordersize>10</bordersize>
                                        <aspectratio scalediffuse="false">scale</aspectratio>
                                        <texture fallback="DefaultAddonNone.png" background="true" diffuse="diffuse/square.png">$INFO[ListItem.Icon]</texture>
                                    </control>
                                    <include>View_WatchedOverlay</include>
                                    <control type="image">
                                        <bordersize>10</bordersize>
                                        <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
                                    </control>
                                    <!-- Highlight -->
                                    <control type="group">
                                        <visible>Control.HasFocus(50)</visible>
                                        <include>View_Selectbox</include>
                                    </control>
                                </control>
                                <include condition="!Skin.HasSetting(DisableViewText)">View_GlobalSearch_Square_Text</include>
                            </control>
                        </focusedlayout>
                    </control>
                    <include content="Object_Info">
                        <param name="id" value="50" />
                        <param name="width" value="1654" />
                        <param name="discart" value="true" />
                        <param name="hdsd_flag" value="true" />
                        <param name="plot_height" value="170" />
                        <param name="studioid_flags" value="90649" />
                        <param name="studioid_ratings" value="90691" />
                    </include>
                </control>
            </control>
        </control>
        <control type="group">
            <include>View_Group</include>
            <include>Defs_InfoDialog_Visible</include>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <include content="Object_Scrollbar_Horz">
                <param name="visible" value="Control.IsVisible(50)" />
            </include>
        </control>

        <control type="label" id="991"><include>Defs_Hidden_Button</include></control>
        <control type="button" id="990">
            <onright>9000</onright>
            <onleft>noop</onleft>
            <ondown>50</ondown>
            <include>Defs_Hidden_Button</include>
        </control>
        <control type="label" id="999"><include>Defs_Hidden_Button</include></control>
   </include>



</includes>
