<?xml version="1.0" encoding="UTF-8"?>
<includes>

     <variable name="infoslidestudio">
	<value condition="String.Contains(ListItem.Studio,/)">$INFO[Window(Home).Property(TMDbHelper.ListItem.Studio.1.Name),resource://resource.images.studios.coloured/,.png]</value>
	<value condition="!String.Contains(ListItem.Studio,/)">$INFO[ListItem.Studio,resource://resource.images.studios.coloured/,.png]</value>
     </variable>
     <variable name="serenicons">
	<value condition="!Skin.HasSetting(SerenIcons) + String.StartsWith(ListItem.Icon,DefaultFolder)">DefaultFolder.png</value>
	<value condition="!Skin.HasSetting(SerenIcons)">ListItem.Icon</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesHome)">special://skin/media/exuary/movies.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsHome)">special://skin/media/exuary/tvshows.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=myShows)">special://skin/media/exuary/mytvshows.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=myMovies)">special://skin/media/exuary/mymovies.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=myFiles)">special://skin/media/exuary/downloads.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=searchMenu)">special://skin/media/exuary/search.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=toolsMenu)">special://skin/media/exuary/tools.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsPopular&page=1) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesPopular&page=1)]">special://skin/media/exuary/most-popular.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsRecommended) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesRecommended)]">special://skin/extras/openmeta/traktrecommendations.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsTrending&page=1) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesTrending&page=1)]">special://skin/extras/openmeta/trending.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsPlayed&page=1) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesPlayed&page=1)]">special://skin/extras/openmeta/trakt.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsWatched&page=1) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesWatched&page=1)]">special://skin/media/exuary/people-watching.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsCollected&page=1) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesCollected&page=1)]">special://skin/extras/openmeta/traktcollection.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsAnticipated&page=1) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesAnticipated&page=1)]">special://skin/extras/openmeta/trakt.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesBoxOffice)">special://skin/media/exuary/box-office.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesUpdated&page=1)">special://skin/extras/openmeta/trakt.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsUpdated&page=1)">special://skin/media/exuary/latest-episodes.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=tvGenres) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=movieGenres&page=1)]">special://skin/extras/openmeta/genres.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showYears) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=movieYears)]">special://skin/media/exuary/years.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsByActor) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=movieByActor)]">special://skin/media/exuary/people-search.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsSearchHistory) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesSearchHistory)]">special://skin/media/exuary/search.png</value>
        <value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsNetworks)">special://skin/media/exuary/networks.png</value>
        <value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsNew)">special://skin/media/exuary/new-tvshows.png</value>
        <value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=onDeckShows) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=onDeckMovies)]">special://skin/extras/openmeta/aired.png</value>
        <value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsMyCollection) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesMyCollection)]">special://skin/extras/openmeta/traktcollection.png</value>
        <value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsMyWatchlist) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=moviesMyWatchlist)]">special://skin/extras/openmeta/traktwatchlist.png</value>
        <value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=myTraktLists&actionArgs=shows) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=myTraktLists&actionArgs=movies)]">special://skin/extras/openmeta/traktlikedlists.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsNextUp)">special://skin/extras/openmeta/traktnextepisodes.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=myUpcomingEpisodes)">special://skin/extras/openmeta/airing.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsMyProgress)">special://skin/extras/openmeta/aired.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=showsMyRecentEpisodes)">special://skin/extras/openmeta/traktcalendar.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=myTraktLists&amp;actionArgs=shows)">special://skin/extras/openmeta/traktlikedlists.png</value>
	<value condition="Skin.HasSetting(SerenIcons) + [String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=myWatchedEpisodes&page=1) | String.IsEqual(ListItem.FileNameAndPath,plugin://plugin.video.seren/?action=myWatchedMovies&page=1)]">special://skin/extras/openmeta/trakt.png</value>
	<value>ListItem.Icon</value>
     </variable>

     <variable name="weather_radar">
	<value condition="Skin.HasSetting(EnableOzWetherRadar)">special://profile/addon_data/weather.ozweather/currentloop/$INFO[Window(2600).Property(Radar)]/</value>
	<value condition="!Skin.HasSetting(EnableOzWetherRadar)">special://masterprofile/addon_data/scripts/weather/</value>
     </variable>

     <variable name="widgetliveart">
	<value condition="!Skin.HasSetting(EnableWidgetLiveIcon)">$INFO[ListItem.Icon]</value>
	<value condition="Skin.HasSetting(EnableWidgetLiveIcon)">$INFO[ListItem.Art(thumb)]</value>
     </variable>
     <variable name="Image_Clearart_Hub">
	<value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
	<value condition="!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Clearart))">$INFO[Window(Home).Property(TMDBHelper.ListItem.Clearart)]</value>
        <value condition="String.IsEmpty(ListItem.Art(Clearart))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Clearlogo))">$INFO[Window(Home).Property(TMDBHelper.ListItem.Clearlogo)]</value>
     </variable>
     <variable name="Image_Clearart_Widget">
        <value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearart))">$INFO[ListItem.Art(tvshow.clearart)]</value>
        <value condition="String.IsEmpty(ListItem.Art(clearart)) + !String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="String.IsEmpty(ListItem.Art(tvshow.clearart)) + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="String.IsEmpty(ListItem.Art(clearart)) + String.IsEmpty(ListItem.Art(clearlogo)) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value>$INFO[ListItem.Art(fanart)]</value>
     </variable>

     <include name="fanart_multi_1505">
     <control type="fadelabel" id="398095">
        <description>Randomizer for plugin-free multiple fanart</description>
        <top>-1000</top> <!-- Don't need to see it, but can't change its visibility. Put it off screen -->
        <width>1</width>
        <height>1</height>
        <info>Container(1505).ListItem.Art(fanart)</info>
        <info>Container(1505).ListItem.Art(fanart1)</info>
        <info>Container(1505).ListItem.Art(fanart2)</info>
        <info>Container(1505).ListItem.Art(fanart3)</info>
        <!-- ... repeat for each numbered fanart -->
        <!-- tvshow.fanart are filled with the series fanart when navigating season and episode lists -->
        <randomize>false</randomize>
	<include>Defs_PauseAtEnd</include>
        <!-- No scrolling so only the pauseatend above (plus a short fade-in) affects length of time each
                image is shown -->
        <scroll>false</scroll>
        <scrollout>false</scrollout>
        <!-- Resets the timer when navigating to a new item, so each item's first visible fanart will
                show for the full amount of time -->
        <resetonlabelchange>true</resetonlabelchange>
   </control>
   </include> 



     <include name="fanart_multi">
     <control type="fadelabel" id="398045">
        <description>Randomizer for plugin-free multiple fanart</description>
        <top>-1000</top> <!-- Don't need to see it, but can't change its visibility. Put it off screen -->
        <width>1</width>
        <height>1</height>
        <info>ListItem.Art(fanart)</info>
        <info>ListItem.Art(fanart1)</info>
        <info>ListItem.Art(fanart2)</info>
        <info>ListItem.Art(fanart3)</info>
        <!-- ... repeat for each numbered fanart -->
        <!-- tvshow.fanart are filled with the series fanart when navigating season and episode lists -->
        <randomize>false</randomize>
	<include>Defs_PauseAtEnd</include>
        <!-- No scrolling so only the pauseatend above (plus a short fade-in) affects length of time each
                image is shown -->
        <scroll>false</scroll>
        <scrollout>false</scrollout>
        <!-- Resets the timer when navigating to a new item, so each item's first visible fanart will
                show for the full amount of time -->
        <resetonlabelchange>true</resetonlabelchange>
   </control>
   </include> 
   <variable name="fanart_multi_fadelabel">
       <value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(ListItem.Art(fanart1)) + !String.IsEmpty(Control.GetLabel(398045))">$INFO[Control.GetLabel(398045)]</value>
       <value>$VAR[Spotlight_Fanart]</value>
   </variable>
   <variable name="fanart_multi_fadelabel_1505">
       <value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(ListItem.Art(fanart1)) + !String.IsEmpty(Control.GetLabel(398095))">$INFO[Control.GetLabel(398095)]</value>
       <value>$INFO[Container(1505).ListItem.Art(fanart)]</value>
   </variable>
   <variable name="loading_spinner">
       <value condition="String.IsEmpty(Skin.String(loadingspinner.icon))">netflix/loading.gif</value>
       <value condition="!String.IsEmpty(Skin.String(loadingspinner.icon))">$INFO[Skin.String(loadingspinner.icon)]</value>
   </variable>
   <variable name="loading_widget">
       <value condition="String.IsEqual(Container(505).ListItem.Property(widgetAspect),Poster)">special://skin/media/dialogs/loading_poster.png</value>
       <value condition="!String.IsEqual(Container(505).ListItem.Property(widgetAspect),Poster)">special://skin/media/dialogs/loading_landscape.png</value>
   </variable>
   <variable name="movie_list_background">
	<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31834])">special://skin/media/exuary/movielist/dunkirk.jpg</value> <!-- 2018 - Oscar Nominees & Winners -->
	<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31831])">special://skin/media/exuary/movielist/thegodfather.jpg</value> <!-- Academy Awards - Best Picture Winners -->
	<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31833])">special://skin//media/exuary/movielist/shapeofwater.jpg</value> <!-- 2018 - Golden Globe Nominees & Winners -->
	<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31835])">special://skin/media/exuary/movielist/shawshank.jpg</value> <!-- IMDB: Top Rated Movies -->
	<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31836])">special://skin/media/exuary/movielist/thedarknight.jpg</value> <!-- Reddit Top 250 (2018 Edition) -->
	<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31832])">special://skin/media/exuary/movielist/blackpanther.jpg</value> <!-- Rotten Tomatoes: Best of 2018 -->
   </variable>
   <variable name="tv_list_background">
        <value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31837])">special://skin/media/exuary/tvlist/sopranos.jpg</value> <!-- IMDB: Top Rated TV Shows -->
        <value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31838])">special://skin/media/exuary/tvlist/bandofbrothers.jpg</value> <!-- Rolling Stone's 100 Greatest TV Shows of All Time -->
        <value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31839])">special://skin/media/exuary/tvlist/breakingbad.jpg</value> <!-- Most Popular -->
        <value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31840])">special://skin/media/exuary/tvlist/suits.jpg</value> <!-- TV Shows 2018 ➛ Scripted (USA) -->
        <value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31841])">special://skin/media/exuary/tvlist/bodyguard.jpg</value> <!-- TV Shows 2018 ➛ Scripted (UK) -->
        <value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31665])">special://skin/media/exuary/tvlist/genres-background.jpg</value> <!-- Genres -->
   </variable> 
   <variable name="Spotlight_Fanart">
        <value condition="String.IsEmpty(ListItem.DBType) + !String.IsEmpty(ListItem.Property(background)) + [Window.IsVisible(3810) | Window.IsVisible(3820)] ">$INFO[ListItem.Property(background)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(ListItem.Art(fanart)) + System.HasAddon(script.artwork.helper) + [Window.IsVisible(Home) | Window.IsVisible(DialogVideoInfo.xml)] + [String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode)]">plugin://script.artwork.helper/multiimage/listitem/?refresh=$INFO[ListItem.Label]</value>
        <value>$INFO[ListItem.Icon]</value>
   </variable> 

   <variable name="Spotlight_Fanart_1505">
        <value condition="!String.IsEmpty(Container(1505).ListItem.Art(fanart))">$INFO[Container(1505).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(1505).ListItem.Art(thumb))">$INFO[Container(1505).ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(Container(1505).ListItem.Art(landscape))">$INFO[Container(1505).ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(Container(1505).ListItem.Art(tvshow.landscape))">$INFO[Container(1505).ListItem.Art(tvshow.landscape)]</value>
        <value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(ListItem.Art(fanart)) + System.HasAddon(script.artwork.helper) + [Window.IsVisible(Home) | Window.IsVisible(DialogVideoInfo.xml)] + [String.IsEqual(Container(1505).ListItem.DBTYPE,season) | String.IsEqual(Container(1505).ListItem.DBTYPE,episode)]">plugin://script.artwork.helper/multiimage/listitem/?refresh=$INFO[Container(1505).ListItem.Label]</value>
   </variable>
   <variable name="Spotlight_Fanart_1506">
        <value condition="!String.IsEmpty(Container(1506).ListItem.Art(fanart))">$INFO[Container(1506).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(1506).ListItem.Art(thumb))">$INFO[Container(1506).ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(Container(1506).ListItem.Art(landscape))">$INFO[Container(1506).ListItem.Art(landscape)]</value>
        <value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(ListItem.Art(fanart)) + System.HasAddon(script.artwork.helper) + [Window.IsVisible(Home) | Window.IsVisible(DialogVideoInfo.xml)] + [String.IsEqual(Container(1506).ListItem.DBTYPE,season) | String.IsEqual(Container(1506).ListItem.DBTYPE,episode)]">plugin://script.artwork.helper/multiimage/listitem/?refresh=$INFO[Container(1506).ListItem.Label]</value>
   </variable>


   <variable name="Image_Fanart">
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="String.Contains(ListItem.Path,plugin.video.twitch) + !String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape)) + String.IsEqual(ListItem.Art(landscape),0)">$INFO[ListItem.Art(fanart)]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + [Skin.HasSetting(PreferFanartHome) | String.IsEqual(ListItem.Icon,ListItem.Art(fanart))] + !String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + Skin.HasSetting(PreferFanartHome) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + !Skin.HasSetting(PreferFanartHome) + String.IsEqual(ListItem.Art(thumb),ListItem.Art(poster))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + !Skin.HasSetting(PreferFanartHome) + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!Container.Content(episodes) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!Container.Content(seasons) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="[Container.Content(seasons) | String.IsEqual(ListItem.DBType,season)] + !String.IsEmpty(ListItem.Art(thumb)) + !String.IsEqual(ListItem.Art(thumb),ListItem.Art(poster))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb)) + !String.IsEqual(ListItem.Art(thumb),ListItem.Art(poster))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb)) + !String.IsEmpty(ListItem.TvShowTitle) + Window.IsVisible(MyPlaylist.xml)">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(ListItem.Art(animatedfanart)) + ![Container.Content(videos) | Container.Content(episodes)] + !Window.IsVisible(home)">$INFO[ListItem.Art(animatedfanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(season.landscape)) + [[!Container.Content(videos) + !Container.Content(episodes)] | !String.IsEmpty(ListItem.Property(PlayAll)) | String.IsEqual(ListItem.DBType,movie)] + !Window.IsVisible(home)">$INFO[ListItem.Art(season.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape)) + !Container.Content(videos)">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape)) + [[!Container.Content(videos) + !Container.Content(episodes)] | !String.IsEmpty(ListItem.Property(PlayAll)) | String.IsEqual(ListItem.DBType,movie)] + !Window.IsVisible(home)">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart)) + [[!Container.Content(videos) + !Container.Content(episodes)] | !String.IsEmpty(ListItem.Property(PlayAll)) | String.IsEqual(ListItem.DBType,movie)] + !Window.IsVisible(home)">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart)) + Window.IsVisible(home) + [String.IsEqual(ListItem.Label,ListItem.TvShowTitle) | String.IsEmpty(ListItem.TvShowTitle) | Skin.HasSetting(PreferFanartHome) | !String.IsEmpty(ListItem.Property(airday))]">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
        <value condition="[!Control.HasFocus(5055) + !Control.IsVisible(505)] + !String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value condition="[!Control.HasFocus(5055) + !Control.IsVisible(505)] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!Container.Content(episodes) + !Container.Content(tvshows) + !Container.Content(movies) + !Container.Content(seasons) + !Control.HasFocus(5055) + !Control.IsVisible(505)">$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_MainMenu_fanart_aurahub"> 
        <value condition="Window.IsVisible(MyVideoNav.xml) + !String.IsEmpty(Container(5055).ListItem.Art(fanart)) + Control.IsVisible(5055)">$INFO[Container(5055).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(MyVideoNav.xml) + !String.IsEmpty(Container(5056).ListItem.Art(fanart)) + Control.IsVisible(5056)">$INFO[Container(5056).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6051).ListItem.Art(fanart)) + Control.IsVisible(6051)">$INFO[Container(6051).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6052).ListItem.Art(fanart)) + Control.IsVisible(6052)">$INFO[Container(6052).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6053).ListItem.Art(fanart)) + Control.IsVisible(6053)">$INFO[Container(6053).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6054).ListItem.Art(fanart)) + Control.IsVisible(6054)">$INFO[Container(6054).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6055).ListItem.Art(fanart)) + Control.IsVisible(6055)">$INFO[Container(6055).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6056).ListItem.Art(fanart)) + Control.IsVisible(6056)">$INFO[Container(6056).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6057).ListItem.Art(fanart)) + Control.IsVisible(6057)">$INFO[Container(6057).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6058).ListItem.Art(fanart)) + Control.IsVisible(6058)">$INFO[Container(6058).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6059).ListItem.Art(fanart)) + Control.IsVisible(6059)">$INFO[Container(6059).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6060).ListItem.Art(fanart)) + Control.IsVisible(6060)">$INFO[Container(6060).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6061).ListItem.Art(fanart)) + Control.IsVisible(6061)">$INFO[Container(6061).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6062).ListItem.Art(fanart)) + Control.IsVisible(6062)">$INFO[Container(6062).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6063).ListItem.Art(fanart)) + Control.IsVisible(6063)">$INFO[Container(6063).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6064).ListItem.Art(fanart)) + Control.IsVisible(6064)">$INFO[Container(6064).ListItem.Art(fanart)]</value>
        <value>$VAR[Image_MainMenu_fanart]</value>
    </variable>
    <variable name="Image_MainMenu_fanart"> 
	<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[20343])">special://skin/extras/backgrounds/tv-shows-mainmenu-bg.jpg</value> <!-- TV shows -->
	<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[20342])">special://skin/extras/backgrounds/movies-mainmenu-bg.jpg</value> <!-- Movies -->
	<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[31103])">special://skin/extras/backgrounds/live-tv-mainmenu-bg.jpg</value> <!-- Live TV -->
        <value condition="String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[20343])">special://skin/extras/backgrounds/tv-shows-mainmenu-bg.jpg</value> <!-- TV shows -->
        <value condition="String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[20342])">special://skin/extras/backgrounds/movies-mainmenu-bg.jpg</value> <!-- Movies -->
        <value condition="String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[31103])">special://skin/extras/backgrounds/live-tv-mainmenu-bg.jpg</value> <!-- Live TV -->
	<value condition="Window.IsVisible(Custom_Hub_TVNetflix.xml)">special://skin/extras/backgrounds/tv-shows-mainmenu-bg.jpg</value>
	<value condition="Window.IsVisible(Custom_Hub_MovieNetflix.xml)">special://skin/extras/backgrounds/movies-mainmenu-bg.jpg</value>
	<value condition="Window.IsVisible(MyVideoNav.xml) + !String.IsEmpty(Container(505).ListItem.Art(fanart))">$INFO[Container(505).ListItem.Art(fanart)]</value>
	<value>special://skin/extras/backgrounds/tv-shows-mainmenu-bg.jpg</value>
<!--	<value>$VAR[Global_Background_Image_Var]</value> -->
    </variable>
    <variable name="Image_OSD_Artwork">
        <value condition="!String.IsEmpty(Player.Art(season.poster))">$INFO[Player.Art(season.poster)]</value>
        <value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
        <value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
        <value>$INFO[VideoPlayer.Cover]</value>
    </variable>

    <variable name="Image_ArtistFanartVis">
        <value condition="!Skin.HasSetting(ArtistSlideShow.Disabled) + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.ExtraFanArt))">$INFO[Window(Home).Property(SkinHelper.Player.Art.ExtraFanArt)]</value>
        <value condition="System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled) + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))">$INFO[Window(Visualisation).Property(ArtistSlideshow.Image)]</value>
        <value condition="[!System.HasAddon(script.artistslideshow) | Skin.HasSetting(ArtistSlideShow.Disabled)] + Skin.HasSetting(musicvis.fanartfallback) + !String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
        <value>common/null.png</value>
    </variable>

    <variable name="Image_AutoUpdate">
        <value condition="String.Contains(Control.GetLabel(13),*)">special://skin/extras/icons/antenna-on.png</value>
        <value>special://skin/extras/icons/antenna.png</value>
    </variable>

    <variable name="Image_HDSD">
        <value condition="String.IsEqual(ListItem.VideoResolution,4K) | Integer.IsEqual(ListItem.VideoResolution,2160)">flags/4k.png</value>
        <value condition="Integer.IsGreater(ListItem.VideoResolution,719)">flags/hd.png</value>
        <value condition="!String.IsEmpty(ListItem.VideoResolution)">flags/sd.png</value>
        <value condition="ListItem.IsCollection">flags/sets.png</value>
        <value>flags/web.png</value>
    </variable>

    <variable name="Image_OSD_HDSD">
        <value condition="String.IsEqual(VideoPlayer.VideoResolution,4K) | Integer.IsEqual(VideoPlayer.VideoResolution,2160)">flags/4k.png</value>
        <value condition="Integer.IsGreater(VideoPlayer.VideoResolution,719)">flags/hd.png</value>
        <value condition="!String.IsEmpty(VideoPlayer.VideoResolution)">flags/sd.png</value>
        <value condition="VideoPlayer.IsCollection">flags/sets.png</value>
        <value>flags/web.png</value>
    </variable>

    <variable name="Image_AddonImage">
        <value condition="!String.IsEmpty(Container.PluginName) + !String.EndsWith(ListItem.Icon,icon.png)">special://home/addons/$INFO[Container.PluginName]/icon.png</value>
        <value condition="String.EndsWith(ListItem.Icon,icon.png)">$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_Player_Clearart">
        <value condition="!Skin.HasSetting(ShowOSDClearLogo) + !String.IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
        <value condition="!Skin.HasSetting(ShowOSDClearLogo) + !String.IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
        <value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
    </variable>

    <variable name="Image_ClearLogo">
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
    </variable>

    <variable name="addon_view_infospotlight_clearlogo">
        <value condition="Control.IsVisible(505) + !String.IsEmpty(Container(5055).ListItem.Art(tvshow.clearlogo))">$INFO[Container(5055).ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="Control.IsVisible(505) + !String.IsEmpty(Container(5055).ListItem.Art(clearlogo))">$INFO[Container(5055).ListItem.Art(clearlogo)]</value>
        <value condition="Control.IsVisible(506) + !String.IsEmpty(Container(5056).ListItem.Art(tvshow.clearlogo))">$INFO[Container(5056).ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="Control.IsVisible(506) + !String.IsEmpty(Container(5056).ListItem.Art(clearlogo))">$INFO[Container(5056).ListItem.Art(clearlogo)]</value>
        <value condition="Control.IsVisible(1505) + !String.IsEmpty(Container(1505).ListItem.Art(tvshow.clearlogo))">$INFO[Container(1505).ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="Control.IsVisible(1505) + !String.IsEmpty(Container(1505).ListItem.Art(clearlogo))">$INFO[Container(1505).ListItem.Art(clearlogo)]</value>
        <value condition="Control.IsVisible(1506) + !String.IsEmpty(Container(1506).ListItem.Art(clearlogo))">$INFO[Container(1506).ListItem.Art(clearlogo)]</value>
    </variable>

    <variable name="Widget_ClearLogo_1505">
        <value condition="!String.IsEmpty(Container(1505).ListItem.Art(tvshow.clearlogo))">$INFO[Container(1505).ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(Container(1505).ListItem.Art(clearlogo))">$INFO[Container(1505).ListItem.Art(clearlogo)]</value>
    </variable>

    <variable name="Widget_ClearLogo_1506">
        <value condition="!String.IsEmpty(Container(1506).ListItem.Art(tvshow.clearlogo))">$INFO[Container(1506).ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(Container(1506).ListItem.Art(clearlogo))">$INFO[Container(1506).ListItem.Art(clearlogo)]</value>
    </variable>


    <variable name="Widget_ClearLogo">
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
    </variable>

    <variable name="NetflixHome_ClearLogo">
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="String.IsEmpty(ListItem.Art(clearlogo)) + !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.ClearLogo))">$INFO[Window(Home).Property(TMDBHelper.ListItem.ClearLogo)]</value>
    </variable>

    <variable name="NetflixInfo_ClearLogo_Container">
        <value condition="$EXP[clearlogo_container_updating] + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="$EXP[clearlogo_container_updating] + !String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Art(tvshow.clearlogo))">$INFO[Container.ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Art(clearlogo))">$INFO[Container.ListItem.Art(clearlogo)]</value>
        <value condition="String.IsEmpty(Container.ListItem.Art(clearlogo)) + !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.ClearLogo))">$INFO[Window(Home).Property(TMDBHelper.ListItem.ClearLogo)]</value>
    </variable>

    <variable name="Image_DiscArt">
        <value condition="!String.IsEmpty(ListItem.Art(discart))">$INFO[ListItem.Art(discart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.DiscArt))">$INFO[Window(Home).Property(TMDBHelper.ListItem.DiscArt)]</value>
    </variable>

    <variable name="Image_Watched">
        <value condition="System.Setting(hidewatched)">special://skin/extras/icons/watched-hide.png</value>
        <value>special://skin/extras/icons/watched-show.png</value>
    </variable>
    <variable name="Image_Filtered">
        <value condition="Container.Filtered">special://skin/extras/icons/filter-on.png</value>
        <value>special://skin/extras/icons/filter-off.png</value>
    </variable>

    <variable name="Cat_GenreIcons">
        <value>$VAR[Cat_GenreIcons_Path]$INFO[ListItem.Label,,.jpg]</value>
        <value>$VAR[Cat_GenreIcons_Path]$INFO[ListItem.Label,,.png]</value>
    </variable>
    <variable name="Cat_GenreIcons_Path">
        <value condition="System.HasAddon(resource.images.moviegenreicons.filmstrip)">resource://resource.images.moviegenreicons.filmstrip/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">resource://resource.images.moviegenreicons.transparent/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.filmstrip)">resource://resource.images.moviegenreicons.xzener-flat/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.horizon)">resource://resource.images.moviegenreicons.horizon/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.grey)">resource://resource.images.moviegenreicons.grey/</value>
    </variable>
    <variable name="Image_GenreIcons">
        <value>$VAR[Image_GenreIcons_Path]$INFO[ListItem.Label,,.png]</value>
    </variable>
    <variable name="Image_GenreIcons_Path">
        <value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">resource://resource.images.moviegenreicons.transparent/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.horizon)">resource://resource.images.moviegenreicons.horizon/</value>
    </variable>

    <variable name="Image_FallbackIcon">
        <value condition="String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
        <value condition="String.Contains(ListItem.ActualIcon,Default)">$INFO[ListItem.ActualIcon]</value>
    </variable>

    <variable name="Image_Overlay_List">
        <value condition="ListItem.IsPlaying">indicator/play.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0)">indicator/checkmark-fo.png</value>
        <value condition="ListItem.IsResumable">indicator/inprogress-25.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">indicator/checkmark-fo.png</value>
        <value condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)]+ !String.IsEmpty(ListItem.DBID)">indicator/library.png</value>
        <value condition="ListItem.IsCollection">indicator/movieset.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayUnwatched.png)">indicator/library.png</value>
    </variable>

    <variable name="Image_Overlay">
        <value condition="ListItem.IsPlaying">indicator/play.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="ListItem.IsResumable">indicator/inprogress-25.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),0) + Integer.IsLess(ListItem.Property(UnWatchedEpisodes),1) + [Container.Content(tvshows) | Container.Content(seasons)]">indicator/checkmark-fo.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0)">indicator/checkmark-fo.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
        <value condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)]+ !String.IsEmpty(ListItem.DBID)">indicator/library.png</value>
        <value condition="ListItem.IsCollection">indicator/movieset.png</value>
    </variable>
    <variable name="Image_Overlay_Focus">
        <value condition="ListItem.IsPlaying">indicator/play.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="ListItem.IsResumable">indicator/inprogress-25.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),0) + Integer.IsLess(ListItem.Property(UnWatchedEpisodes),1) + [Container.Content(tvshows) | Container.Content(seasons)]">indicator/checkmark-fo.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0)">indicator/checkmark-fo.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">indicator/checkmark-fo.png</value>
        <value condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)]+ !String.IsEmpty(ListItem.DBID)">indicator/library.png</value>
        <value condition="ListItem.IsCollection">indicator/movieset.png</value>
    </variable>
    <variable name="Image_Overlay_Corner">
        <value condition="ListItem.IsPlaying">indicator/corner.png</value>
        <value condition="ListItem.IsResumable">indicator/corner.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0)">indicator/corner.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">indicator/corner.png</value>
        <value condition="ListItem.IsCollection">indicator/corner.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(tvshows) | Container.Content(seasons) | Window.IsVisible(Home)]">indicator/corner.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),0) + Integer.IsLess(ListItem.Property(UnWatchedEpisodes),1) + [Container.Content(tvshows) | Container.Content(seasons)]">indicator/corner.png</value>
    </variable>

    <variable name="Image_Poster">
        <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(ListItem.Art(animatedposter))">$INFO[ListItem.Art(animatedposter)]</value>
        <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster)]</value>
        <value condition="[Container.Content(seasons) | Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,season)] + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_Poster_Color">
        <value condition="Skin.HasSetting(CycleColors) + !Skin.HasSetting(MatchColors)">special://skin/extras/colorspin/</value>
        <value condition="[Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Poster))">$INFO[Window(Home).Property(TMDBHelper.ListItem.Poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.AlbumThumb))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.AlbumThumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ArtistThumb))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ArtistThumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value condition="Skin.HasSetting(CycleColors)">special://skin/extras/colorspin/</value>
    </variable>

    <variable name="Image_Banner">
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>


   <variable name="category_widget">
  	<value condition="String.Contains(ListItem.FolderPath,Genres)">$VAR[Cat_GenreIcons]</value> 
	<value>special://skin/extras/backgrounds/global_blue.jpg</value>
  </variable>

</includes>
