<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    
	<include name="OSDPanelModern">
		<control type="group">
			<animation effect="slide" start="0,0" end="0,400" tween="cubic" easing="out" delay="0" time="450" reversible="false" condition="Control.IsVisible(1) + !Window.IsActive(videoosd)">conditional</animation>
			<animation effect="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="true" condition="Window.IsActive(videoosd)">conditional</animation>
			<bottom>0</bottom>
			<height>300</height>
			<!--Panel-->
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>100%</width>
				<height>300</height>
				<texture>diffuse/panel2.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
			</control>

			<!-- music cover with cd art -->
            <control type="group">
                <visible>Player.HasAudio + Skin.HasSetting(HideOSDDisc)</visible>
                <!-- disc art -->
                <control type="image">
                    <posx>137</posx>
                    <posy>22</posy>
                    <width>256</width>
                    <height>256</height>
                    <aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
                    <fadetime>300</fadetime>
                    <animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
                    <texture background="true" fallback="defaultcovers/cd_medium.png" diffuse="diffuse/cdmask_new.png">$VAR[PlayerDiscArtImage]</texture>
                </control>
                <!-- cover background + cover image-->
                <control type="group">
                    <posx>15</posx>
                    <posy>15</posy>
                    <width>270</width>
                    <height>270</height>
                    <control type="image">
                        <fadetime>200</fadetime>
                        <texture background="true" fallback="defaultmusicsongs.png" diffuse="diffuse/music_cover_cd.png">$VAR[AudioPlayerCoverImage]</texture>
                        <aspectratio align="center" aligny="center" scalediffuse="true">scale</aspectratio>
                    </control>
                </control>
            </control>
            
            <!-- music cover without cd art -->
            <control type="group">
                <visible>Player.HasAudio + !Skin.HasSetting(HideOSDDisc)</visible>
                <!-- cover background + cover image-->
                <control type="group">
                    <posx>15</posx>
                    <posy>15</posy>
                    <width>270</width>
                    <height>270</height>
                    <control type="image">
                        <fadetime>200</fadetime>
                        <texture background="true" fallback="defaultmusicsongs.png" diffuse="diffuse/panel2.png">$VAR[AudioPlayerCoverImage]</texture>
                        <aspectratio align="center" aligny="center" scalediffuse="true">scale</aspectratio>
                    </control>
                </control>
            </control>

			
            <!-- video cover and discart -->
			<control type="group">
                <visible>Player.HasVideo</visible>
                <!-- discart -->
                <control type="image">
                    <posx>55</posx>
                    <posy>7</posy>
                    <width>286</width>
                    <height>286</height>
                    <aligny>center</aligny>
                    <fadetime>300</fadetime>
                    <bordersize>20</bordersize>
                    <animation effect="rotate" end="-360" center="auto" time="12000" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
                    <animation effect="fade" start="0" end="100" delay="800" time="1200" reversible="false"/>
                    <texture background="true" diffuse="diffuse/cdmask_medium_new.png" fallback="defaultcovers/cd_medium.png">$VAR[PlayerDiscArtImage]</texture>
                    <aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
                    <visible>Player.HasVideo + [!String.IsEmpty(Player.Art(poster)) | !String.IsEmpty(Player.Art(tvshow.poster))]</visible>
                    <visible>Skin.HasSetting(HideOSDDisc) + VideoPlayer.Content(Movies) + ![VideoPlayer.Content(livetv) + Skin.HasSetting(NoPvrArtOSD)] | !VideoPlayer.Content(Movies) + Skin.HasSetting(EnableFakeDiscArt) + Skin.HasSetting(HideOSDDisc)</visible>
                </control>

                <!--Video Cover-->
                <control type="image">
                    <posx>40</posx>
                    <posy>20</posy>
                    <width>180</width>
                    <height>260</height>
                    <fadetime>200</fadetime>
                    <texture background="true">$VAR[OSDImageDefault]</texture>
                    <aspectratio align="left" aligny="center">stretch</aspectratio>
					<visible>[Player.HasVideo + !VideoPlayer.Content(livetv)] + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))]</visible>
				</control>
				<!--Video Cover Live TV-->
                <control type="image">
                    <posx>20</posx>
                    <posy>35</posy>
                    <width>230</width>
                    <height>230</height>
                    <fadetime>200</fadetime>
                    <texture background="true">$VAR[OSDImageDefault]</texture>
                    <aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>VideoPlayer.Content(livetv) + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))]</visible>
				</control>
				<!--Cover no poster-->
				<control type="image">
					<posx>20</posx>
					<posy>35</posy>
					<width>230</width>
					<height>230</height>
					<fadetime>200</fadetime>
					<texture background="true" fallback="defaultvideo.png">$VAR[OSDImageNoPoster]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>[Player.HasVideo + !VideoPlayer.Content(livetv)] + [String.IsEmpty(Player.Art(tvshow.poster)) + String.IsEmpty(Player.Art(poster))]</visible>
				</control>
				
				<!--Cover no poster Live TV-->
				<control type="image">
					<posx>20</posx>
					<posy>35</posy>
					<width>230</width>
					<height>230</height>
					<fadetime>200</fadetime>
					<texture background="true" fallback="DefaultAddonTvInfo.png">$VAR[OSDImageNoPoster]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>VideoPlayer.Content(livetv) + [String.IsEmpty(Player.Art(tvshow.poster)) | String.IsEmpty(Player.Art(poster))]</visible>
				</control>

            </control>
			
			<control type="group">
				<animation effect="slide" end="52" time="0" condition="Player.HasAudio + Skin.HasSetting(HideOSDDisc)">Conditional</animation>
				<animation effect="slide" end="-55" time="0" condition="Player.HasAudio + !Skin.HasSetting(HideOSDDisc)">Conditional</animation>
				<animation effect="slide" end="-20" time="0" condition="Player.HasVideo + Skin.HasSetting(HideOSDDisc) + VideoPlayer.Content(Movies) | Player.HasVideo + Skin.HasSetting(HideOSDDisc) + VideoPlayer.Content(Episodes) + Skin.HasSetting(EnableFakeDiscArt)">Conditional</animation>
				<animation effect="slide" end="-120" time="0" condition="Player.HasVideo + !Skin.HasSetting(HideOSDDisc) + [VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)] | Player.HasVideo + Skin.HasSetting(HideOSDDisc) + VideoPlayer.Content(Episodes) + !Skin.HasSetting(EnableFakeDiscArt)">Conditional</animation>
				<animation effect="slide" end="-110" time="0" condition="Player.HasVideo + ![VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)]">Conditional</animation>
				<!-- OSDLabel1 -->
				<control type="label">
					<posx>380</posx>
					<posy>20</posy>
					<width>1000</width>
					<align>left</align>
					<font>Reg40</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[OSDLabel1]</label>
					<scroll>false</scroll>
				</control>
                <!-- OSDLabel2 -->
				<control type="label">
					<posx>380</posx>
					<posy>80</posy>
					<width>980</width>
					<align>left</align>
					<font>Reg42</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>[B]$VAR[OSDLabel2][/B]</label>
					<scroll>false</scroll>
				</control>

				<control type="progress">
					<description>ProgressbarCache</description>
					<posx>515</posx>
					<posy>160</posy>
					<height>20</height>
					<width>700</width>
					<info>Player.ProgressCache</info>
					<visible>Player.HasDuration + !VideoPlayer.content(livetv)</visible>					
					<texturebg border="10" colordiffuse="00ffffff">diffuse/osd_panel.png</texturebg>
					<lefttexture/>
					<midtexture border="10" colordiffuse="$INFO[Skin.String(OSDProgressBarCacheColor)]">diffuse/osd_panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
                    <visible>!String.IsEqual(Skin.String(OSDProgressBarCacheColor),None)</visible>
				</control>
				<control type="progress" id="23">
					<description>Progress Bar</description>
					<posx>515</posx>
					<posy>160</posy>
					<height>20</height>
					<width>700</width>
					<info>Player.Progress</info>
					<visible>!VideoPlayer.HasEpg</visible>
					<texturebg border="10" colordiffuse="$VAR[OSDProgressBarBackgroundColor]">diffuse/osd_panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture border="10" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/osd_panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
				</control>
				<control type="progress" id="23">
					<description>Progress Bar</description>
					<posx>515</posx>
					<posy>160</posy>
					<height>20</height>
					<width>700</width>
					<info>PVR.EpgEventProgress</info>
					<visible>VideoPlayer.HasEpg</visible>
					<texturebg border="10" colordiffuse="$VAR[OSDProgressBarBackgroundColor]">diffuse/osd_panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture border="10" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/osd_panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
				</control>
				<control type="image">
					<description>Progress Bar Border</description>
					<posx>515</posx>
					<posy>160</posy>
					<height>20</height>
					<width>700</width>
					<visible>Player.HasDuration</visible>
					<texture border="10" colordiffuse="$INFO[Skin.String(OSDProgressBarBorderColor)]">diffuse/thinborder.png</texture>
				</control>
                <control type="slider" id="401">
                    <description>Seek Slider</description>
                    <posx>515</posx>
					<posy>154</posy>
					<height>16</height>
					<width>700</width>
                    <texturesliderbar>colors/color_transparent.png</texturesliderbar>
                    <textureslidernib colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">diffuse/seekslider.png</textureslidernib>
                    <textureslidernibfocus>colors/color_white.png</textureslidernibfocus>
                    <visible>Player.Seeking + !Player.HasAudio</visible>
                </control>

				<!--Process/Seekbar-->
				<control type="label">
					<!--Play Time-->
					<posx>380</posx>
					<posy>139</posy>
					<width>160</width>
					<align>left</align>
					<font>Reg28</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[PlayTime]</label>
				</control>
				<control type="label">
					<!--Play Time-->
					<posx>1238</posx>
					<posy>139</posy>
					<width>160</width>
					<align>left</align>
					<font>Reg28</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[RemainingTime,- ]</label>
					<visible>Player.HasDuration</visible>					
				</control>
				
			<!-- media flags -->
			<control type="group">
                <posx>369</posx>
                <posy>214</posy>
                <include>mediaflags</include>
                <visible>!Window.IsActive(videoosd)</visible>
                <visible>Player.HasVideo</visible>
                <animation effect="fade" time="200" delay="300" reversible="false">Visible</animation>
				<animation effect="fade" end="0" time="200" delay="0" reversible="true">Hidden</animation>
            </control>
            <control type="group">
                <posx>380</posx>
                <posy>217</posy>
                <include>mediaflagsAudio</include>
                <visible>!Window.IsActive(musicosd)</visible>
                <visible>Player.HasAudio</visible>
                <animation effect="fade" time="200" delay="300" reversible="false">Visible</animation>
				<animation effect="fade" end="0" time="200" delay="0" reversible="true">Hidden</animation>
            </control>
        </control>


		<control type="image">
			<!--Stars music-->
			<visible>Window.IsActive(visualisation)</visible>
			<right>36</right>
			<posy>249</posy>
			<width>200</width>
			<height>50</height>
			<aspectratio aligny="top" align="right">keep</aspectratio>
			<colordiffuse>$INFO[Skin.String(OSDPrimaryTextColor)]</colordiffuse>
			<texture fallback="ratings/star_rating/empty.png">$VAR[musicrating_stars_player]</texture>
		</control>
			
		    <!--OSD: right side below clock-->
		    <control type="label">
				<!--PlayerActionLabel-->
				<animation type="Conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding">
					<effect type="slide" start="0,0" end="-160,0" time="200" tween="cubic" easing="inout" delay="0" />
				</animation>
				<right>40</right>
				<posy>90</posy>
				<width>890</width>
				<align>right</align>
				<font>Reg30</font>
				<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
				<label>$VAR[PlayerActionLabel]</label>				
			</control>
			
			<control type="label">
				<!--Total duration-->
				<animation type="Conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding">
					<effect type="slide" start="0,0" end="-160,0" time="200" tween="cubic" easing="inout" delay="0" />
				</animation>
				<right>40</right>
				<posy>139</posy>
				<width>940</width>
				<align>right</align>
				<font>Reg28</font>
				<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
				<label>$VAR[TotalDuration,[B]$LOCALIZE[180]: [/B]]</label>
			</control>
            
            <!-- OSD label 3 -->
            <control type="label">
				<visible>!Window.IsActive(musicosd)</visible>
                <visible>Player.HasAudio</visible>
                <animation effect="fade" time="200" delay="300" reversible="false">Visible</animation>
				<animation effect="fade" end="0" time="200" delay="0" reversible="true">Hidden</animation>
                <right>40</right>
				<posy>214</posy>
                <font>flags</font>
                <width>800</width>
                <height>30</height>
                <align>right</align>
                <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                <label>$VAR[OSDLabel3]</label>
            </control>
			<!-- pause img -->
			<control type="image">
				<visible>Player.Paused</visible>
				<animation delay="150" time="300" effect="fade">Visible</animation>
				<animation delay="0" time="200" effect="fade">Hidden</animation>
				<right>33</right>
				<bottom>122</bottom>
				<width>135</width>
				<height>135</height>
				<texture>osd/osd_pause.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDButtonsFocusColor)]</colordiffuse>
			</control>
			<!-- ff/rr img -->
			<control type="image">
				<visible>Player.Forwarding</visible>
				<animation delay="150" time="300" effect="fade">Visible</animation>
				<animation delay="0" time="200" effect="fade">Hidden</animation>
				<right>40</right>
				<bottom>129</bottom>
				<width>120</width>
				<height>120</height>
				<texture>osd/osd_ff.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDButtonsFocusColor)]</colordiffuse>
			</control>
			<control type="image">
				<visible>Player.Rewinding</visible>
				<animation delay="150" time="300" effect="fade">Visible</animation>
				<animation delay="0" time="200" effect="fade">Hidden</animation>
				<right>40</right>
				<bottom>129</bottom>
				<width>120</width>
				<height>120</height>
				<texture flipx="true">osd/osd_ff.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDButtonsFocusColor)]</colordiffuse>
			</control>

			<!--Clock-->
            <control type="label">
                <right>38</right>
                <posy>7</posy>
                <width>400</width>
                <height>100</height>
                <align>right</align>
                <info>System.Time</info>
                <font>Reg60</font>
                <aligny>center</aligny>
                <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                
                <animation type="Conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding">
                    <effect type="slide" start="0,0" end="-160,0" time="200" tween="cubic" easing="inout" delay="0" />
                </animation>
            </control>			
		</control>
    </include>

	<!-- Bingie Title Info on Idle -->
	<include name="OSDPanelBingie">
		<control type="group">
			<bottom>0</bottom>
			<height>290</height>
			<control type="group">
			<animation effect="slide" start="0,0" end="0,400" tween="cubic" easing="out" delay="0" time="450" reversible="false" condition="Control.IsVisible(1) + !Window.IsActive(videoosd)">conditional</animation>
			<animation effect="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="true" condition="Window.IsActive(videoosd)">conditional</animation>
				<!-- Vignette Mask -->
				<control type="image">
					<width>100%</width>
					<height>100%</height>
					<texture background="true">overlays/osd_gradient.png</texture>
				</control>
				<!-- Progress Bars White Line Bottom Center-->
				<control type="progress">
					<visible>!VideoPlayer.HasEpg</visible>
					<description>ProgressbarCache</description>
					<posx>384</posx>
					<posy>174</posy>
					<height>7</height>
					<width>1152</width>
					<texturebg colordiffuse="$INFO[Skin.String(BingieOSDProgressBarBackgroundColor)]">diffuse/panel2.png</texturebg>
					<lefttexture/>
					<midtexture colordiffuse="$INFO[Skin.String(BingieOSDProgressBarCacheColor)]">diffuse/panel2.png</midtexture>
					<righttexture/>
					<overlaytexture/>
					<info>Player.ProgressCache</info>
				</control>
				<!-- Progress Bars Color Line Bottom Center-->				
				<control type="progress" id="23">
					<visible>!VideoPlayer.HasEpg</visible>
					<description>Progress Bar</description>
					<posx>384</posx>
					<posy>174</posy>
					<height>7</height>
					<width>1152</width>
					<texturebg colordiffuse="4dffffff">diffuse/panel2.png</texturebg>
					<lefttexture/>
					<midtexture colordiffuse="$INFO[Skin.String(BingieOSDProgressBarColor)]">diffuse/panel2.png</midtexture>
					<righttexture/>
					<overlaytexture/>
					<info>Player.Progress</info>
					<reveal>true</reveal>
				</control>
				<control type="progress" id="23">
					<visible>VideoPlayer.HasEpg</visible>
					<posx>384</posx>
					<posy>174</posy>
					<height>7</height>
					<width>1152</width>
					<info>PVR.EpgEventProgress</info>
					<texturebg colordiffuse="4dffffff">diffuse/panel2.png</texturebg>
					<lefttexture/>
					<midtexture colordiffuse="$INFO[Skin.String(BingieOSDProgressBarColor)]">diffuse/panel2.png</midtexture>
					<righttexture/>
					<overlaytexture/>
				</control>
				<control type="slider" id="401">
					<description>Seek Slider</description>
					<posx>384</posx>
					<posy>167</posy>
					<height>11</height>
					<width>1152</width>
					<texturesliderbar>colors/color_transparent.png</texturesliderbar>
					<textureslidernib colordiffuse="$INFO[Skin.String(BingieOSDProgressBarColor)]">common/slider/slider_button_nofocus.png</textureslidernib>
					<visible>Player.SeekEnabled + Player.Seeking + !Player.HasAudio</visible>
				</control>

				<!-- Play Time / Remaining Time -->
				<control type="label">
					<description>Play Time</description>
					<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
					<posx>274</posx>
					<posy>146</posy>
					<width>160</width>
					<align>left</align>
					<font>Reg30</font>
					<textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
					<label>$VAR[PlayTimeFormat]</label>
				</control>
				<control type="label">
					<description>Time Remaining</description>
					<posx>1571</posx>
					<posy>146</posy>
					<width>160</width>
					<align>left</align>
					<font>Reg30</font>
					<textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
					<label>$VAR[TimeRemainingFormat]</label>
				</control>

				<!-- Forwarding/Rewinding Indicators -->
				<control type="image">
					<visible>Player.Forwarding | Player.Rewinding</visible>
					<texture>$VAR[ForwardRewindIndicatorImage]</texture>
					<include>PlayerImageIndicatorDefs</include>
				</control>
				
				<!-- Play/Pause Indicators -->
				<control type="image">
					<visible>Player.Playing | Player.Paused | Player.Seeking</visible>
					<visible>!Window.IsActive(videoosd) + !Window.IsActive(musicosd)</visible>
					<texture>$VAR[PlayingPausedIndicatorImage]</texture>
					<include>PlayerImageIndicatorDefs</include>
				</control>				

				<!--Player Seek Time Pop Up/Action Label-->
				<control type="label" id="79591">
					<visible>Skin.HasSetting(DisableJumpIndicator)</visible>     <!-- Added to Remove Jump Indicator -->
					<posy>105</posy>
					<width>1920</width>
					<align>center</align>
					<font>Reg38</font>
					<textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
					<label>[B]$VAR[PlayerActionLabelBingie][/B]</label>
				</control>
				
				<!-- Live TV Info -->
				<control type="label">
					<posy>183</posy>
					<posx>384</posx>
					<width>1152</width>
					<height>auto</height>
					<aligny>top</aligny>
					<font>Reg26</font>
					<textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
					<label>$INFO[Player.StartTime]$INFO[VideoPlayer.EndTime,-,] | $VAR[PlayerTitle][UPPERCASE]$INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E,][/UPPERCASE]$INFO[VideoPlayer.EpisodeName, ","]$INFO[VideoPlayer.NextTitle, | $LOCALIZE[31065]: ,][CR]$INFO[VideoPlayer.ChannelName]</label>
					<scroll>false</scroll>
					<visible>VideoPlayer.Content(livetv)</visible>
				</control>
				

			</control>
		</control>
	</include>
	
	<include name="OSDButtonsModern">
        
        <!--SeekBar -->
		<include condition="!Skin.HasSetting(UseBingieOSD) + Player.HasVideo | Player.HasAudio">SeekBar_Clasic</include>

		<!-- OSD buttons -->
		<include condition="Skin.HasSetting(UseBingieOSD)">OSDButtons_Bingie_Layout_Factory</include>
		<include condition="!Skin.HasSetting(UseBingieOSD)">OSDButtons_Default_Layout_Factory</include>
			
	</include>

	<include name="OSDButtons_Bingie_Layout_Factory">
		<include content="OSDButtons_Bingie_Layout">
			<param name="topsize" value="70" />
			<param name="bottomsize" value="70" />
			<param name="gap" value="10" />
			<param name="iconspath" value="osd/bingie/" />
			<param name="toposdposleft" value="65" />
			<param name="bottomosdposleft" value="170" />
			<param name="bottomosdposleftupdown" value="94" />
			<param name="posbottom" value="78" />
			<param name="posbottomupdown" value="78" />
			<param name="postop" value="50" />
		</include>
	</include>

	<include name="OSDButtons_Default_Layout_Factory">
		<include content="OSDButtons_Layout">
			<param name="size" value="90" />
			<param name="gap" value="7" />
			<param name="iconspath" value="osd/slim/" />
			<param name="posleft" value="293" />
			<param name="posbottom" value="8" />
		</include>
	</include>
	
    <include name="OSDButtons_Layout">
		<control type="grouplist" id="200">
			<visible>!Player.FrameAdvance + !Window.IsActive(sliderdialog) + !Window.IsActive(script-upnext-upnext.xml) + !Window.IsVisible(playerprocessinfo) + !Window.IsActive(pvrosdchannels)</visible>
            <visible>[Window.IsActive(visualisation) | Window.IsActive(fullscreenvideo)] + !Player.HasGame</visible>
            <animation type="WindowOpen">
				<effect type="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="0" end="100" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="Window.IsVisible(1158) | Player.Playing">
				<effect type="slide" start="0,0" end="0,400" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="Hidden" condition="Skin.HasSetting(EnableOSDInfo)">
				<effect type="slide" start="0,0" end="0,300" tween="cubic" easing="out" delay="0" time="800" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="700" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="!Window.IsVisible(1158) | !Player.Playing">
				<effect type="slide" start="0,0" end="0,300" tween="cubic" easing="out" delay="200" time="800" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="700" reversible="false"/>
			</animation>
			<animation effect="slide" start="0,0" end="0,400" tween="cubic" easing="out" delay="0" time="450" reversible="false" condition="Control.IsVisible(1) + !Window.IsActive(videoosd)">conditional</animation>
			<animation effect="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="true" condition="Window.IsActive(videoosd)">conditional</animation>
			<posx>$PARAM[posleft]</posx>
			<bottom>$PARAM[posbottom]</bottom>
			<width>1540</width>
			<height>$PARAM[size]</height>
			<itemgap>$PARAM[gap]</itemgap>
			<onleft>200</onleft>
			<onright>200</onright>
			<onup>87</onup>
			<orientation>horizontal</orientation>
			<animation effect="slide" end="117,-8" time="0" condition="Player.HasAudio + Skin.HasSetting(HideOSDDisc)">Conditional</animation>
			<animation effect="slide" end="10,-8" time="0" condition="Player.HasAudio + !Skin.HasSetting(HideOSDDisc)">Conditional</animation>
			<animation effect="slide" end="45,-8" time="0" condition="Player.HasVideo + Skin.HasSetting(HideOSDDisc) + VideoPlayer.Content(Movies) | Player.HasVideo + Skin.HasSetting(HideOSDDisc) + VideoPlayer.Content(Episodes) + Skin.HasSetting(EnableFakeDiscArt)">Conditional</animation>
			<animation effect="slide" end="-55,-8" time="0" condition="Player.HasVideo + !Skin.HasSetting(HideOSDDisc) + [VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)] | Player.HasVideo + Skin.HasSetting(HideOSDDisc) + VideoPlayer.Content(Episodes) + !Skin.HasSetting(EnableFakeDiscArt)">Conditional</animation>
			<animation effect="slide" end="-45,-8" time="0" condition="Player.HasVideo + ![VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)]">Conditional</animation>
			<animation effect="slide" end="4" time="0" condition="Player.HasVideo">Conditional</animation>
			<animation effect="slide" end="4" time="0" condition="Player.HasAudio">Conditional</animation>
			<control type="togglebutton" id="201">
				<description>Previous</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>210</label>
                <altlabel>210</altlabel>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]prevtrack.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]prevtrack.png</texturenofocus>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]prevtrack.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]prevtrack.png</alttexturenofocus>
				<onclick condition="!VideoPlayer.Content(livetv)">PlayerControl(Previous)</onclick>
				<onclick condition="VideoPlayer.Content(livetv)">ChannelUp</onclick>
			</control>
			<control type="button" id="202">
				<label/>
				<description>RR</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<font/>
                <label>209</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]rewind.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]rewind.png</texturenofocus>
				<onclick>PlayerControl(Rewind)</onclick>
                <visible>Player.SeekEnabled</visible>
			</control>
			<control type="togglebutton" id="203">
				<altlabel>208</altlabel>
				<description>Play Pause</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<font/>
                <label>208</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]pause.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]pause.png</texturenofocus>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]play.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]play.png</alttexturenofocus>
				<onclick>PlayerControl(Play)</onclick>
			</control>
			<control type="button" id="204">
				<description>Stop</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<font/>
                <label>36036</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]stop.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]stop.png</texturenofocus>
				<onclick>PlayerControl(Stop)</onclick>
			</control>
			<control type="button" id="205">
				<description>FF</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<font/>
                <label>210</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]forward.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]forward.png</texturenofocus>
				<onclick>PlayerControl(Forward)</onclick>
                <visible>Player.SeekEnabled</visible>
			</control>
			<control type="togglebutton" id="206">
				<description>Next</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]nexttrack.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]nexttrack.png</texturenofocus>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]nexttrack.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]nexttrack.png</alttexturenofocus>
				<onclick condition="!VideoPlayer.Content(livetv)">PlayerControl(Next)</onclick>
				<onclick condition="VideoPlayer.Content(livetv)">ChannelDown</onclick>
			</control>
			<control type="button" id="207">
			  <width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
			  <label>$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</label>
			  <font/>
			  <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]repeat.png</texturefocus>
			  <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]repeat.png</texturenofocus>
			  <onclick>PlayerControl(Repeat)</onclick>
			  <visible>!Playlist.IsRepeatOne + !Playlist.IsRepeat</visible>
              <visible>!VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="button" id="208">
			  <width>$PARAM[size]</width>
			  <height>$PARAM[size]</height>
			  <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]repeatone.png</texturefocus>
			  <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]repeatone.png</texturenofocus>
			  <visible>Playlist.IsRepeatOne</visible>
              <visible>!VideoPlayer.Content(livetv)</visible>
			  <onclick>PlayerControl(Repeat)</onclick>
			</control>
			<control type="button" id="210">
			  <width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
			  <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]repeatall.png</texturefocus>
			  <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]repeatall.png</texturenofocus>
			  <visible>Playlist.IsRepeat</visible>
              <visible>!VideoPlayer.Content(livetv)</visible>
			  <onclick>PlayerControl(Repeat)</onclick>
			</control>
			<control type="togglebutton" id="212">
			  <width>$PARAM[size]</width>
              <height>$PARAM[size]</height>
			  <label>$LOCALIZE[590]$INFO[Playlist.Random, : ]</label>
			  <altlabel>$LOCALIZE[590] : $LOCALIZE[16041]</altlabel>
			  <font/>
			  <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]randomoff.png</texturefocus>
			  <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]randomoff.png</texturenofocus>
			  <usealttexture>Playlist.IsRandom</usealttexture>
			  <alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]Randomon.png</alttexturefocus>
			  <alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]Randomon.png</alttexturenofocus>
			  <onclick>PlayerControl(Random)</onclick>
			  <visible>Player.HasAudio</visible>
			</control>
			<control type="togglebutton" id="10">
				<description>Record</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]recordoff.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]recordoff.png</texturenofocus>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]recordon.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]recordon.png</alttexturenofocus>
				<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
				<onclick>PVR.ToggleRecordPlayingChannel</onclick>
				<visible>PVR.CanRecordPlayingChannel</visible>
			</control>
			<control type="button" id="214">
				<description>bookmarks</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]bookmarks.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]bookmarks.png</texturenofocus>
				<onclick>ActivateWindow(VideoBookmarks)</onclick>
				<visible>Player.HasVideo</visible>
				<visible>!VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="button" id="215">
				<description>disc menu</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]dvd.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]dvd.png</texturenofocus>
				<onclick>PlayerControl(ShowVideoMenu)</onclick>
				<visible>VideoPlayer.HasMenu</visible>
			</control>
			<control type="button" id="705">
				<description>stereoscopic</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]stereoscopic.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]stereoscopic.png</texturenofocus>
				<onclick>StereoMode</onclick>
				<visible>VideoPlayer.IsStereoscopic</visible>
			</control>
			<control type="button" id="101">
				<description>Audio Settings</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>13396</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]audio.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]audio.png</texturenofocus>
				<onclick>ActivateWindow(124)</onclick>
			</control>
			<control type="button" id="102">
				<description>Video Settings</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>13395</label>
				<align>left</align>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]video.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]video.png</texturenofocus>
				<onclick>ActivateWindow(123)</onclick>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="button" id="104">
				<description>Subtitles</description>
			    <width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>287</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]subtitles.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]subtitles.png</texturenofocus>
				<onclick>ActivateWindow(osdsubtitlesettings)</onclick>
				<visible>!Player.HasAudio</visible>
			</control>
			<control type="button" id="105">
				<description>teletext</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>287</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]teletext.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]teletext.png</texturenofocus>
				<onclick>ActivateWindow(Teletext)</onclick>
				<visible>VideoPlayer.Content(livetv) + VideoPlayer.HasTeletext</visible>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="togglebutton" id="701">
				<description> lyrics </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>31128</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]lyrics.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]lyrics.png</texturenofocus>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]lyrics.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]lyrics.png</alttexturenofocus>
				<onclick>RunScript($INFO[Skin.String(LyricScript_iconspath)])</onclick>
				<altclick>Skin.SetAddon(LyricScript_iconspath,xbmc.python.lyrics)</altclick>
				<altclick>RunScript($INFO[Skin.String(LyricScript_iconspath)])</altclick>
				<usealttexture>!Skin.String(LyricScript_iconspath)</usealttexture>
				<visible>Player.HasAudio</visible>
				<visible>System.HasAddon(script.cu.lrclyrics)</visible>
			</control>
			<control type="button" id="500">
				<description> vizualisation addon </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>12006</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]viz.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]viz.png</texturenofocus>
				<visible>Player.HasAudio</visible>
			</control>
            <control type="button" id="21417">
				<description> vizualisation settings </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>$LOCALIZE[250] $LOCALIZE[21417]</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]settings.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]settings.png</texturenofocus>
				<visible>Player.HasAudio + Visualisation.Enabled </visible>
                <onclick>Addon.Default.OpenSettings(xbmc.player.musicviz)</onclick>
			</control>
            <control type="button" id="703">
				<description> vizualisation presets </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>$LOCALIZE[250] $LOCALIZE[21417]</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]epg.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]epg.png</texturenofocus>
				<visible>Player.HasAudio + Visualisation.Enabled + [String.IsEqual(Visualisation.Name,milkdrop) | String.IsEqual(Visualisation.Name,vortex) | Visualisation.HasPresets ]</visible>
                <onclick>ActivateWindow(122)</onclick>
			</control>
			<control type="button" id="806">
				<description> pvr </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>12006</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]channellist.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]channellist.png</texturenofocus>
				<visible>VideoPlayer.Content(livetv)</visible>
				<onclick>ActivateWindow(PVROSDChannels)</onclick>
			</control>
			<control type="button" id="807">
				<description> pvr </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>12006</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]epg.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]epg.png</texturenofocus>
				<visible>VideoPlayer.Content(livetv)</visible>
                <onclick>ActivateWindow(pvrchannelguide)</onclick>
			</control>
            <control type="button" id="811">
				<description> playlist </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>12006</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]teletext.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]teletext.png</texturenofocus>
				<visible>!String.IsEqual(Playlist.Length(music),0) + Player.HasAudio</visible>
                <onclick>SetProperty(playlistdialog,show,Home)</onclick>
                <onclick>Dialog.Close(MusicOSD)</onclick>
                <onclick>ActivateWindow(musicplaylist)</onclick>
			</control>
			<control type="button" id="808">
				<description> infopanel </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>31133</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]info.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]info.png</texturenofocus>
				<visible>Player.HasVideo</visible>
				<onclick>Skin.ToggleSetting(EnableOSDInfo)</onclick>
			</control>
		</control>
		
		<control type="grouplist" id="3000">
			<animation effect="fade" time="350">WindowOpen</animation>
			<animation effect="fade" time="350">WindowClose</animation>
			<animation effect="fade" time="350">Visible</animation>
			<animation effect="fade" time="350">Hidden</animation>
			<visible>Skin.HasSetting(EnableOSDInfo) + !VideoPlayer.Content(livetv)</visible>			
			<align>center</align>
			<bottom>326</bottom>
			<width>100%</width>
			<height>50</height>
			<itemgap>15</itemgap>
			<onup condition="Skin.HasSetting(EnableOSDInfo) + !Skin.HasSetting(EnableOSDCrewInfo)">50</onup>
			<onup condition="Skin.HasSetting(EnableOSDCrewInfo)">51</onup>
			<ondown>87</ondown>
			<orientation>horizontal</orientation>			
			
			<control type="togglebutton" id="3001">
			  <width>224</width>
			  <height>50</height>
			  <label>$LOCALIZE[31089]</label>
			  <altlabel>$LOCALIZE[206]</altlabel>
			  <font>Reg26</font>
			  <textwidth>160</textwidth>
			  <texturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</texturefocus>
			  <texturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</texturenofocus>
			  <usealttexture>Skin.HasSetting(EnableOSDCrewInfo)</usealttexture>
			  <alttexturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</alttexturefocus>
			  <alttexturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</alttexturenofocus>
			  <onclick>Skin.ToggleSetting(EnableOSDCrewInfo)</onclick>
			  <onclick>Skin.Reset(EnableOSDCastInfo)</onclick>
			</control>
		</control>
		
		<include content="OSDInfoWidget">
			<param name="id" value="50" />	
			<param name="top" value="345" />			
			<param name="visible" value="Skin.HasSetting(EnableOSDInfo) + !Skin.HasSetting(EnableOSDCrewInfo) + !VideoPlayer.Content(livetv)" />
			<param name="widgetTags" value="WidgetTagOverlayEnable" />
            <param name="force_tags" value="true" />
			<param name="layout">PosterPanelBingie</param>
			<param name="content" value="$VAR[Path_OSD_Cast]" />
		</include>

		<include content="OSDInfoWidget">
			<param name="id" value="51" />	
			<param name="top" value="345" />			
			<param name="visible" value="Skin.HasSetting(EnableOSDInfo) + Skin.HasSetting(EnableOSDCrewInfo) + !Skin.HasSetting(EnableOSDCastInfo) + !VideoPlayer.Content(livetv)" />
			<param name="widgetTags" value="WidgetTagOverlayEnable" />
            <param name="force_tags" value="true" />
			<param name="layout">PosterPanelBingie</param>
			<param name="content" value="$VAR[Path_OSD_Crew]" />
		</include>			

	</include>
	
	<include name="SeekBar_Clasic">
		<control type="button" id="87">
			<include>HiddenObject</include>
			<onup>3000</onup>
			<onunfocus condition="Player.Forwarding | Player.Rewinding">PlayerControl(Play)</onunfocus>
			<ondown>200</ondown>
			<onright>StepForward</onright>
			<onleft>StepBack</onleft>
			<onclick condition="Player.Forwarding | Player.Rewinding">PlayerControl(Play)</onclick>
		</control>
		<control type="slider">
		<animation type="WindowOpen">
			<effect type="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="0" end="100" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="Window.IsVisible(1158)">
				<effect type="slide" start="0,0" end="0,400" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="Hidden" condition="Skin.HasSetting(EnableOSDInfo)">
				<effect type="fade" start="100" end="0" delay="0" time="0" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="!Window.IsVisible(1158)">
				<effect type="fade" start="100" end="0" delay="0" time="0" reversible="false"/>
			</animation>
			<animation effect="slide" end="42" time="0" condition="Player.HasAudio + Skin.HasSetting(HideOSDDisc)">Conditional</animation>
			<animation effect="slide" end="-65" time="0" condition="Player.HasAudio + !Skin.HasSetting(HideOSDDisc)">Conditional</animation>
			<animation effect="slide" end="-20" time="0" condition="Player.HasVideo + Skin.HasSetting(HideOSDDisc) + VideoPlayer.Content(Movies) | Player.HasVideo + Skin.HasSetting(HideOSDDisc) + !VideoPlayer.Content(Movies) + Skin.HasSetting(EnableFakeDiscArt)">Conditional</animation>
			<animation effect="slide" end="-120" time="0" condition="Player.HasVideo + !Skin.HasSetting(HideOSDDisc) | Player.HasVideo + Skin.HasSetting(HideOSDDisc) + !VideoPlayer.Content(Movies) + !Skin.HasSetting(EnableFakeDiscArt)">Conditional</animation>
            <description>Seek Slider</description>
			<info>Player.Progress</info>
            <posx>525</posx>
			<posy>934</posy>
			<height>16</height>
			<width>700</width>
            <texturesliderbar>colors/color_transparent.png</texturesliderbar>
            <textureslidernib colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">diffuse/seekslider.png</textureslidernib>
            <textureslidernibfocus>colors/color_white.png</textureslidernibfocus>
			<visible>!Player.Seeking + Player.HasVideo | Player.HasAudio</visible>
			<visible>Control.HasFocus(87)</visible>
        </control>
	</include>
	
    <include name="WeatherInfoOSD">
        <!-- weather info displayed in video OSD and video info -->
        <control type="group">
            <right>40</right>
            <bottom>275</bottom>
            <width>550</width>
            <height>128</height>
            <visible>!String.IsEmpty(Window(Weather).Property(Current.FanartCode)) + Skin.String(WeatherIconPack.path) | !Skin.HasSetting(UseBingieOSD)</visible>
            <include>HideOsdConditions</include>

            <!--Current Weather-->
            <control type="multiimage">
                <!--Current Weather Icon-->
                <imagepath>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(WeatherIconPack.ext)]</imagepath>
				<right>0</right>
                <width>92</width>
                <height>92</height>
                <top>10</top>
                <bottom>0</bottom>
                <aspectratio align="right" aligny="bottom">keep</aspectratio>
            </control>
            <control type="label">
                <!--Current Temp-->
                <width>400</width>
                <height>30</height>
                <right>102</right>
                <bottom>71</bottom>
                <font>Bold30</font>
                 <!-- colors should be hardcoded because display on video -->
                <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                <align>right</align>
                <label>$INFO[Window(Weather).Property(Current.Temperature)] $INFO[System.TemperatureUnits]</label>
                <visible>Weather.IsFetched</visible>
            </control>
			<!--Current Conditions-->
			<control type="label">
                <width>400</width>
                <height>30</height>
                <right>102</right>
                <bottom>41</bottom>
                <font>Reg26</font>
                 <!-- colors should be hardcoded because display on video -->
                <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                <align>right</align>
                <label>$INFO[Window(Weather).Property(Current.Condition)]</label>
                <visible>Weather.IsFetched</visible>
            </control>
        </control>
    </include>
    
    <include name="OSDInfoPanel">
        <control type="group" id="552233">
            <visible>[Skin.HasSetting(EnableOSDInfo) + Window.IsActive(videoosd)] | [Player.ShowInfo + !Window.IsActive(videoosd)]</visible>
            <visible>!Window.IsActive(notification) + !Window.IsActive(extendedprogressdialog) + !Window.IsActive(DialogPlayerProcessInfo.xml)</visible>
			<include condition="!Skin.HasSetting(UseBingieOSD)">OSD_Animation</include>
			<animation effect="fade" time="350" delay="250" condition="Skin.HasSetting(UseBingieOSD)">Visible</animation>
			<animation effect="fade" end="0" time="350" condition="Skin.HasSetting(UseBingieOSD)">Hidden</animation>
			<animation effect="fade" time="350" condition="Skin.HasSetting(UseBingieOSD)">WindowOpen</animation>
            <include>HideOsdConditions</include>
			<include condition="!Skin.HasSetting(UseBingieOSD)">OSDInfoPanelClasic</include>
			<include condition="Skin.HasSetting(UseBingieOSD)">OSDInfoPanelBingie</include>
        </control>
    </include>
    
    <include name="OSDInfoPanelClasic">
        <!--OSD Info Panel-->
        <!--Info Stuff-->
        <control type="group">
             <width>100%</width>
             <height>260</height>
             <!-- background -->
             <control type="image">
                 <texture border="5">diffuse/panel2.png</texture>
                 <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
             </control>
             <!-- Plot -->
             <control type="group">
                 <!--logo-->
                 <control type="image">
                     <posx>1530</posx>
                     <posy>30</posy>
                     <width>356</width>
                     <height>200</height>
                     <fadetime>200</fadetime>
                     <texture background="true">$VAR[OSDInfoImage]</texture>
                     <aspectratio align="center" aligny="center">keep</aspectratio>
                     <visible>[!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearart)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearlogo))]</visible>
                 </control>
				 <control type="grouplist">
					 <posx>38</posx>
					 <posy>30</posy>
					 <width>1810</width>
					 <height>155</height>
					 <itemgap>4</itemgap>
					 <orientation>vertical</orientation>
					 <usecontrolcoords>true</usecontrolcoords>
					 <!-- plot when clearlogo visible -->
					 <control type="textbox">
						 <width>1450</width>
						 <height>40</height>
						 <visible>[!String.IsEmpty(VideoPlayer.Premiered) | !String.IsEmpty(VideoPlayer.Duration) | !String.IsEmpty(VideoPlayer.RatingAndVotes)] + [!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearart)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearlogo))]</visible>
						 <label fallback="19055">[B]$INFO[VideoPlayer.Premiered,,  •  ]$INFO[VideoPlayer.Duration]$INFO[VideoPlayer.RatingAndVotes,  •  ][/B]</label>
						 <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
						 <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
						 <align>justify</align>
						 <font>Reg28</font>
					 </control>
					 <control type="textbox">
						 <width>1450</width>
						 <height>155</height>
						 <visible>!String.IsEmpty(VideoPlayer.Plot) + [!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearart)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearlogo))]</visible>
						 <label fallback="19055">$INFO[VideoPlayer.Plot]</label>
						 <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
						 <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
						 <align>justify</align>
						 <font>Reg28</font>
					 </control>
					 <!-- plot when clearlogo NOT visible -->
					 <control type="textbox">
						 <width>1810</width>
						 <height>40</height>
						 <visible>[!String.IsEmpty(VideoPlayer.Premiered) | !String.IsEmpty(VideoPlayer.Duration) | !String.IsEmpty(VideoPlayer.RatingAndVotes)] + ![!String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearart)) | !String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearart)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearlogo))]</visible>
						 <label fallback="19055">[B]$INFO[VideoPlayer.Premiered,,  •  ]$INFO[VideoPlayer.Duration]$INFO[VideoPlayer.RatingAndVotes,  •  ][/B]</label>
						 <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
						 <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
						 <align>justify</align>
						 <font>Reg28</font>
					 </control>
					 <!-- plot when clearlogo NOT visible -->
					 <control type="textbox">
						 <width>1810</width>
						 <height>155</height>
						 <visible>!String.IsEmpty(VideoPlayer.Plot) + ![!String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearart)) | !String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearart)) | !String.IsEmpty(Window(home).Property(TMDbHelper.Player.clearlogo))]</visible>
						 <label fallback="19055">$INFO[VideoPlayer.Plot]</label>
						 <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
						 <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
						 <align>justify</align>
						 <font>Reg28</font>
					 </control>
				 </control>
                <!-- media flags -->
                <control type="group">
                     <posx>27</posx>
                     <posy>190</posy>
                    <include>mediaflags_text</include>
                </control>           
             </control>
         </control>
     </include> 
	
	<include name="OSDInfoPanelBingie">
		<!--BINGIE OSD Info Panel-->
		<control type="group">
			<visible>VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(livetv)</visible>
			<!-- background -->
			<control type="image">
				<width>100%</width>
				<height>100%</height>
				<texture background="true">diffuse/panel2.png</texture>
				<colordiffuse>b3000000</colordiffuse>
			</control>	
			<control type="group">	
				<visible>!Skin.HasSetting(EnableOSDCastInfo) + !Skin.HasSetting(EnableOSDCrewInfo)</visible>
				<animation effect="fade" time="350">Visible</animation>
				<animation effect="fade" time="350">Hidden</animation>
				<!-- Discart OSD Info-->
                <control type="image">
                    <visible>Skin.HasSetting(HideOSDDisc)</visible>
					<visible>true</visible>
					<posx>264</posx>
                    <posy>215</posy>
                    <width>305</width>
                    <height>305</height>
                    <aligny>center</aligny>
                    <fadetime>200</fadetime>
                    <bordersize>20</bordersize>
					<!-- Animation to Move Discart to the Left when Playtime hits> 1 hour -->
				    <animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
				    <animation effect="rotate" end="-360" center="auto" time="12000" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
                    <texture background="true" diffuse="diffuse/cdmask_medium_new.png" fallback="defaultcovers/cd_medium.png">$VAR[PlayerDiscArtImage]</texture>
                    <aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
                    <visible>Player.HasVideo + [!String.IsEmpty(Player.Art(poster)) | !String.IsEmpty(Player.Art(tvshow.poster))]</visible>
					<visible>VideoPlayer.Content(Movies) | Skin.HasSetting(EnableFakeDiscArt)</visible>
               </control>
			<!--Poster - Video Cover OSD Pause-->
			<control type="image" id="39623">
				<visible>!VideoPlayer.Content(livetv)</visible>
				<posx>256</posx>
				<posy>317</posy>
				<align>left</align>
				<aligny>center</aligny>
				<width>320</width>
				<height>445</height>
				<fadetime>200</fadetime>
				<texture background="true">$VAR[OSDImageDefault]</texture>
				<bordersize>20</bordersize>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<!-- Animation to Move Poster to the Left when Playtime hits> 1 hour -->
				<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00)]] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
			</control>
			
			<control type="image" id="39623">
				<visible>VideoPlayer.Content(livetv)</visible>
				<posx>256</posx>
				<posy>338</posy>
				<align>left</align>
				<aligny>top</aligny>
				<width>320</width>
				<fadetime>200</fadetime>
				<texture background="true">$VAR[OSDImageDefault]</texture>
				<bordersize>20</bordersize>
				<aspectratio align="center" aligny="top">keep</aspectratio>
				<!-- Animation to Move Poster to the Left when Playtime hits> 1 hour -->
				<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00)]] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
				<include content="posx" condition="VideoPlayer.HasEpg">
					<param name="posx" value="406" />
				</include>
			</control>

			<!-- Info -->
			<control type="grouplist">
				<!-- Animation to Move Whole Control to the Left when Playtime hits> 1 hour -->
				<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00)]] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
				<!-- hide for trailers -->
				<visible>!String.Contains(VideoPlayer.Title, -trailer.)</visible>
				<animation end="-250,0" time="0" effect="slide" condition="String.Contains(Control.GetLabel(39623),DefaultVideo)">Conditional</animation>
				<posx>581</posx>
				<posy>272</posy>
				<width>1380</width>
				<height>610</height>
				<orientation>vertical</orientation>
				
				<!-- You're watching label -->
				<control type="label">
				<visible>!VideoPlayer.HasEpg + !VideoPlayer.Content(livetv)</visible>
					<align>left</align>
					<width>250</width>
					<label>31366</label>
					<font>Reg32</font>
					<textcolor>$INFO[Skin.String(BingieOSDSubLabelTextColor)]</textcolor>
				</control>
				
				<!-- You're watching label -->
				<control type="label">
				<visible>VideoPlayer.HasEpg</visible>
					<align>left</align>
					<width>250</width>
					<label>31366</label>
					<font>Reg32</font>
					<textcolor>$INFO[Skin.String(BingieOSDSubLabelTextColor)]</textcolor>
				</control>

				<!-- Clear Logo Title - Your Watching -->				
				<control type="image" id="1">
					<visible>!VideoPlayer.Content(livetv)</visible>
					<visible>!String.IsEmpty(Control.GetLabel(1))</visible>
					<width>400</width>
					<height>150</height>
					<align>left</align>
					<texture background="true">$VAR[VideoPlayerClearLogo]</texture>
					<aspectratio align="left" aligny="center">keep</aspectratio>
				</control>
				<!-- TITLE of Movie -->
				<control type="label">
					<visible>!VideoPlayer.Content(livetv)</visible>
					<height>70</height>
					<width>auto</width>
					<align>left</align>
					<font>Reg60</font>
					<textcolor>$INFO[Skin.String(BingieOSDLabelTextColor)]</textcolor>
					<label>[B]$VAR[OSDLabel4][/B]</label>
					<scroll>false</scroll>
					<wrapmultiline>true</wrapmultiline>
					<visible>!Control.IsVisible(1)</visible>
				</control>				
				
				<!-- OSDLabel5 -->
				<control type="label" id="74823">
					<animation effect="slide" start="0" end="0,2" time="0" condition="VideoPlayer.Content(livetv)">Conditional</animation>
					<width>980</width>
					<align>left</align>
					<font>Reg34</font>
					<textcolor>$INFO[Skin.String(BingieOSDSubLabelTextColor)]</textcolor>
					<label>$VAR[OSDLabel5]</label>
					<scroll>false</scroll>
					<visible>!String.IsEmpty(Control.GetLabel(74823))</visible>
				</control>
				<!-- details info -->
				<control type="label">
					<visible>!VideoPlayer.Content(livetv)</visible>
					<width>1000</width>
					<height>33</height>
					<align>left</align>
					<font>Reg24</font>
					<textcolor>$INFO[Skin.String(BingieOSDDeatailsTextColor)]</textcolor>
					<label>$VAR[premiered_or_year,,   ]$INFO[VideoPlayer.MPAA,,   ]$INFO[VideoPlayer.Duration(mins),,m]</label>
					<scroll>false</scroll>
				</control>
				<!-- Tagline -->
				<control type="label">
					<visible>!VideoPlayer.Content(livetv) + !VideoPlayer.Content(episodes)</visible>
					<width>1130</width>
					<height>57</height>
					<align>left</align>
					<font>Reg32</font>
					<textcolor>$INFO[Skin.String(BingieOSDSubLabelTextColor)]</textcolor>
					<label>[B]$INFO[VideoPlayer.Tagline][/B]</label>
					<scroll>false</scroll>
					<visible>!String.IsEmpty(VideoPlayer.Tagline)</visible>
				</control>
				<!-- plot -->
				<control type="textbox">
					<animation effect="slide" start="0" end="0,2" time="0" condition="VideoPlayer.Content(livetv)">Conditional</animation>
					<animation effect="slide" start="0" end="0,9" time="0" condition="VideoPlayer.Content(episodes)">Conditional</animation>
					<height min="0" max="115">auto</height>  
                    <width max="680">auto</width>
					<label>$INFO[VideoPlayer.Plot]</label>
					<textcolor>$INFO[Skin.String(BingieOSDPlotTextColor)]</textcolor>
					<align>justify</align>
					<font>Reg28</font>
					<visible>!String.IsEmpty(VideoPlayer.Plot)</visible>
				</control>
			</control>
		</control>
		</control>
	</include>
	
	<include name="OSDInfoPanelBingie2">
		<control type="group">
					<visible>VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(livetv)</visible>
					<visible>[Skin.HasSetting(EnableOSDInfo) + Window.IsActive(videoosd)] | [Player.ShowInfo + !Window.IsActive(videoosd)]</visible>
					<visible>!Window.IsActive(notification) + !Window.IsActive(extendedprogressdialog) + !Window.IsActive(DialogPlayerProcessInfo.xml)</visible>
					<include>HideOsdConditions</include>
					<animation effect="fade" time="350" delay="250" condition="Window.IsActive(videoosd)">Visible</animation>
					<animation effect="fade" end="0" time="350" condition="Window.IsActive(videoosd)">Hidden</animation>
				<!-- Finish Time OSD Info -->
				<control type="label">
					<description>Finish Time</description>
					<visible>Skin.HasSetting(EnableTimeInfo)</visible>
					<visible>!VideoPlayer.Content(livetv)</visible>
					<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
					<include content="posx" condition="VideoPlayer.HasEpg">
						<param name="posx" value="406" />
					</include>
					<bottom>25</bottom>
					<left>258</left>
					<width>400</width>
					<align>left</align>
					<font>Reg30</font>
					<textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
					<!--<label>$VAR[FinishTime, [B]$LOCALIZE[31112]: [/B]]</label>-->
					<label>[B]$LOCALIZE[31112]: [/B] [B]$VAR[FinishTime][/B] </label>
				</control>
				
				<!-- Current Time OSD Info-->
				<control type="label">
					<description>Current Time</description>
					<visible>Skin.HasSetting(EnableTimeInfo)</visible>
					<visible>!VideoPlayer.Content(livetv)</visible>
					<bottom>126</bottom>
					<posy>0</posy>
					<width>1920</width>
					<align>center</align>
					<font>Bold30</font>
					<textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
					<info>System.Time</info>
				</control>
	
				<!-- Total Duration OSD Info -->
				<control type="label">
					<description>Total Duration</description>
					<visible>Skin.HasSetting(EnableTimeInfo)</visible>
					<visible>!VideoPlayer.Content(livetv)</visible>
					<animation end="-45,0" time="0" effect="slide" condition="[!String.IsEqual(Player.Duration(hh),00) + Player.Seeking + [String.IsEqual(Player.TimeRemaining(hh),00) | [VideoPlayer.HasEpg + String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Duration(hh),00) + String.IsEqual(Player.TimeRemaining(hh),00)">Conditional</animation>
					<include content="posx" condition="VideoPlayer.HasEpg">
						<param name="posx" value="406" />
					</include>
					<bottom>25</bottom>
					<right>190</right>
					<width>300</width>
					<align>left</align>
					<font>Reg30</font>
					<textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
					<label>[B]$LOCALIZE[180]: $VAR[TotalDuration][/B]</label>
				</control>
		</control>
	</include>	
    
    <variable name="OSDImageDefault">
		<value condition="![VideoPlayer.Content(livetv) + Skin.HasSetting(NoPvrArtOSD)] + !String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
        <value condition="![VideoPlayer.Content(livetv) + Skin.HasSetting(NoPvrArtOSD)] + !String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <!-- no posters -->
		<value condition="!String.IsEmpty(Player.Icon)">$INFO[Player.Icon]</value>
		<value condition="!String.IsEmpty(PVR.EpgEventIcon)">$INFO[PVR.EpgEventIcon]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
		<value>defaultvideo.png</value>
	 </variable>

	<variable name="OSDImageNoPoster">
		<value condition="!String.IsEmpty(Player.Icon)">$INFO[Player.Icon]</value>
		<value condition="!String.IsEmpty(PVR.EpgEventIcon)">$INFO[PVR.EpgEventIcon]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
	</variable>

	<variable name="OSDLabel1">
        <value condition="Player.HasVideo + VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelNumberLabel,, - ]$INFO[VideoPlayer.ChannelName]</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(episodes) + !String.IsEmpty(VideoPlayer.TvShowTitle)">$INFO[VideoPlayer.TVShowTitle] • $LOCALIZE[20373] $INFO[VideoPlayer.Season]</value>
        <value condition="Player.HasAudio + !String.IsEmpty(MusicPlayer.Artist)">$INFO[MusicPlayer.Artist]</value>
        <value condition="Player.HasAudio + String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.ChannelName)">$INFO[MusicPlayer.ChannelName]</value>
        <value>$LOCALIZE[31040]</value>
	 </variable>

	 <variable name="OSDLabel2">
        <value condition="Player.HasVideo + VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.Episode]. $INFO[VideoPlayer.Title]</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(livetv) + [!String.IsEmpty(VideoPlayer.Episode) + !String.IsEmpty(VideoPlayer.EpisodeName)]">$INFO[VideoPlayer.Title] - $INFO[VideoPlayer.EpisodeName]</value>
        <value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
        <value condition="Player.HasAudio">$INFO[MusicPlayer.Title]</value>
	 </variable>
     
	 <variable name="OSDLabel3">
        <value condition="Player.HasVideo + VideoPlayer.Content(livetv) + !String.IsEmpty(VideoPlayer.NextTitle) + !Window.IsActive(VideoOSD)">$LOCALIZE[19031]: $INFO[VideoPlayer.NextTitle]</value>
        <value condition="Player.HasVideo + !VideoPlayer.Content(livetv) + String.IsEmpty(VideoPlayer.NextTitle) + !Window.IsActive(VideoOSD) + !String.IsEmpty(player.chaptercount) + !String.IsEqual(player.chaptercount,00)">$INFO[player.chapter,[B]$LOCALIZE[21396]:[/B] ,]$INFO[player.chaptercount,/,]$INFO[player.chaptername, - ,]</value>
        <value condition="Player.HasAudio + !String.IsEmpty(MusicPlayer.Offset(1).Artist)">[COLOR=$INFO[Skin.String(OSDPrimaryTextColor)]]$LOCALIZE[554]:[/COLOR] $INFO[MusicPlayer.PlaylistPosition]/$INFO[MusicPlayer.PlaylistLength] - [COLOR=$INFO[Skin.String(OSDPrimaryTextColor)]]$LOCALIZE[19031]:[/COLOR] $INFO[MusicPlayer.Offset(1).Artist] - $INFO[MusicPlayer.Offset(1).Title]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Genre) + !Window.IsActive(VideoOSD) + !String.Contains(VideoPlayer.Genre,unknown)">$LOCALIZE[515]: $INFO[VideoPlayer.Genre]</value>
	 </variable>

	<variable name="OSDLabel4">
		<value condition="Player.HasVideo + VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelNumberLabel,,: ]$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes) + !String.IsEmpty(VideoPlayer.TvShowTitle)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="Player.HasAudio + !String.IsEmpty(MusicPlayer.Artist)">$INFO[MusicPlayer.Artist]</value>
		<value condition="Player.HasAudio + String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.ChannelName)">$INFO[MusicPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + ![String.Contains(VideoPlayer.Title,movie-trailer) | String.Contains(VideoPlayer.Title,tvshow-trailer)]">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasVideo + [String.Contains(VideoPlayer.Title,movie-trailer) | String.Contains(VideoPlayer.Title,tvshow-trailer)]"/>
		<value>$LOCALIZE[31040]</value>
	</variable>

	<variable name="OSDLabel5">
		<value condition="Player.HasVideo + VideoPlayer.Content(Episodes)">[UPPERCASE]$INFO[VideoPlayer.Season,S,]:$INFO[VideoPlayer.Episode,E,][/UPPERCASE]$INFO[VideoPlayer.Title, ","]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title]$INFO[VideoPlayer.EpisodeName, - ,]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Title]</value>
	</variable>

	<variable name="PlayerTitle">
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value>$INFO[VideoPlayer.Title]</value>
	</variable>

	<variable name="PlayTimeFormat">
		<value condition="Player.Seeking">$VAR[SeekTime]</value>
		<value condition="VideoPlayer.HasEPG + String.IsEqual(PVR.EpgEventElapsedTime(hh),00)">$INFO[PVR.EpgEventElapsedTime(mm:ss)]</value>
		<value condition="VideoPlayer.HasEPG">$INFO[PVR.EpgEventElapsedTime]</value>
		<value condition="String.IsEqual(Player.Time(hh),00)">$INFO[Player.Time(mm:ss)]</value>
		<value>$INFO[Player.Time]</value>
	</variable>

	<variable name="TimeRemainingFormat">
		<value condition="VideoPlayer.HasEPG + String.IsEqual(PVR.EpgEventRemainingTime(hh),00)">$INFO[PVR.EpgEventRemainingTime(mm:ss)]</value>
		<value condition="VideoPlayer.HasEPG">$INFO[PVR.EpgEventRemainingTime]</value>
		<value condition="String.IsEqual(Player.TimeRemaining(hh),00)">$INFO[Player.TimeRemaining(mm:ss)]</value>
		<value>$INFO[Player.TimeRemaining]</value>
	</variable>

	<variable name="PlayTime">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventElapsedTime)">$INFO[PVR.EpgEventElapsedTime(hh:mm:ss)]</value>
		<value>$INFO[Player.Time(hh:mm:ss)]</value>
	</variable>

	<variable name="RemainingTime">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventRemainingTime)">$INFO[PVR.EpgEventRemainingTime(hh:mm:ss)]</value>
		<value>$INFO[Player.TimeRemaining(hh:mm:ss)]</value>
	</variable>

	<variable name="TotalDuration">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventDuration)">$INFO[PVR.EpgEventDuration]</value>
		<value>$INFO[Player.Duration]</value>
	</variable>

	<variable name="TotalDurationFormatted">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventDuration) + String.IsEqual(PVR.EpgEventDuration(hh),00) + [!String.IsEqual(PVR.EpgEventDuration(mm),00) | !String.IsEqual(PVR.EpgEventDuration(ss),00)]">$INFO[PVR.EpgEventDuration(mm:ss)]</value>
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventDuration) + [!String.IsEqual(PVR.EpgEventDuration(mm),00) | !String.IsEqual(PVR.EpgEventDuration(ss),00) | !String.IsEqual(PVR.EpgEventDuration(hh),00)]">$INFO[PVR.EpgEventDuration]</value>
		<value condition="!String.IsEmpty(Player.Duration) + String.IsEqual(Player.Duration(hh),00)">$INFO[Player.Duration(mm:ss)]</value>
		<value condition="!String.IsEmpty(Player.Duration)">$INFO[Player.Duration]</value>
	</variable>

	<variable name="SeekTime">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventSeekTime) + String.IsEqual(PVR.EpgEventSeekTime(hh),00)">$INFO[PVR.EpgEventSeekTime(mm:ss)]</value>
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventSeekTime)">$INFO[PVR.EpgEventSeekTime]</value>
		<value condition="String.IsEqual(Player.SeekTime(hh),00)">$INFO[Player.SeekTime(mm:ss)]</value>
		<value>$INFO[Player.SeekTime]</value>
	</variable>

	<variable name="FinishTime">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventFinishTime)">$INFO[PVR.EpgEventFinishTime]</value>
		<value>$INFO[Player.FinishTime]</value>
	</variable>

	<variable name="premiered_or_year">
		<value condition="VideoPlayer.Content(episodes) + Skin.HasSetting(EnableAirDate)">$INFO[VideoPlayer.Premiered]</value>
		<value>$INFO[VideoPlayer.Year]</value>
	</variable>
     
     <variable name="PlayerActionLabel">
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking">[B]$LOCALIZE[15107]:[/B] $INFO[Player.CacheLevel]%</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![Player.Forwarding | Player.Rewinding] + Player.seeking">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekStepSize]</value>
		<value condition="Player.DisplayAfterSeek  + ![Player.Forwarding | Player.Rewinding] + !String.IsEmpty(Player.SeekOffset)">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekOffset]</value>
		<value condition="Player.seeking">[B]$LOCALIZE[31255][/B] $VAR[SeekTime] - $VAR[TotalDuration]</value>
		<value condition="Player.Forwarding2x">[B]$LOCALIZE[31253][/B] x2</value>
		<value condition="Player.Forwarding4x">[B]$LOCALIZE[31253][/B] x4</value>
		<value condition="Player.Forwarding8x">[B]$LOCALIZE[31253][/B] x8</value>
		<value condition="Player.Forwarding16x">[B]$LOCALIZE[31253][/B] x16</value>
		<value condition="Player.Forwarding32x">[B]$LOCALIZE[31253][/B] x32</value>
		<value condition="Player.Rewinding2x">[B]$LOCALIZE[31254][/B] x2</value>
		<value condition="Player.Rewinding4x">[B]$LOCALIZE[31254][/B] x4</value>
		<value condition="Player.Rewinding8x">[B]$LOCALIZE[31254][/B] x8</value>
		<value condition="Player.Rewinding16x">[B]$LOCALIZE[31254][/B] x16</value>
		<value condition="Player.Rewinding32x">[B]$LOCALIZE[31254][/B] x32</value>
		<value condition="!String.IsEmpty(Player.FinishTime) | !String.IsEmpty(PVR.EpgEventFinishTime)">$LOCALIZE[31112]: $VAR[FinishTime]</value>
	 </variable>

	<variable name="PlayerActionLabelBingie">
		<value condition="Player.DisplayAfterSeek  + ![Player.Forwarding | Player.Rewinding | Player.Paused] + !String.IsEmpty(Player.SeekOffset) + String.StartsWith(Player.SeekOffset,-83)">00:00</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![Player.Forwarding | Player.Rewinding] + Player.seeking">$INFO[Player.SeekStepSize]</value>
		<value condition="!Player.Seeking + Player.DisplayAfterSeek  + ![Player.Forwarding | Player.Rewinding | Player.Paused] + !String.IsEmpty(Player.SeekOffset)">$INFO[Player.SeekOffset]</value>
		<value condition="Player.Forwarding2x | Player.Rewinding2x">x2</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">x4</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">x8</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">x16</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">x32</value>
	</variable>
     
     <include name="HideOsdConditions">
        <visible>
            !Window.IsActive(PVROSDTeletext) + !Window.IsActive(PVROSDChannels) +
            !Window.IsActive(sliderdialog) + !Window.IsActive(script.pseudotv.TVOverlay.xml) +
            !Window.IsActive(script.pseudotv.live.TVOverlay.xml) + !Window.IsActive(musicplaylist)
        </visible>
     </include>

	<!-- Seek/Pause Image Indicator Defs -->
	<include name="PlayerImageIndicatorDefs">
		<left>170</left>
		<bottom>78</bottom>
		<width>70</width>
		<height>70</height>
		<colordiffuse>$INFO[Skin.String(OSDBingieButtonsFocusColor)]</colordiffuse>
		<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
	</include>

	<include name="OSDButtons_Bingie_Layout">
		<control type="grouplist" id="300">			
			<animation type="WindowOpen">
				<effect type="slide" start="0,-400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="0" end="100" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="Window.IsVisible(1158)">
				<effect type="slide" start="0,0" end="0,-400" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="350" reversible="false" />
			</animation>
			<animation type="WindowClose" condition="!Window.IsVisible(1158)">
				<effect type="slide" start="0,0" end="0,-300" tween="cubic" easing="out" delay="0" time="800" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="700" reversible="false"/>
			</animation>			
			<width>auto</width>
			<height>290</height>
			<itemgap>25</itemgap>
			<onleft>noop</onleft>
            <onright>noop</onright>
			<orientation>vertical</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<!-- Vignette Mask -->
			<control type="image">
				<width>100%</width>
				<height>100%</height>
				<texture background="true" flipy="true">overlays/osd_gradient.png</texture>
				<animation effect="fade" start="100" end="0" time="0" condition="Window.IsActive(OSDVideoSettings) | Window.IsActive(OSDAudioSettings) | Window.IsActive(OSDSubtitleSettings) | Window.IsActive(videobookmarks) | Window.IsActive(pvrchannelguide)">Conditional</animation>
			</control>
			<control type="group">
			<visible>!Window.IsActive(videobookmarks) + !Window.IsActive(pvrchannelguide)</visible>
			<animation effect="fade" time="400" reversible="true">Visible</animation>
            <control type="grouplist" id="400">
				<posx>$PARAM[toposdposleft]</posx>
				<top>$PARAM[postop]</top>
                <width>auto</width>
                <height>$PARAM[topsize]</height>
                <itemgap>$PARAM[gap]</itemgap>
                <onleft>noop</onleft>
                <onright>noop</onright>
                <ondown condition="Skin.HasSetting(EnableOSDCastInfo)">50</ondown>
				<ondown condition="Skin.HasSetting(EnableOSDCrewInfo)">51</ondown>
				<ondown condition="![Skin.HasSetting(EnableOSDCastInfo) | Skin.HasSetting(EnableOSDCrewInfo)]">200</ondown>
                <orientation>horizontal</orientation>

				<control type="button" id="204">
					<description>Exit</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<font/>
					<label/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]back_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]back.png</texturenofocus>
					<onclick>PlayerControl(Stop)</onclick>
					<visible>Skin.HasSetting(bingie_osd_buttons_back)</visible>
				</control>
				<control type="togglebutton" id="10">
					<description>record</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]recordoff_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]recordoff.png</texturenofocus>
					<alttexturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]recordon_fo.png</alttexturefocus>
					<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]recordon.png</alttexturenofocus>
					<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
					<onclick>PVR.ToggleRecordPlayingChannel</onclick>
					<visible>PVR.CanRecordPlayingChannel</visible>
					<visible>Skin.HasSetting(bingie_osd_buttons_record)</visible>
				</control>
				<control type="button" id="104">
					<description>Subtitles</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]subtitles_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]subtitles.png</texturenofocus>
					<onclick>ActivateWindow(osdsubtitlesettings)</onclick>
					<visible>Skin.HasSetting(bingie_osd_buttons_subtitles)</visible>
					<visible>!Player.HasAudio</visible>
				</control>
                <control type="button" id="101">
                    <description>Audio Settings</description>
                    <width>$PARAM[topsize]</width>
                    <height>$PARAM[topsize]</height>
                    <label/>
                    <font/>
                    <texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]audio_fo.png</texturefocus>
                    <texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]audio.png</texturenofocus>
                    <onclick>ActivateWindow(124)</onclick>
					<visible>Skin.HasSetting(bingie_osd_buttons_audio)</visible>
                </control>
				<control type="button" id="811">
					<description> playlist </description>
					<width>$PARAM[topsize]</width>
                    <height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]playlist_fo.png</texturefocus>
                    <texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]playlist.png</texturenofocus>
					<visible>!String.IsEqual(Playlist.Length(music),0) + Player.HasAudio</visible>
					<onclick>SetProperty(playlistdialog,show,Home)</onclick>
					<onclick>Dialog.Close(MusicOSD)</onclick>
					<onclick>ActivateWindow(musicplaylist)</onclick>
					<visible>Skin.HasSetting(bingie_osd_buttons_playlist)</visible>
				</control>
				<control type="button" id="500">
					<description> vizualisation addon </description>
					<width>$PARAM[topsize]</width>
                    <height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]viz_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]viz.png</texturenofocus>
					<onfocus>SetProperty(VizSlide,hide,Home)</onfocus>
					<visible>Player.HasAudio</visible>
					<visible>Skin.HasSetting(bingie_osd_buttons_viz)</visible>
				</control>
				<control type="togglebutton" id="701">
					<description> lyrics </description>
					<width>$PARAM[topsize]</width>
                    <height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]lyrics_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]lyrics.png</texturenofocus>
					<alttexturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]lyrics_fo.png</alttexturefocus>
					<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]lyrics.png</alttexturenofocus>
					<onclick>RunScript($INFO[Skin.String(LyricScript_iconspath)])</onclick>
					<altclick>Skin.SetAddon(LyricScript_iconspath,xbmc.python.lyrics)</altclick>
					<altclick>RunScript($INFO[Skin.String(LyricScript_iconspath)])</altclick>
					<usealttexture>!Skin.String(LyricScript_iconspath)</usealttexture>
					<visible>Player.HasAudio</visible>
					<visible>System.HasAddon(script.cu.lrclyrics)</visible>
					<visible>Skin.HasSetting(bingie_osd_buttons_lyrics)</visible>
				</control>
                <control type="button" id="102">
                    <description>Video Settings</description>
                    <width>$PARAM[topsize]</width>
                    <height>$PARAM[topsize]</height>
                    <label/>
                    <font/>
                    <texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]video_fo.png</texturefocus>
                    <texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]video.png</texturenofocus>
                    <onclick>ActivateWindow(123)</onclick>
					<visible>Skin.HasSetting(bingie_osd_buttons_video)</visible>
					<visible>Player.HasVideo</visible>
                </control>
				<control type="button" id="806">
					<description> pvr </description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]channellist_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]channellist.png</texturenofocus>
					<visible>VideoPlayer.Content(livetv)</visible>
					<onclick>ActivateWindow(PVROSDChannels)</onclick>
					<visible>Skin.HasSetting(bingie_osd_buttons_channellist)</visible>
				</control>
				<control type="button" id="807">
					<description>pvrguide</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]epg_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]epg.png</texturenofocus>
					<visible>VideoPlayer.Content(livetv) + VideoPlayer.HasEpg</visible>
					<onclick>ActivateWindow(pvrchannelguide)</onclick>
					<visible>Skin.HasSetting(bingie_osd_buttons_pvrguide)</visible>
				</control>
				<control type="button" id="214">
					<description>bookmarks</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]bookmarks_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]bookmarks.png</texturenofocus>
					<onclick>ActivateWindow(VideoBookmarks)</onclick>
					<visible>!VideoPlayer.Content(livetv)</visible>
					<visible>Skin.HasSetting(bingie_osd_buttons_bookmarks)</visible>
					<visible>Player.HasVideo</visible>
				</control>
				<control type="button" id="209">
					<description>Play From Beginning</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<font/>
					<label/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]play_beginning_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]play_beginning.png</texturenofocus>
					<onclick>seek(-298800)</onclick>
					<onclick condition="Player.Paused">PlayerControl(Play)</onclick>
					<visible>Player.SeekEnabled</visible>
					<visible>!Player.HasAudio</visible>
					<visible>Skin.HasSetting(bingie_osd_buttons_play_beginning)</visible>
				</control>
                <control type="button" id="808">
                    <description>infopanel</description>
                    <width>$PARAM[topsize]</width>
                    <height>$PARAM[topsize]</height>
                    <label/>
                    <font/>
                    <texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]info_fo.png</texturefocus>
                    <texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]info.png</texturenofocus>
                    <visible>Player.HasVideo</visible>
					<visible>VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(livetv)</visible>
                    <onclick>Skin.ToggleSetting(EnableOSDInfo)</onclick>
					<visible>Skin.HasSetting(bingie_osd_buttons_info)</visible>
                </control>
            </control>
            <control type="label">
				<visible>Integer.IsGreater(Container(300).NumItems,0)</visible>
				<posy>143</posy>
				<left>160</left>
                <height>auto</height>
                <width>auto</width>
                <align>left</align>
                <font>Reg28</font>
                <textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
                <label>$VAR[osd_button_description]</label>
                <scroll>false</scroll>
            </control>
			</control>
			
        </control>
		
		<control type="group">
			<animation type="WindowOpen">
				<effect type="slide" start="0,-400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="0" end="100" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="Window.IsVisible(1158)">
				<effect type="slide" start="0,0" end="0,-400" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="350" reversible="false" />
			</animation>
			<animation type="WindowClose" condition="!Window.IsVisible(1158)">
				<effect type="slide" start="0,0" end="0,-300" tween="cubic" easing="out" delay="0" time="800" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="700" reversible="false"/>
			</animation>
			<visible>![Window.IsActive(OSDVideoSettings) | Window.IsActive(OSDAudioSettings) | Window.IsActive(OSDSubtitleSettings) | Window.IsActive(subtitlesearch) | Window.IsActive(sliderdialog)]</visible>
			<top>90</top>
			<align>right</align>
			<width>auto</width>
			<height>100</height>
			<control type="label">
				<height>40</height>
				<textwidth>1193</textwidth>
				<align>right</align>
				<textoffsetx>86</textoffsetx>
				<font>Bold28</font>
				<textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
				<label>$VAR[OSDLabel4]</label>
				<scroll>false</scroll>
			</control>
			<control type="label">
				<textwidth>1193</textwidth>
				<top>40</top>
				<height>40</height>
				<align>right</align>
				<font>Reg28</font>
				<textcolor>$INFO[Skin.String(BingieOSDTextColor)]</textcolor>
				<label>$VAR[OSDLabel5]</label>
				<textoffsetx>86</textoffsetx>
				<scroll>false</scroll>
			</control>
		</control>
		<control type="grouplist" id="200">
			<animation type="WindowOpen" condition="![[Player.Forwarding | Player.Rewinding] + Player.HasAudio]">
				<effect type="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="0" end="100" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="Window.IsVisible(1158) | Player.Paused">
				<effect type="fade" start="100" end="0" delay="0" time="0" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="!Window.IsVisible(1158)">
				<effect type="slide" start="0,0" end="0,300" tween="cubic" easing="out" delay="0" time="800" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="700" reversible="false"/>
			</animation>
			<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
			<animation effect="fade" start="100" end="0" time="0" condition="Player.Forwarding | Player.Rewinding">Conditional</animation>
			<posx>$PARAM[bottomosdposleft]</posx>
			<bottom>$PARAM[posbottom]</bottom>
			<width>1540</width>
			<height>$PARAM[bottomsize]</height>
			<itemgap>$PARAM[gap]</itemgap>
			<onleft condition="!Player.SeekEnabled">noop</onleft>
            <onleft condition="Player.SeekEnabled + Player.Paused">PlayerControl(Play)</onleft>
            <onleft condition="Player.SeekEnabled">back</onleft>
			<onright condition="!Player.SeekEnabled">noop</onright>
            <onright condition="Player.SeekEnabled + Player.Paused">PlayerControl(Play)</onright>
			<onright condition="Player.SeekEnabled">back</onright>
			<onup condition="Skin.HasSetting(EnableOSDCastInfo)">50</onup>
			<onup condition="Skin.HasSetting(EnableOSDCrewInfo)">51</onup>
			<onup condition="![Skin.HasSetting(EnableOSDCastInfo) | Skin.HasSetting(EnableOSDCrewInfo)]">300</onup>
			<ondown condition="Player.HasAudio">2000</ondown>
			<ondown condition="Skin.HasSetting(EnableOSDInfo)">3000</ondown>
			<orientation>horizontal</orientation>			
			<control type="togglebutton" id="203">
				<altlabel>208</altlabel>
				<description>Play Pause</description>
				<width>70</width>
				<height>70</height>
				<font/>
				<label>208</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]pause_fo.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]pause.png</texturenofocus>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsFocusColor)]">$PARAM[iconspath]play_fo.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDBingieButtonsColor)]">$PARAM[iconspath]play.png</alttexturenofocus>
				<onclick>PlayerControl(Play)</onclick>
			</control>
		</control>
		
		<control type="grouplist" id="2000">
			<animation type="WindowOpen">
				<effect type="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="0" end="100" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="Window.IsVisible(1158) | Player.Paused">
				<effect type="fade" start="100" end="0" delay="0" time="0" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="!Window.IsVisible(1158)">
				<effect type="slide" start="0,0" end="0,300" tween="cubic" easing="out" delay="0" time="800" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="700" reversible="false"/>
			</animation>
			<animation effect="fade" time="400" delay="0" reversible="true">Visible</animation>
			<visible>Player.HasAudio</visible>
			<align>center</align>
			<bottom>30</bottom>
			<width>100%</width>
			<height>50</height>
			<itemgap>15</itemgap>
			<onup>200</onup>
			<orientation>horizontal</orientation>
			
			<control type="button" id="207">
			  <width>200</width>
			  <height>50</height>
			  <label>$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</label>
			  <font>Reg26</font>
			  <textwidth>160</textwidth>
			  <texturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</texturefocus>
			  <texturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</texturenofocus>
			  <onclick>PlayerControl(Repeat)</onclick>
			  <visible>!Playlist.IsRepeatOne + !Playlist.IsRepeat</visible>
			</control>
			<control type="button" id="208">
			  <width>200</width>
			  <height>50</height>
			  <label>$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</label>
			  <font>Reg26</font>
			  <textwidth>160</textwidth>
			  <texturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</texturefocus>
			  <texturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</texturenofocus>
			  <visible>Playlist.IsRepeatOne</visible>
			  <onclick>PlayerControl(Repeat)</onclick>
			</control>
			<control type="button" id="210">
			  <width>200</width>
			  <height>50</height>
			  <label>$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</label>
			  <font>Reg26</font>
			  <textwidth>160</textwidth>
			  <texturefocus  border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</texturefocus>
			  <texturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</texturenofocus>
			  <visible>Playlist.IsRepeat</visible>
			  <onclick>PlayerControl(Repeat)</onclick>
			</control>
			
			<control type="togglebutton" id="212">
			  <width>200</width>
              <height>50</height>
			  <label>$LOCALIZE[590]$INFO[Playlist.Random, : ]</label>
			  <altlabel>$LOCALIZE[590] : $LOCALIZE[16041]</altlabel>
			  <onup>200</onup>
			  <font>Reg26</font>
			  <textwidth>160</textwidth>
			  <texturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</texturefocus>
			  <texturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</texturenofocus>
			  <usealttexture>Playlist.IsRandom</usealttexture>
			  <alttexturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</alttexturefocus>
			  <alttexturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</alttexturenofocus>
			  <onclick>PlayerControl(Random)</onclick>
			</control>
		</control>
		
		<control type="grouplist" id="3000">
			<animation effect="fade" time="350" delay="200" reversible="false">Visible</animation>
			<animation effect="fade" time="350" reversible="false">Hidden</animation>
			<animation type="WindowOpen">
				<effect type="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="0" end="100" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="Window.IsVisible(1158) | Player.Paused | Player.Playing">
				<effect type="fade" start="100" end="0" delay="0" time="0" reversible="false"/>
			</animation>
			<animation type="WindowClose" condition="!Window.IsVisible(1158)">
				<effect type="slide" start="0,0" end="0,300" tween="cubic" easing="out" delay="0" time="800" reversible="false"/>
				<effect type="fade" start="100" end="0" delay="0" time="700" reversible="false"/>
			</animation>
			<visible>Skin.HasSetting(EnableOSDInfo) + !VideoPlayer.Content(livetv)</visible>
			
			<align>center</align>
			<bottom>30</bottom>
			<width>100%</width>
			<height>50</height>
			<itemgap>15</itemgap>
			<onup>200</onup>
			<orientation>horizontal</orientation>			
			
			<control type="togglebutton" id="3001">
			  <visible>Skin.HasSetting(EnableOSDInfo)</visible>
			  <animation effect="fade" time="350">Hidden</animation>
			  <width>200</width>
			  <height>50</height>
			  <label>$LOCALIZE[206]</label>
			  <altlabel>$LOCALIZE[15067]</altlabel>
			  <font>Reg26</font>
			  <textwidth>160</textwidth>
			  <texturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</texturefocus>
			  <texturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</texturenofocus>
			  <usealttexture>Skin.HasSetting(EnableOSDCastInfo)</usealttexture>
			  <alttexturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</alttexturefocus>
			  <alttexturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</alttexturenofocus>
			  <onclick>Skin.ToggleSetting(EnableOSDCastInfo)</onclick>
			  <onclick>Skin.Reset(EnableOSDCrewInfo)</onclick>
			</control>
			<control type="togglebutton" id="3002">
			  <visible>Skin.HasSetting(EnableOSDInfo)</visible>
			  <animation effect="fade" time="350" condition="Skin.HasSetting(UseBingieOSD)">Hidden</animation>
			  <width>200</width>
			  <height>50</height>
			  <label>$LOCALIZE[31089]</label>
			  <altlabel>$LOCALIZE[15067]</altlabel>
			  <font>Reg26</font>
			  <textwidth>160</textwidth>
			  <texturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</texturefocus>
			  <texturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</texturenofocus>
			  <usealttexture>Skin.HasSetting(EnableOSDCrewInfo)</usealttexture>
			  <alttexturefocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">bingie/border/default_button_focus.png</alttexturefocus>
			  <alttexturenofocus border="10" background="true" colordiffuse="$INFO[Skin.String(ViewDetailsBorderUnfocusColor)]">bingie/border/default_button_focus.png</alttexturenofocus>
			  <onclick>Skin.ToggleSetting(EnableOSDCrewInfo)</onclick>
			  <onclick>Skin.Reset(EnableOSDCastInfo)</onclick>
			</control>
		</control>
		
		<include content="OSDInfoWidget">
			<param name="id" value="50" />	
			<param name="top" value="370" />			
			<param name="visible" value="Skin.HasSetting(EnableOSDInfo) + Skin.HasSetting(EnableOSDCastInfo)" />
			<param name="widgetTags" value="WidgetTagOverlayEnable" />
            <param name="force_tags" value="true" />
			<param name="layout">PosterPanelBingie</param>
			<param name="content" value="$VAR[Path_OSD_Cast]" />
		</include>

		<include content="OSDInfoWidget">
			<param name="id" value="51" />	
			<param name="top" value="370" />			
			<param name="visible" value="Skin.HasSetting(EnableOSDInfo) + Skin.HasSetting(EnableOSDCrewInfo)" />
			<param name="widgetTags" value="WidgetTagOverlayEnable" />
            <param name="force_tags" value="true" />
			<param name="layout">PosterPanelBingie</param>
			<param name="content" value="$VAR[Path_OSD_Crew]" />
		</include>			
		
	</include>

	<include name="JumpIndicator">
		<control type="group">
			<visible>Player.Seeking + !String.IsEmpty(Player.SeekStepSize)</visible>
			<visible>$PARAM[visibility]</visible>
			<animation delay="150" time="200" effect="fade">Visible</animation>
			<animation time="250" start="100" end="0" effect="fade" condition="String.IsEmpty(Player.SeekStepSize)">Hidden</animation>
			<centerleft>$PARAM[centerleft]</centerleft>
			<control type="image">
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<align>center</align>
				<height>100%</height>
				<texture colordiffuse="ccfffeff">$PARAM[image]</texture>
			</control>
			<control type="label">
				<height>100%</height>
				<width>auto</width>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[Player.SeekStepSize]</label>
				<font>$PARAM[font]</font>
				<textcolor>ccfffeff</textcolor>
			</control>
		</control>
	</include>

    <variable name="osd_button_description">
		<value condition="Control.HasFocus(10)">[UPPERCASE]$LOCALIZE[264][/UPPERCASE]</value>
		<value condition="Control.HasFocus(101)">[UPPERCASE]$LOCALIZE[292][/UPPERCASE]</value>
        <value condition="Control.HasFocus(102)">[UPPERCASE]$LOCALIZE[291][/UPPERCASE]</value>
        <value condition="Control.HasFocus(104)">[UPPERCASE]$LOCALIZE[24012][/UPPERCASE]</value>
        <value condition="Control.HasFocus(204)">[UPPERCASE]$LOCALIZE[13012][/UPPERCASE]</value>
		<value condition="Control.HasFocus(209)">[UPPERCASE]$LOCALIZE[12021][/UPPERCASE]</value>
		<value condition="Control.HasFocus(214)">[UPPERCASE]$LOCALIZE[298][/UPPERCASE]</value>
		<value condition="Control.HasFocus(215)">[UPPERCASE]$LOCALIZE[33061][/UPPERCASE]</value>
		<value condition="Control.HasFocus(500)">[UPPERCASE]$LOCALIZE[250][/UPPERCASE]</value>
		<value condition="Control.HasFocus(701)">[UPPERCASE]$LOCALIZE[24013][/UPPERCASE]</value>
		<value condition="Control.HasFocus(806)">[UPPERCASE]$LOCALIZE[10700][/UPPERCASE]</value>
		<value condition="Control.HasFocus(807)">[UPPERCASE]$LOCALIZE[4][/UPPERCASE]</value>
        <value condition="Control.HasFocus(808)">[UPPERCASE]$LOCALIZE[29915][/UPPERCASE]</value>
		<value condition="Control.HasFocus(811)">[UPPERCASE]$LOCALIZE[559][/UPPERCASE]</value>
		<value>[UPPERCASE]$LOCALIZE[33063][/UPPERCASE]</value>
    </variable>

	<variable name="VideoRatingTopBarLabel">
		<value condition="String.Contains(VideoPlayer.MPAA,rated)">$INFO[VideoPlayer.MPAA]</value>
		<value>$INFO[VideoPlayer.MPAA,$LOCALIZE[31023] ,]</value>
	</variable>

	<variable name="ForwardRewindIndicatorImage">
		<value condition="Player.Forwarding">osd/bingie/forward_fo.png</value>
		<value condition="Player.Rewinding">osd/bingie/rewind_fo.png</value>
	</variable>
	
	<variable name="PlayingPausedIndicatorImage">
		<value condition="Player.Paused">osd/bingie/play_fo.png</value>
		<value condition="Player.Playing">osd/bingie/pause_fo.png</value>
	</variable>
	
	<variable name="OSDMenuFocus">
		<value condition="Skin.HasSetting(EnableOSDCastInfo) + Skin.HasSetting(UseBingieOSD)">50</value>
		<value condition="!Skin.HasSetting(UseBingieOSD) + !Skin.HasSetting(EnableOSDCrewInfo)">50</value>
        <value condition="Skin.HasSetting(EnableOSDCrewInfo)">51</value>
    </variable>
	
	<!-- OSD Info List -->
	<include name="OSDInfoWidget">
        <definition>
                <include content="OSDInfoContainerTemplate">
                    <nested />
                    <param name="id" value="$PARAM[id]"/>
					<param name="top" value="$PARAM[top]"/>
                    <param name="condition1" value="$PARAM[condition1]" />
                    <param name="condition2" value="$PARAM[condition2]" />
					<param name="visible" value="$PARAM[visible]" />
					<param name="content" value="$PARAM[content]" />
                </include>
        </definition>
    </include>
	
	<!-- OSD Info Tamplate -->
	<include name="OSDInfoContainerTemplate">
        <definition>
			<control type="group">
					<visible>$PARAM[visible]</visible>		
					<animation effect="fade" time="350">WindowOpen</animation>
					<animation effect="fade" time="350">WindowClose</animation>
					<animation effect="fade" time="350">Visible</animation>
					<animation effect="fade" time="350">Hidden</animation>					
				<control type="fixedlist" id="$PARAM[id]">
					<animation effect="fade" start="100" end="0" time="350" condition="Container($PARAM[id]).IsUpdating">Conditional</animation>	
					<animation effect="fade" start="0" end="100" time="350" condition="!Container($PARAM[id]).IsUpdating">Conditional</animation>
					<top>$PARAM[top]</top>
					<width>1670</width>
					<height>350</height>
                    <left>126</left>					
					<onleft>50</onleft>
					<onright>50</onright>					
					<onup condition="Skin.HasSetting(UseBingieOSD)">300</onup>
					<ondown condition="Skin.HasSetting(UseBingieOSD)">200</ondown>
					<ondown condition="!Skin.HasSetting(UseBingieOSD)">3000</ondown>
					<scrolltime tween="quadratic">500</scrolltime>
					<preloaditems>4</preloaditems>
					<orientation>horizontal</orientation>
					<onclick>SetProperty(DisableOSDCast,1,home)</onclick>
					<onclick>Action(Close)</onclick>
					<onclick>RunScript(plugin.video.themoviedb.helper,recommendations=oninfo,tmdb_type=person,tmdb_id=$INFO[Container($PARAM[id]).ListItem.UniqueID(tmdb)],window_id=1191)</onclick>
					<itemlayout height="347" width="238">
			        <control type="group">
						<width>240</width>
						<height>340</height>
						<include>PosterPanelBingieLayout</include>
						<control type="group">
                            <include content="$PARAM[layout]Tags">
                                <param name="force_tags" value="$PARAM[force_tags]" />
                                <param name="widgetTags" value="$PARAM[widgetTags]" />
                            </include>
                        </control>
					</control>
					</itemlayout>
					<focusedlayout height="347" width="238" condition="Control.HasFocus($PARAM[id])">
					<control type="group">
						<width>240</width>
						<height>340</height>
						<include>PosterPanelBingieLayoutFocus</include>
						<control type="group">
                            <include content="$PARAM[layout]Tags">
                                <param name="force_tags" value="$PARAM[force_tags]" />
                                <param name="widgetTags" value="$PARAM[widgetTags]" />
                            </include>
                        </control>
					</control>
					</focusedlayout>
					<focusedlayout height="347" width="238" condition="!Control.HasFocus($PARAM[id])">
					<control type="group">
						<width>240</width>
						<height>340</height>
						<include>PosterPanelBingieLayout</include>
						<control type="group">
                            <include content="$PARAM[layout]Tags">
                                <param name="force_tags" value="$PARAM[force_tags]" />
                                <param name="widgetTags" value="$PARAM[widgetTags]" />
                            </include>
                        </control>
					</control>
					</focusedlayout>
					<content>$PARAM[content]</content>
				</control>
				<!-- Fixed Frame -->
				<include content="Bingie_Main_View_Fixed_Frame">
					<left>126</left>
					<param name="containerid" value="$PARAM[id]" />
					<param name="top" value="$PARAM[top]" />
					<param name="width" value="240" />
					<param name="height" value="340" />
					<texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
					<bordersize>2</bordersize>
					<param name="xAxisAnim" value="238" />
					<param name="yAxisAnim" value="350" />
					<animation effect="fade" start="100" end="0" time="350" condition="Container($PARAM[id]).IsUpdating">Conditional</animation>	
					<animation effect="fade" start="0" end="100" time="350" condition="!Container($PARAM[id]).IsUpdating">Conditional</animation>
					<param name="visibility" value="Skin.HasSetting(EnableFixedFrameWidgets)" />
				</include>
				<control type="label">
					<animation effect="fade" start="0" end="100" time="400">Visible</animation>	
					<visible>Container(50).IsUpdating + Skin.HasSetting(EnableOSDCastInfo) + Skin.HasSetting(UseBingieOSD) | Container(51).IsUpdating + Skin.HasSetting(EnableOSDCrewInfo) + Skin.HasSetting(UseBingieOSD)</visible>					
					<top>460</top>
					<height>120</height>
					<align>center</align>
					<label>$LOCALIZE[31215]...</label>
					<font>reg40</font>
					<textcolor>$INFO[Skin.String(BingiePrimaryTextColor)]</textcolor>
					<scroll>true</scroll>
				</control>	
				<control type="label">
					<animation effect="fade" start="0" end="100" time="400">Visible</animation>	
					<visible>Container(50).IsUpdating + !Skin.HasSetting(UseBingieOSD) + !Skin.HasSetting(EnableOSDCrewInfo) | Container(51).IsUpdating + Skin.HasSetting(EnableOSDCrewInfo) + !Skin.HasSetting(UseBingieOSD)</visible>						
					<top>460</top>
					<height>120</height>
					<align>center</align>
					<label>$LOCALIZE[31215]...</label>
					<font>reg40</font>
					<textcolor>$INFO[Skin.String(BingiePrimaryTextColor)]</textcolor>
					<scroll>true</scroll>
				</control>						
			</control>
        </definition>
    </include>
</includes>
